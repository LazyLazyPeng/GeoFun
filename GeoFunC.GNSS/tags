!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon15
A	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon16
AE	tle.c	36;"	d	file:
ARMODE_CONT	rtklib.h	357;"	d
ARMODE_FIXHOLD	rtklib.h	359;"	d
ARMODE_INST	rtklib.h	358;"	d
ARMODE_OFF	rtklib.h	356;"	d
ARMODE_PPPAR	rtklib.h	360;"	d
ARMODE_PPPAR_ILS	rtklib.h	361;"	d
ARMODE_TCAR	rtklib.h	363;"	d
ARMODE_WLNL	rtklib.h	362;"	d
ARMOPT	options.c	52;"	d	file:
AS2R	ppp.c	48;"	d	file:
AS2R	rtklib.h	62;"	d
AU	rtklib.h	61;"	d
Adot	rtklib.h	/^    double Adot,ndot;   \/* Adot,ndot for CNAV *\/$/;"	m	struct:__anon16
BIG_ENDIAN	rcv/rt17.c	269;"	d	file:
BNXSYNC1	rcv/binex.c	23;"	d	file:
BNXSYNC1R	rcv/binex.c	28;"	d	file:
BNXSYNC2	rcv/binex.c	24;"	d	file:
BNXSYNC2R	rcv/binex.c	29;"	d	file:
BNXSYNC3	rcv/binex.c	25;"	d	file:
BNXSYNC3R	rcv/binex.c	30;"	d	file:
BNXSYNC4	rcv/binex.c	26;"	d	file:
BNXSYNC4R	rcv/binex.c	31;"	d	file:
CK2	tle.c	37;"	d	file:
CK4	tle.c	38;"	d	file:
CLIGHT	rtklib.h	59;"	d
CODE_L1A	rtklib.h	260;"	d
CODE_L1B	rtklib.h	261;"	d
CODE_L1C	rtklib.h	251;"	d
CODE_L1E	rtklib.h	259;"	d
CODE_L1I	rtklib.h	297;"	d
CODE_L1L	rtklib.h	258;"	d
CODE_L1M	rtklib.h	255;"	d
CODE_L1N	rtklib.h	256;"	d
CODE_L1P	rtklib.h	252;"	d
CODE_L1Q	rtklib.h	298;"	d
CODE_L1S	rtklib.h	257;"	d
CODE_L1W	rtklib.h	253;"	d
CODE_L1X	rtklib.h	262;"	d
CODE_L1Y	rtklib.h	254;"	d
CODE_L1Z	rtklib.h	263;"	d
CODE_L2C	rtklib.h	264;"	d
CODE_L2D	rtklib.h	265;"	d
CODE_L2I	rtklib.h	290;"	d
CODE_L2L	rtklib.h	267;"	d
CODE_L2M	rtklib.h	272;"	d
CODE_L2N	rtklib.h	273;"	d
CODE_L2P	rtklib.h	269;"	d
CODE_L2Q	rtklib.h	291;"	d
CODE_L2S	rtklib.h	266;"	d
CODE_L2W	rtklib.h	270;"	d
CODE_L2X	rtklib.h	268;"	d
CODE_L2Y	rtklib.h	271;"	d
CODE_L3I	rtklib.h	294;"	d
CODE_L3Q	rtklib.h	295;"	d
CODE_L3X	rtklib.h	296;"	d
CODE_L5I	rtklib.h	274;"	d
CODE_L5Q	rtklib.h	275;"	d
CODE_L5X	rtklib.h	276;"	d
CODE_L6A	rtklib.h	280;"	d
CODE_L6B	rtklib.h	281;"	d
CODE_L6C	rtklib.h	282;"	d
CODE_L6I	rtklib.h	292;"	d
CODE_L6L	rtklib.h	286;"	d
CODE_L6Q	rtklib.h	293;"	d
CODE_L6S	rtklib.h	285;"	d
CODE_L6X	rtklib.h	283;"	d
CODE_L6Z	rtklib.h	284;"	d
CODE_L7I	rtklib.h	277;"	d
CODE_L7Q	rtklib.h	278;"	d
CODE_L7X	rtklib.h	279;"	d
CODE_L8I	rtklib.h	287;"	d
CODE_L8Q	rtklib.h	288;"	d
CODE_L8X	rtklib.h	289;"	d
CODE_NONE	rtklib.h	250;"	d
COMMENTH	rtklib.h	418;"	d
CONST_AMB	ppp_ar.c	22;"	d	file:
COPYRIGHT_RTKLIB	rtklib.h	53;"	d
COS_5	ephemeris.c	75;"	d	file:
CPSTD_VALID	rcv/ublox.c	87;"	d	file:
CRC_16CCIT_LookUp	rcv/septentrio.c	/^static const unsigned int CRC_16CCIT_LookUp[256] = {$/;"	v	file:
CRESSYNC	rcv/crescent.c	30;"	d	file:
D	rtklib.h	/^    float  D[NFREQ+NEXOBS]; \/* observation data doppler frequency (Hz) *\/$/;"	m	struct:__anon9
D2R	rtklib.h	57;"	d
DE2RA	tle.c	22;"	d	file:
DEFURASSR	ephemeris.c	81;"	d	file:
DFRQ1_GLO	rtklib.h	80;"	d
DFRQ2_GLO	rtklib.h	82;"	d
DFTOPT	options.c	47;"	d	file:
DLOPT_FORCE	rtklib.h	421;"	d
DLOPT_HOLDERR	rtklib.h	423;"	d
DLOPT_HOLDLST	rtklib.h	424;"	d
DLOPT_KEEPCMP	rtklib.h	422;"	d
DTTOL	rtklib.h	199;"	d
E6A	tle.c	23;"	d	file:
EFACT_CMP	rtklib.h	92;"	d
EFACT_GAL	rtklib.h	90;"	d
EFACT_GLO	rtklib.h	89;"	d
EFACT_GPS	rtklib.h	88;"	d
EFACT_QZS	rtklib.h	91;"	d
EFACT_SBS	rtklib.h	93;"	d
ENDIAN_TEST	rcv/rt17.c	/^typedef union {unsigned short u2; unsigned char c[2];} ENDIAN_TEST; $/;"	t	typeref:union:__anon5	file:
EPHOPT	options.c	41;"	d	file:
EPHOPT_BRDC	rtklib.h	349;"	d
EPHOPT_LEX	rtklib.h	354;"	d
EPHOPT_PREC	rtklib.h	350;"	d
EPHOPT_SBAS	rtklib.h	351;"	d
EPHOPT_SSRAPC	rtklib.h	352;"	d
EPHOPT_SSRCOM	rtklib.h	353;"	d
ERREPH_GLO	ephemeris.c	77;"	d	file:
ERR_BRDCI	pntpos.c	34;"	d	file:
ERR_BRDCI	ppp.c	63;"	d	file:
ERR_CBIAS	pntpos.c	35;"	d	file:
ERR_CBIAS	ppp.c	64;"	d	file:
ERR_ION	pntpos.c	31;"	d	file:
ERR_SAAS	pntpos.c	33;"	d	file:
ERR_SAAS	ppp.c	62;"	d	file:
ERR_TROP	pntpos.c	32;"	d	file:
ETX	rcv/rt17.c	265;"	d	file:
EXTERR_CLK	preceph.c	50;"	d	file:
EXTERR_EPH	preceph.c	51;"	d	file:
FE_WGS84	rtklib.h	67;"	d
FI1	rcv/ublox.c	78;"	d	file:
FI2	rcv/ublox.c	79;"	d	file:
FI4	rcv/ublox.c	80;"	d	file:
FILEPATHSEP	rtklib.h	463;"	d
FILEPATHSEP	rtklib.h	470;"	d
FR4	rcv/ublox.c	81;"	d	file:
FR8	rcv/ublox.c	82;"	d	file:
FREQ1	rtklib.h	73;"	d
FREQ1_CMP	rtklib.h	84;"	d
FREQ1_GLO	rtklib.h	79;"	d
FREQ2	rtklib.h	74;"	d
FREQ2_CMP	rtklib.h	85;"	d
FREQ2_GLO	rtklib.h	81;"	d
FREQ3_CMP	rtklib.h	86;"	d
FREQ3_GLO	rtklib.h	83;"	d
FREQ5	rtklib.h	75;"	d
FREQ6	rtklib.h	76;"	d
FREQ7	rtklib.h	77;"	d
FREQ8	rtklib.h	78;"	d
FREQTYPE_ALL	rtklib.h	248;"	d
FREQTYPE_L1	rtklib.h	242;"	d
FREQTYPE_L2	rtklib.h	243;"	d
FREQTYPE_L5	rtklib.h	244;"	d
FREQTYPE_L6	rtklib.h	245;"	d
FREQTYPE_L7	rtklib.h	246;"	d
FREQTYPE_L8	rtklib.h	247;"	d
FRQOPT	options.c	37;"	d	file:
FS32	rcv/ublox.c	83;"	d	file:
FTP_CMD	download.c	22;"	d	file:
FTP_CMD	stream.c	86;"	d	file:
FTP_LISTING	download.c	24;"	d	file:
FTP_NOFILE	download.c	25;"	d	file:
FTP_RETRY	download.c	27;"	d	file:
FTP_TIMEOUT	download.c	23;"	d	file:
FTP_TIMEOUT	stream.c	87;"	d	file:
FU1	rcv/ublox.c	75;"	d	file:
FU2	rcv/ublox.c	76;"	d	file:
FU4	rcv/ublox.c	77;"	d	file:
GAP_RESION	rtkpos.c	59;"	d	file:
GAROPT	options.c	43;"	d	file:
GENOUT	rcv/rt17.c	266;"	d	file:
GEOID_EGM2008_M10	rtklib.h	414;"	d
GEOID_EGM2008_M25	rtklib.h	413;"	d
GEOID_EGM96_M150	rtklib.h	412;"	d
GEOID_EMBEDDED	rtklib.h	411;"	d
GEOID_GSI2000_M15	rtklib.h	415;"	d
GEOID_RAF09	rtklib.h	416;"	d
GEOOPT	options.c	49;"	d	file:
GME	ppp.c	49;"	d	file:
GMM	ppp.c	51;"	d	file:
GMS	ppp.c	50;"	d	file:
GW10SYNC	rcv/gw10.c	17;"	d	file:
HEADKML1	convkml.c	30;"	d	file:
HEADKML2	convkml.c	31;"	d	file:
HGTOPT	options.c	48;"	d	file:
HION	rtklib.h	69;"	d
HTTP_NOFILE	download.c	26;"	d	file:
I1	rcv/binex.c	42;"	d	file:
I1	rcv/crescent.c	46;"	d	file:
I1	rcv/gw10.c	49;"	d	file:
I1	rcv/javad.c	50;"	d	file:
I1	rcv/novatel.c	109;"	d	file:
I1	rcv/nvs.c	42;"	d	file:
I1	rcv/rcvlex.c	34;"	d	file:
I1	rcv/rt17.c	288;"	d	file:
I1	rcv/septentrio.c	88;"	d	file:
I1	rcv/skytraq.c	67;"	d	file:
I1	rcv/ublox.c	93;"	d	file:
I2	rcv/crescent.c	/^static short          I2(unsigned char *p) {short          i; memcpy(&i,p,2); return i;}$/;"	f	file:
I2	rcv/javad.c	/^static short          I2(unsigned char *p) {short          i; memcpy(&i,p,2); return i;}$/;"	f	file:
I2	rcv/nvs.c	/^static short          I2(unsigned char *p) {short          i; memcpy(&i,p,2); return i;}$/;"	f	file:
I2	rcv/rt17.c	290;"	d	file:
I2	rcv/septentrio.c	/^static short          I2(unsigned char *p) {short          i; memcpy(&i,p,2); return i;}$/;"	f	file:
I4	rcv/binex.c	/^static int I4(unsigned char *p)$/;"	f	file:
I4	rcv/crescent.c	/^static int            I4(unsigned char *p) {int            i; memcpy(&i,p,4); return i;}$/;"	f	file:
I4	rcv/javad.c	/^static int            I4(unsigned char *p) {int            i; memcpy(&i,p,4); return i;}$/;"	f	file:
I4	rcv/novatel.c	/^static int            I4(unsigned char *p) {int            i; memcpy(&i,p,4); return i;}$/;"	f	file:
I4	rcv/nvs.c	/^static int            I4(unsigned char *p) {int            i; memcpy(&i,p,4); return i;}$/;"	f	file:
I4	rcv/rt17.c	292;"	d	file:
I4	rcv/septentrio.c	/^static signed int     I4(unsigned char *p) {signed int     u; memcpy(&u,p,4); return u;}$/;"	f	file:
I4	rcv/ublox.c	/^static int            I4(unsigned char *p) {int            u; memcpy(&u,p,4); return u;}$/;"	f	file:
I8	rcv/ublox.c	/^static double         I8(unsigned char *p) {return I4(p+4)*4294967296.0+U4(p);}$/;"	f	file:
IB	ppp.c	72;"	d	file:
IB	ppp_ar.c	39;"	d	file:
IB	rtkpos.c	81;"	d	file:
IC	ppp.c	68;"	d	file:
IC	ppp_ar.c	35;"	d	file:
ID_ALMANAC	rcv/novatel.c	68;"	d	file:
ID_ALMB	rcv/novatel.c	91;"	d	file:
ID_BASESTATION	rcv/septentrio.c	71;"	d	file:
ID_BBSMPS	rcv/septentrio.c	79;"	d	file:
ID_BDSEPHEMERIS	rcv/novatel.c	89;"	d	file:
ID_CFGBIN	rcv/skytraq.c	62;"	d	file:
ID_CFGFMT	rcv/skytraq.c	60;"	d	file:
ID_CFGRATE	rcv/skytraq.c	61;"	d	file:
ID_CFGSERI	rcv/skytraq.c	59;"	d	file:
ID_CHNSTATUS	rcv/septentrio.c	73;"	d	file:
ID_COMMENT	rcv/septentrio.c	76;"	d	file:
ID_COMPRAW	rcv/septentrio.c	36;"	d	file:
ID_CRESEPH	rcv/crescent.c	38;"	d	file:
ID_CRESGLOEPH	rcv/crescent.c	33;"	d	file:
ID_CRESGLORAW	rcv/crescent.c	34;"	d	file:
ID_CRESIONUTC	rcv/crescent.c	37;"	d	file:
ID_CRESPOS	rcv/crescent.c	32;"	d	file:
ID_CRESRAW	rcv/crescent.c	39;"	d	file:
ID_CRESRAW2	rcv/crescent.c	35;"	d	file:
ID_CRESWAAS	rcv/crescent.c	36;"	d	file:
ID_DIFFCORRIN	rcv/septentrio.c	69;"	d	file:
ID_DOP	rcv/septentrio.c	62;"	d	file:
ID_ENDOFPVT	rcv/septentrio.c	65;"	d	file:
ID_FRMB	rcv/novatel.c	94;"	d	file:
ID_GALALM	rcv/septentrio.c	51;"	d	file:
ID_GALALMANAC	rcv/novatel.c	83;"	d	file:
ID_GALCLOCK	rcv/novatel.c	84;"	d	file:
ID_GALEPHEMERIS	rcv/novatel.c	82;"	d	file:
ID_GALFNAVRAWPAGE	rcv/novatel.c	86;"	d	file:
ID_GALGSTGPS	rcv/septentrio.c	55;"	d	file:
ID_GALINAVRAWWORD	rcv/novatel.c	87;"	d	file:
ID_GALION	rcv/septentrio.c	52;"	d	file:
ID_GALIONO	rcv/novatel.c	85;"	d	file:
ID_GALNAV	rcv/septentrio.c	50;"	d	file:
ID_GALRAWFNAV	rcv/septentrio.c	32;"	d	file:
ID_GALRAWINAV	rcv/septentrio.c	33;"	d	file:
ID_GALUTC	rcv/septentrio.c	53;"	d	file:
ID_GEOMTOO	rcv/septentrio.c	57;"	d	file:
ID_GEONAV	rcv/septentrio.c	58;"	d	file:
ID_GEORAWL1	rcv/septentrio.c	34;"	d	file:
ID_GEORAWL5	rcv/septentrio.c	35;"	d	file:
ID_GETGLOEPH	rcv/skytraq.c	63;"	d	file:
ID_GLOALM	rcv/septentrio.c	47;"	d	file:
ID_GLOALMANAC	rcv/novatel.c	69;"	d	file:
ID_GLOEPHEMERIS	rcv/novatel.c	70;"	d	file:
ID_GLONAV	rcv/septentrio.c	46;"	d	file:
ID_GLORAWCA	rcv/septentrio.c	31;"	d	file:
ID_GLOTIME	rcv/septentrio.c	48;"	d	file:
ID_GPSALM	rcv/septentrio.c	42;"	d	file:
ID_GPSION	rcv/septentrio.c	43;"	d	file:
ID_GPSNAV	rcv/septentrio.c	41;"	d	file:
ID_GPSRAWCA	rcv/septentrio.c	28;"	d	file:
ID_GPSRAWL2C	rcv/septentrio.c	29;"	d	file:
ID_GPSRAWL5	rcv/septentrio.c	30;"	d	file:
ID_GPSUTC	rcv/septentrio.c	44;"	d	file:
ID_GW10ALM	rcv/gw10.c	28;"	d	file:
ID_GW10DGPS	rcv/gw10.c	22;"	d	file:
ID_GW10EPH	rcv/gw10.c	27;"	d	file:
ID_GW10GPS	rcv/gw10.c	20;"	d	file:
ID_GW10ION	rcv/gw10.c	29;"	d	file:
ID_GW10RAW	rcv/gw10.c	19;"	d	file:
ID_GW10REF	rcv/gw10.c	23;"	d	file:
ID_GW10REPH	rcv/gw10.c	30;"	d	file:
ID_GW10SATH	rcv/gw10.c	25;"	d	file:
ID_GW10SATO	rcv/gw10.c	26;"	d	file:
ID_GW10SBS	rcv/gw10.c	21;"	d	file:
ID_GW10SOL	rcv/gw10.c	24;"	d	file:
ID_IONB	rcv/novatel.c	92;"	d	file:
ID_IONUTC	rcv/novatel.c	71;"	d	file:
ID_LEXMSG	rcv/rcvlex.c	30;"	d	file:
ID_LEXRAW	rcv/rcvlex.c	29;"	d	file:
ID_MEASEPOCH	rcv/septentrio.c	24;"	d	file:
ID_MEASEPOCHEXTRA	rcv/septentrio.c	25;"	d	file:
ID_MEASEPOCH_END	rcv/septentrio.c	26;"	d	file:
ID_NAVSOL	rcv/ublox.c	65;"	d	file:
ID_NAVTIME	rcv/ublox.c	66;"	d	file:
ID_PVTCART	rcv/septentrio.c	60;"	d	file:
ID_PVTGEOD	rcv/septentrio.c	61;"	d	file:
ID_PVTSATCART	rcv/septentrio.c	63;"	d	file:
ID_QZSSIONUTC	rcv/novatel.c	78;"	d	file:
ID_QZSSL1CA	rcv/septentrio.c	37;"	d	file:
ID_QZSSL2C	rcv/septentrio.c	38;"	d	file:
ID_QZSSL5	rcv/septentrio.c	39;"	d	file:
ID_QZSSRAWEPHEM	rcv/novatel.c	79;"	d	file:
ID_QZSSRAWSUBFRAME	rcv/novatel.c	80;"	d	file:
ID_RALB	rcv/novatel.c	95;"	d	file:
ID_RANGE	rcv/novatel.c	72;"	d	file:
ID_RANGECMP	rcv/novatel.c	73;"	d	file:
ID_RASB	rcv/novatel.c	96;"	d	file:
ID_RAWALM	rcv/novatel.c	74;"	d	file:
ID_RAWCNAVFRAME	rcv/novatel.c	88;"	d	file:
ID_RAWEPHEM	rcv/novatel.c	75;"	d	file:
ID_RAWSBASFRAME	rcv/novatel.c	81;"	d	file:
ID_RAWWAASFRAME	rcv/novatel.c	76;"	d	file:
ID_REPB	rcv/novatel.c	97;"	d	file:
ID_RESTART	rcv/skytraq.c	58;"	d	file:
ID_RGEB	rcv/novatel.c	98;"	d	file:
ID_RGED	rcv/novatel.c	99;"	d	file:
ID_RXMRAW	rcv/ublox.c	67;"	d	file:
ID_RXMRAWX	rcv/ublox.c	70;"	d	file:
ID_RXMSFRB	rcv/ublox.c	68;"	d	file:
ID_RXMSFRBX	rcv/ublox.c	69;"	d	file:
ID_RXSETUP	rcv/septentrio.c	75;"	d	file:
ID_RXSTATUS	rcv/septentrio.c	74;"	d	file:
ID_RXTIME	rcv/septentrio.c	67;"	d	file:
ID_SATVISIBILITY	rcv/septentrio.c	78;"	d	file:
ID_SS2ECEF	rcv/ss2.c	23;"	d	file:
ID_SS2EPH	rcv/ss2.c	24;"	d	file:
ID_SS2LLH	rcv/ss2.c	22;"	d	file:
ID_SS2RAW	rcv/ss2.c	25;"	d	file:
ID_SS2SBAS	rcv/ss2.c	26;"	d	file:
ID_STQACK	rcv/skytraq.c	55;"	d	file:
ID_STQBDSD1	rcv/skytraq.c	51;"	d	file:
ID_STQBDSD2	rcv/skytraq.c	52;"	d	file:
ID_STQGLO	rcv/skytraq.c	50;"	d	file:
ID_STQGLOE	rcv/skytraq.c	54;"	d	file:
ID_STQGPS	rcv/skytraq.c	49;"	d	file:
ID_STQNACK	rcv/skytraq.c	56;"	d	file:
ID_STQRAW	rcv/skytraq.c	46;"	d	file:
ID_STQRAWX	rcv/skytraq.c	53;"	d	file:
ID_STQSTAT	rcv/skytraq.c	48;"	d	file:
ID_STQSVCH	rcv/skytraq.c	47;"	d	file:
ID_STQTIME	rcv/skytraq.c	45;"	d	file:
ID_TRKD5	rcv/ublox.c	71;"	d	file:
ID_TRKMEAS	rcv/ublox.c	72;"	d	file:
ID_TRKSFRBX	rcv/ublox.c	73;"	d	file:
ID_UTCB	rcv/novatel.c	93;"	d	file:
ID_X02RATEPVT	rcv/nvs.c	35;"	d	file:
ID_X4AIONO	rcv/nvs.c	29;"	d	file:
ID_X4BTIME	rcv/nvs.c	30;"	d	file:
ID_XD5BIT	rcv/nvs.c	38;"	d	file:
ID_XD7ADVANCED	rcv/nvs.c	34;"	d	file:
ID_XD7SMOOTH	rcv/nvs.c	37;"	d	file:
ID_XE5BIT	rcv/nvs.c	32;"	d	file:
ID_XF4RATERAW	rcv/nvs.c	36;"	d	file:
ID_XF5RAW	rcv/nvs.c	28;"	d	file:
ID_XF7EPH	rcv/nvs.c	31;"	d	file:
II	rtkpos.c	78;"	d	file:
IL	rtkpos.c	80;"	d	file:
INIT_ZWD	rtkpos.c	56;"	d	file:
INT_SWAP_STAT	rtklib.h	210;"	d
INT_SWAP_TRAC	rtklib.h	209;"	d
IONOOPT_BRDC	rtklib.h	332;"	d
IONOOPT_EST	rtklib.h	335;"	d
IONOOPT_IFLC	rtklib.h	334;"	d
IONOOPT_LEX	rtklib.h	338;"	d
IONOOPT_OFF	rtklib.h	331;"	d
IONOOPT_QZS	rtklib.h	337;"	d
IONOOPT_SBAS	rtklib.h	333;"	d
IONOOPT_STEC	rtklib.h	339;"	d
IONOOPT_TEC	rtklib.h	336;"	d
IONOPT	options.c	39;"	d	file:
ISHEX	rcv/javad.c	45;"	d	file:
ISTXT	rcv/javad.c	44;"	d	file:
IT	ppp.c	69;"	d	file:
IT	ppp_ar.c	36;"	d	file:
IT	rtkpos.c	79;"	d	file:
J2_GLO	ephemeris.c	68;"	d	file:
KNOT2M	solution.c	56;"	d	file:
L	rtklib.h	/^    double L[NFREQ+NEXOBS]; \/* observation data carrier-phase (cycle) *\/$/;"	m	struct:__anon9
LAPACK	rtkcmn.c	319;"	d	file:
LC	rtklib.h	/^    double LC [4];      \/* linear combination average *\/$/;"	m	struct:__anon60
LCv	rtklib.h	/^    double LCv[4];      \/* linear combination variance *\/$/;"	m	struct:__anon60
LD	lambda.c	/^static int LD(int n, const double *Q, double *L, double *D)$/;"	f	file:
LEN_GW10ALM	rcv/gw10.c	41;"	d	file:
LEN_GW10DGPS	rcv/gw10.c	35;"	d	file:
LEN_GW10EPH	rcv/gw10.c	40;"	d	file:
LEN_GW10GPS	rcv/gw10.c	33;"	d	file:
LEN_GW10ION	rcv/gw10.c	42;"	d	file:
LEN_GW10RAW	rcv/gw10.c	32;"	d	file:
LEN_GW10REF	rcv/gw10.c	36;"	d	file:
LEN_GW10REPH	rcv/gw10.c	43;"	d	file:
LEN_GW10SATH	rcv/gw10.c	38;"	d	file:
LEN_GW10SATO	rcv/gw10.c	39;"	d	file:
LEN_GW10SBS	rcv/gw10.c	34;"	d	file:
LEN_GW10SOL	rcv/gw10.c	37;"	d	file:
LEXEPHMAXAGE	qzslex.c	25;"	d	file:
LEXFRMLEN	qzslex.c	21;"	d	file:
LEXFRMPREAMB	qzslex.c	24;"	d	file:
LEXFRMPREAMB	rcv/rcvlex.c	22;"	d	file:
LEXHDRLEN	qzslex.c	22;"	d	file:
LEXHEADLEN	qzslex.c	29;"	d	file:
LEXIONMAXAGE	qzslex.c	26;"	d	file:
LEXRSLEN	qzslex.c	23;"	d	file:
LEXRSYNC1	rcv/rcvlex.c	24;"	d	file:
LEXRSYNC2	rcv/rcvlex.c	25;"	d	file:
LITTLE_ENDIAN	rcv/rt17.c	270;"	d	file:
LLI	rtklib.h	/^    unsigned char LLI [NFREQ+NEXOBS]; \/* loss of lock indicator *\/$/;"	m	struct:__anon9
LLI_BOCTRK	rtklib.h	428;"	d
LLI_HALFA	rtklib.h	429;"	d
LLI_HALFC	rtklib.h	427;"	d
LLI_HALFS	rtklib.h	430;"	d
LLI_SLIP	rtklib.h	426;"	d
LOG_PI	ppp_ar.c	24;"	d	file:
LOOPMAX	lambda.c	22;"	d	file:
L_LC	ppp_ar.c	/^static double L_LC(int i, int j, int k, const double *L)$/;"	f	file:
M	rtklib.h	/^    double M;           \/* mean anomaly (deg) *\/$/;"	m	struct:__anon21
M0	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon15
M0	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon16
MARKICON	convkml.c	32;"	d	file:
MAXACC	rtkpos.c	60;"	d	file:
MAXAGESSR	ephemeris.c	84;"	d	file:
MAXAGESSR_HRCLK	ephemeris.c	85;"	d	file:
MAXANT	rtklib.h	227;"	d
MAXBAND	rtklib.h	216;"	d
MAXCCORSSR	ephemeris.c	83;"	d	file:
MAXCLI	stream.c	71;"	d	file:
MAXCODE	rtklib.h	299;"	d
MAXCOMMENT	rtklib.h	219;"	d
MAXDTE	preceph.c	49;"	d	file:
MAXDTOE	rtklib.h	200;"	d
MAXDTOE_CMP	rtklib.h	203;"	d
MAXDTOE_GAL	rtklib.h	202;"	d
MAXDTOE_GLO	rtklib.h	204;"	d
MAXDTOE_QZS	rtklib.h	201;"	d
MAXDTOE_S	rtklib.h	206;"	d
MAXDTOE_SBS	rtklib.h	205;"	d
MAXECORSSR	ephemeris.c	82;"	d	file:
MAXERRMSG	rtklib.h	226;"	d
MAXEXFILE	rtklib.h	212;"	d
MAXFIELD	solution.c	53;"	d	file:
MAXFREQ	rtklib.h	71;"	d
MAXFREQ_GLO	rinex.c	97;"	d	file:
MAXGDOP	rtklib.h	207;"	d
MAXINFILE	postpos.c	40;"	d	file:
MAXITR	pntpos.c	30;"	d	file:
MAXLEAPS	rtklib.h	231;"	d
MAXLEXRLEN	rcv/rcvlex.c	27;"	d	file:
MAXNGEO	rtklib.h	218;"	d
MAXNIGP	rtklib.h	217;"	d
MAXNMEA	solution.c	54;"	d	file:
MAXNRPOS	rtklib.h	230;"	d
MAXOBS	rtklib.h	195;"	d
MAXOBSBUF	rtklib.h	229;"	d
MAXOBSTYPE	rtklib.h	198;"	d
MAXPOSHEAD	rinex.c	95;"	d	file:
MAXPRCDAYS	postpos.c	39;"	d	file:
MAXPRM	datum.c	13;"	d	file:
MAXPRNCMP	rtklib.h	166;"	d
MAXPRNCMP	rtklib.h	171;"	d
MAXPRNGAL	rtklib.h	140;"	d
MAXPRNGAL	rtklib.h	145;"	d
MAXPRNGLO	rtklib.h	129;"	d
MAXPRNGLO	rtklib.h	134;"	d
MAXPRNGPS	rtklib.h	123;"	d
MAXPRNLEO	rtklib.h	177;"	d
MAXPRNLEO	rtklib.h	182;"	d
MAXPRNQZS	rtklib.h	151;"	d
MAXPRNQZS	rtklib.h	158;"	d
MAXPRNQZS_S	rtklib.h	153;"	d
MAXPRNQZS_S	rtklib.h	160;"	d
MAXPRNSBS	rtklib.h	189;"	d
MAXRAWLEN	rtklib.h	225;"	d
MAXRCV	rtklib.h	197;"	d
MAXRCVFMT	rtklib.h	402;"	d
MAXRCVFMT	rtklib.h	404;"	d
MAXRNXLEN	rinex.c	94;"	d	file:
MAXSAT	rtklib.h	192;"	d
MAXSBSAGEF	rtklib.h	213;"	d
MAXSBSAGEL	rtklib.h	214;"	d
MAXSBSMSG	rtklib.h	223;"	d
MAXSBSURA	rtklib.h	215;"	d
MAXSOLBUF	rtklib.h	228;"	d
MAXSOLMSG	rtklib.h	224;"	d
MAXSOLQ	rtklib.h	325;"	d
MAXSTATMSG	stream.c	72;"	d	file:
MAXSTRMSG	rtklib.h	221;"	d
MAXSTRPATH	rtklib.h	220;"	d
MAXSTRRTK	rtklib.h	222;"	d
MAXVAL	rcv/novatel.c	103;"	d	file:
MAX_ITER_KEPLER	ephemeris.c	88;"	d	file:
MIN	postpos.c	36;"	d	file:
MIN	ppp.c	46;"	d	file:
MIN	ppp_ar.c	27;"	d	file:
MIN	rcv/binex.c	33;"	d	file:
MIN	rtcm3e.c	54;"	d	file:
MIN	rtkpos.c	48;"	d	file:
MINFREQ_GLO	rinex.c	96;"	d	file:
MINPRNCMP	rtklib.h	165;"	d
MINPRNCMP	rtklib.h	170;"	d
MINPRNGAL	rtklib.h	139;"	d
MINPRNGAL	rtklib.h	144;"	d
MINPRNGLO	rtklib.h	128;"	d
MINPRNGLO	rtklib.h	133;"	d
MINPRNGPS	rtklib.h	122;"	d
MINPRNLEO	rtklib.h	176;"	d
MINPRNLEO	rtklib.h	181;"	d
MINPRNQZS	rtklib.h	150;"	d
MINPRNQZS	rtklib.h	157;"	d
MINPRNQZS_S	rtklib.h	152;"	d
MINPRNQZS_S	rtklib.h	159;"	d
MINPRNSBS	rtklib.h	188;"	d
MIN_ARC_GAP	ppp_ar.c	21;"	d	file:
MIN_EL	ionex.c	25;"	d	file:
MIN_HGT	ionex.c	26;"	d	file:
MODOPT	options.c	36;"	d	file:
MSG_DISCONN	rtklib.h	419;"	d
MU_CMP	ephemeris.c	67;"	d	file:
MU_GAL	ephemeris.c	66;"	d	file:
MU_GLO	ephemeris.c	65;"	d	file:
MU_GPS	ephemeris.c	64;"	d	file:
M_CONCISE	rcv/rt17.c	275;"	d	file:
M_ENHANCED	rcv/rt17.c	276;"	d	file:
M_WEEK_OPTION	rcv/rt17.c	281;"	d	file:
M_WEEK_SCAN	rcv/rt17.c	282;"	d	file:
NAVOPT	options.c	42;"	d	file:
NB	rtkpos.c	73;"	d	file:
NEXOBS	rtklib.h	119;"	d
NF	rtkpos.c	68;"	d	file:
NFREQ	rtklib.h	114;"	d
NFREQGLO	rtklib.h	116;"	d
NI	rtkpos.c	70;"	d	file:
NINCOBS	rinex.c	98;"	d	file:
NL	rtkpos.c	72;"	d	file:
NMAX	preceph.c	48;"	d	file:
NMAX_STA	download.c	18;"	d	file:
NMAX_TYPE	download.c	19;"	d	file:
NMAX_URL	download.c	20;"	d	file:
NOUTFILE	convrnx.c	33;"	d	file:
NP	ppp.c	67;"	d	file:
NP	ppp_ar.c	34;"	d	file:
NP	rtkpos.c	69;"	d	file:
NR	ppp.c	70;"	d	file:
NR	ppp_ar.c	37;"	d	file:
NR	rtkpos.c	74;"	d	file:
NSATCMP	rtklib.h	167;"	d
NSATCMP	rtklib.h	172;"	d
NSATGAL	rtklib.h	141;"	d
NSATGAL	rtklib.h	146;"	d
NSATGLO	rtklib.h	130;"	d
NSATGLO	rtklib.h	135;"	d
NSATGPS	rtklib.h	124;"	d
NSATLEO	rtklib.h	178;"	d
NSATLEO	rtklib.h	183;"	d
NSATQZS	rtklib.h	154;"	d
NSATQZS	rtklib.h	161;"	d
NSATSBS	rtklib.h	190;"	d
NSYS	rtklib.h	186;"	d
NSYSCMP	rtklib.h	168;"	d
NSYSCMP	rtklib.h	173;"	d
NSYSGAL	rtklib.h	142;"	d
NSYSGAL	rtklib.h	147;"	d
NSYSGLO	rtklib.h	131;"	d
NSYSGLO	rtklib.h	136;"	d
NSYSGPS	rtklib.h	125;"	d
NSYSLEO	rtklib.h	179;"	d
NSYSLEO	rtklib.h	184;"	d
NSYSQZS	rtklib.h	155;"	d
NSYSQZS	rtklib.h	162;"	d
NT	rtkpos.c	71;"	d	file:
NTRIP_AGENT	stream.c	74;"	d	file:
NTRIP_CLI_PORT	stream.c	75;"	d	file:
NTRIP_MAXRSP	stream.c	77;"	d	file:
NTRIP_MAXSTR	stream.c	78;"	d	file:
NTRIP_RSP_ERROR	stream.c	84;"	d	file:
NTRIP_RSP_HTTP	stream.c	83;"	d	file:
NTRIP_RSP_OK_CLI	stream.c	79;"	d	file:
NTRIP_RSP_OK_SVR	stream.c	80;"	d	file:
NTRIP_RSP_SRCTBL	stream.c	81;"	d	file:
NTRIP_RSP_TBLEND	stream.c	82;"	d	file:
NTRIP_SVR_PORT	stream.c	76;"	d	file:
NUMSYS	rinex.c	93;"	d	file:
NVSCFG	rcv/nvs.c	26;"	d	file:
NVSENDMSG	rcv/nvs.c	25;"	d	file:
NVSSYNC	rcv/nvs.c	24;"	d	file:
NX	pntpos.c	28;"	d	file:
NX	ppp.c	73;"	d	file:
NX	rtkpos.c	75;"	d	file:
OBSTYPE_ALL	rtklib.h	240;"	d
OBSTYPE_CP	rtklib.h	237;"	d
OBSTYPE_DOP	rtklib.h	238;"	d
OBSTYPE_PR	rtklib.h	236;"	d
OBSTYPE_SNR	rtklib.h	239;"	d
OEM3HLEN	rcv/novatel.c	66;"	d	file:
OEM3SYNC1	rcv/novatel.c	61;"	d	file:
OEM3SYNC2	rcv/novatel.c	62;"	d	file:
OEM3SYNC3	rcv/novatel.c	63;"	d	file:
OEM4HLEN	rcv/novatel.c	65;"	d	file:
OEM4SYNC1	rcv/novatel.c	58;"	d	file:
OEM4SYNC2	rcv/novatel.c	59;"	d	file:
OEM4SYNC3	rcv/novatel.c	60;"	d	file:
OFFWEEK	rcv/gw10.c	45;"	d	file:
OFF_FRQNO	rcv/novatel.c	105;"	d	file:
OMG	rtklib.h	/^    double OMG;         \/* right ascension of ascending node (deg) *\/$/;"	m	struct:__anon21
OMG0	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon15
OMG0	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon16
OMGE	rtklib.h	64;"	d
OMGE_CMP	ephemeris.c	72;"	d	file:
OMGE_GAL	ephemeris.c	71;"	d	file:
OMGE_GLO	ephemeris.c	70;"	d	file:
OMGd	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon15
OMGd	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon16
P	rtklib.h	/^    double *x, *P;      \/* float states and their covariance *\/$/;"	m	struct:__anon61
P	rtklib.h	/^    double P[NFREQ+NEXOBS]; \/* observation data pseudorange (m) *\/$/;"	m	struct:__anon9
P2_10	rcv/ublox.c	85;"	d	file:
P2_10	rtcm3.c	42;"	d	file:
P2_10	rtcm3e.c	46;"	d	file:
P2_11	rtklib.h	434;"	d
P2_15	rtklib.h	435;"	d
P2_17	rtklib.h	436;"	d
P2_19	rtklib.h	437;"	d
P2_20	rtklib.h	438;"	d
P2_21	rtklib.h	439;"	d
P2_23	rtklib.h	440;"	d
P2_24	rtklib.h	441;"	d
P2_27	rtklib.h	442;"	d
P2_29	rtklib.h	443;"	d
P2_30	rtklib.h	444;"	d
P2_31	rtklib.h	445;"	d
P2_32	rtklib.h	446;"	d
P2_33	rtklib.h	447;"	d
P2_34	rcvraw.c	39;"	d	file:
P2_34	rtcm3.c	43;"	d	file:
P2_34	rtcm3e.c	47;"	d	file:
P2_35	rtklib.h	448;"	d
P2_38	rtklib.h	449;"	d
P2_39	rtklib.h	450;"	d
P2_40	rtklib.h	451;"	d
P2_43	rtklib.h	452;"	d
P2_46	rcvraw.c	40;"	d	file:
P2_46	rtcm3.c	44;"	d	file:
P2_46	rtcm3e.c	48;"	d	file:
P2_48	rtklib.h	453;"	d
P2_5	rtklib.h	432;"	d
P2_50	rtklib.h	454;"	d
P2_55	rtklib.h	455;"	d
P2_59	rcvraw.c	41;"	d	file:
P2_59	rtcm3.c	45;"	d	file:
P2_59	rtcm3e.c	49;"	d	file:
P2_6	rtklib.h	433;"	d
P2_66	rcvraw.c	42;"	d	file:
P2_66	rtcm3.c	46;"	d	file:
P2_66	rtcm3e.c	50;"	d	file:
PATCH_LEVEL	rtklib.h	51;"	d
PI	rtklib.h	56;"	d
PIO2	tle.c	24;"	d	file:
PMODE_DGPS	rtklib.h	302;"	d
PMODE_FIXED	rtklib.h	306;"	d
PMODE_KINEMA	rtklib.h	303;"	d
PMODE_MOVEB	rtklib.h	305;"	d
PMODE_PPP_FIXED	rtklib.h	309;"	d
PMODE_PPP_KINEMA	rtklib.h	307;"	d
PMODE_PPP_STATIC	rtklib.h	308;"	d
PMODE_SINGLE	rtklib.h	301;"	d
PMODE_STATIC	rtklib.h	304;"	d
POLYCRC24Q	rtkcmn.c	130;"	d	file:
POLYCRC32	rtkcmn.c	129;"	d	file:
POSOPT	options.c	53;"	d	file:
PREAMB_CNAV	rcv/javad.c	42;"	d	file:
PRN_HWBIAS	rtkpos.c	58;"	d	file:
PRUNIT_GLO	rtcm3.c	39;"	d	file:
PRUNIT_GLO	rtcm3e.c	44;"	d	file:
PRUNIT_GPS	rtcm3.c	38;"	d	file:
PRUNIT_GPS	rtcm3e.c	43;"	d	file:
P_LC	ppp_ar.c	/^static double P_LC(int i, int j, int k, const double *P)$/;"	f	file:
Pa	rtklib.h	/^    double *xa,*Pa;     \/* fixed states and their covariance *\/$/;"	m	struct:__anon61
QO	tle.c	25;"	d	file:
QOMS2T	tle.c	39;"	d	file:
R2D	rtklib.h	58;"	d
R4	rcv/binex.c	/^static float R4(unsigned char *p)$/;"	f	file:
R4	rcv/crescent.c	/^static float          R4(unsigned char *p) {float          r; memcpy(&r,p,4); return r;}$/;"	f	file:
R4	rcv/javad.c	/^static float R4(unsigned char *p)$/;"	f	file:
R4	rcv/novatel.c	/^static float          R4(unsigned char *p) {float          r; memcpy(&r,p,4); return r;}$/;"	f	file:
R4	rcv/nvs.c	/^static float          R4(unsigned char *p) {float          r; memcpy(&r,p,4); return r;}$/;"	f	file:
R4	rcv/rt17.c	294;"	d	file:
R4	rcv/septentrio.c	/^static float          R4(unsigned char *p) {float          r; memcpy(&r,p,4); return r;}$/;"	f	file:
R4	rcv/skytraq.c	/^static float R4(unsigned char *p)$/;"	f	file:
R4	rcv/ublox.c	/^static float          R4(unsigned char *p) {float          r; memcpy(&r,p,4); return r;}$/;"	f	file:
R8	rcv/binex.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/crescent.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
R8	rcv/gw10.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/javad.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/novatel.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
R8	rcv/nvs.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
R8	rcv/rcvlex.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/rt17.c	295;"	d	file:
R8	rcv/septentrio.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
R8	rcv/skytraq.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/ss2.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
R8	rcv/ublox.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
RANGE_MS	rtcm3.c	40;"	d	file:
RANGE_MS	rtcm3e.c	45;"	d	file:
RAWDATA	rcv/rt17.c	268;"	d	file:
REL_HUMI	pntpos.c	36;"	d	file:
REL_HUMI	ppp.c	65;"	d	file:
RETSVDATA	rcv/rt17.c	267;"	d	file:
RE_GLO	ephemeris.c	63;"	d	file:
RE_WGS84	rtklib.h	66;"	d
RNX2VER	rtklib.h	233;"	d
RNX3VER	rtklib.h	234;"	d
ROT_LEFT	rcv/javad.c	46;"	d	file:
ROUND	lambda.c	25;"	d	file:
ROUND	ppp_ar.c	29;"	d	file:
ROUND	rcv/ublox.c	89;"	d	file:
ROUND	rtcm3e.c	52;"	d	file:
ROUND	rtkpos.c	49;"	d	file:
ROUND_U	rtcm3e.c	53;"	d	file:
RTCM2PREAMB	rtcm.c	61;"	d	file:
RTCM3PREAMB	qzslex.c	27;"	d	file:
RTCM3PREAMB	rtcm.c	62;"	d	file:
RTKLIB_H	rtklib.h	29;"	d
RTOL_KEPLER	ephemeris.c	79;"	d	file:
Rx	rtkcmn.c	1738;"	d	file:
Ry	rtkcmn.c	1743;"	d	file:
Rz	rtkcmn.c	1748;"	d	file:
S	tle.c	40;"	d	file:
SBF_SYNC1	rcv/septentrio.c	21;"	d	file:
SBF_SYNC2	rcv/septentrio.c	22;"	d	file:
SBSOPT_FCORR	rtklib.h	366;"	d
SBSOPT_ICORR	rtklib.h	367;"	d
SBSOPT_LCORR	rtklib.h	365;"	d
SBSOPT_RANGE	rtklib.h	368;"	d
SC2RAD	rtklib.h	60;"	d
SERIBUFFSIZE	stream.c	69;"	d	file:
SGN	lambda.c	24;"	d	file:
SGP4_STR3	tle.c	/^static void SGP4_STR3(double tsince, const tled_t *data, double *rs)$/;"	f	file:
SIN_5	ephemeris.c	74;"	d	file:
SIZP	convkml.c	27;"	d	file:
SIZR	convkml.c	28;"	d	file:
SNR	rtklib.h	/^    unsigned char SNR [NFREQ+NEXOBS]; \/* signal strength (0.25 dBHz) *\/$/;"	m	struct:__anon9
SNR2CN0_L1	rcv/crescent.c	41;"	d	file:
SNR2CN0_L2	rcv/crescent.c	42;"	d	file:
SO	tle.c	26;"	d	file:
SOLF_ENU	rtklib.h	313;"	d
SOLF_GSIF	rtklib.h	315;"	d
SOLF_LLH	rtklib.h	311;"	d
SOLF_NMEA	rtklib.h	314;"	d
SOLF_XYZ	rtklib.h	312;"	d
SOLOPT	options.c	44;"	d	file:
SOLQ_DGPS	rtklib.h	321;"	d
SOLQ_DR	rtklib.h	324;"	d
SOLQ_FIX	rtklib.h	318;"	d
SOLQ_FLOAT	rtklib.h	319;"	d
SOLQ_NONE	rtklib.h	317;"	d
SOLQ_PPP	rtklib.h	323;"	d
SOLQ_SBAS	rtklib.h	320;"	d
SOLQ_SINGLE	rtklib.h	322;"	d
SQR	ephemeris.c	61;"	d	file:
SQR	ionex.c	23;"	d	file:
SQR	pntpos.c	26;"	d	file:
SQR	ppp.c	45;"	d	file:
SQR	ppp_ar.c	28;"	d	file:
SQR	preceph.c	46;"	d	file:
SQR	rinex.c	91;"	d	file:
SQR	rtkpos.c	46;"	d	file:
SQR	solution.c	50;"	d	file:
SQRT	postpos.c	37;"	d	file:
SQRT	rtkcmn.c	3240;"	d	file:
SQRT	rtkpos.c	47;"	d	file:
SQRT	solution.c	51;"	d	file:
SQRT2	ppp_ar.c	25;"	d	file:
SS2SOH	rcv/ss2.c	20;"	d	file:
STAOPT	options.c	50;"	d	file:
STD_BRDCCLK	ephemeris.c	86;"	d	file:
STQSYNC1	rcv/skytraq.c	42;"	d	file:
STQSYNC2	rcv/skytraq.c	43;"	d	file:
STRFMT_BINEX	rtklib.h	392;"	d
STRFMT_CRES	rtklib.h	387;"	d
STRFMT_GW10	rtklib.h	389;"	d
STRFMT_JAVAD	rtklib.h	390;"	d
STRFMT_LEXR	rtklib.h	394;"	d
STRFMT_NMEA	rtklib.h	400;"	d
STRFMT_NVS	rtklib.h	391;"	d
STRFMT_OEM3	rtklib.h	384;"	d
STRFMT_OEM4	rtklib.h	383;"	d
STRFMT_RINEX	rtklib.h	396;"	d
STRFMT_RNXCLK	rtklib.h	398;"	d
STRFMT_RT17	rtklib.h	393;"	d
STRFMT_RTCM2	rtklib.h	381;"	d
STRFMT_RTCM3	rtklib.h	382;"	d
STRFMT_SBAS	rtklib.h	399;"	d
STRFMT_SEPT	rtklib.h	395;"	d
STRFMT_SP3	rtklib.h	397;"	d
STRFMT_SS2	rtklib.h	386;"	d
STRFMT_STQ	rtklib.h	388;"	d
STRFMT_UBX	rtklib.h	385;"	d
STR_FILE	rtklib.h	372;"	d
STR_FTP	rtklib.h	378;"	d
STR_HTTP	rtklib.h	379;"	d
STR_MODE_R	rtklib.h	407;"	d
STR_MODE_RW	rtklib.h	409;"	d
STR_MODE_W	rtklib.h	408;"	d
STR_NONE	rtklib.h	370;"	d
STR_NTRIPCLI	rtklib.h	377;"	d
STR_NTRIPSVR	rtklib.h	376;"	d
STR_SERIAL	rtklib.h	371;"	d
STR_TCPCLI	rtklib.h	374;"	d
STR_TCPSVR	rtklib.h	373;"	d
STR_UDP	rtklib.h	375;"	d
STSOPT	options.c	51;"	d	file:
STX	rcv/rt17.c	264;"	d	file:
SWAP	lambda.c	26;"	d	file:
SWAP_D	ppp_ar.c	32;"	d	file:
SWAP_I	ppp_ar.c	31;"	d	file:
SWTOPT	options.c	35;"	d	file:
SYS_ALL	rtklib.h	104;"	d
SYS_CMP	rtklib.h	101;"	d
SYS_GAL	rtklib.h	99;"	d
SYS_GLO	rtklib.h	98;"	d
SYS_GPS	rtklib.h	96;"	d
SYS_IRN	rtklib.h	102;"	d
SYS_LEO	rtklib.h	103;"	d
SYS_NONE	rtklib.h	95;"	d
SYS_QZS	rtklib.h	100;"	d
SYS_SBS	rtklib.h	97;"	d
TFTOPT	options.c	46;"	d	file:
THRES_RES	ppp_ar.c	23;"	d	file:
TIDEOPT	options.c	54;"	d	file:
TIMES_GPST	rtklib.h	327;"	d
TIMES_JST	rtklib.h	329;"	d
TIMES_UTC	rtklib.h	328;"	d
TIMETAGH_LEN	stream.c	70;"	d	file:
TINT	convkml.c	29;"	d	file:
TINTACT	stream.c	68;"	d	file:
TOTHRD	tle.c	27;"	d	file:
TROPOPT_COR	rtklib.h	346;"	d
TROPOPT_CORG	rtklib.h	347;"	d
TROPOPT_EST	rtklib.h	344;"	d
TROPOPT_ESTG	rtklib.h	345;"	d
TROPOPT_OFF	rtklib.h	341;"	d
TROPOPT_SAAS	rtklib.h	342;"	d
TROPOPT_SBAS	rtklib.h	343;"	d
TRPOPT	options.c	40;"	d	file:
TSTARTMARGIN	convrnx.c	34;"	d	file:
TSTEP	ephemeris.c	78;"	d	file:
TSYOPT	options.c	45;"	d	file:
TSYS_CMP	rtklib.h	111;"	d
TSYS_GAL	rtklib.h	109;"	d
TSYS_GLO	rtklib.h	108;"	d
TSYS_GPS	rtklib.h	106;"	d
TSYS_QZS	rtklib.h	110;"	d
TSYS_UTC	rtklib.h	107;"	d
TTOL_MOVEB	rtkpos.c	64;"	d	file:
TWOPI	tle.c	28;"	d	file:
TYPOPT	options.c	38;"	d	file:
U1	rcv/binex.c	41;"	d	file:
U1	rcv/crescent.c	45;"	d	file:
U1	rcv/gw10.c	48;"	d	file:
U1	rcv/javad.c	49;"	d	file:
U1	rcv/novatel.c	108;"	d	file:
U1	rcv/nvs.c	41;"	d	file:
U1	rcv/rcvlex.c	33;"	d	file:
U1	rcv/rt17.c	289;"	d	file:
U1	rcv/septentrio.c	87;"	d	file:
U1	rcv/skytraq.c	66;"	d	file:
U1	rcv/ss2.c	31;"	d	file:
U1	rcv/ublox.c	92;"	d	file:
U2	rcv/binex.c	/^static unsigned short U2(unsigned char *p)$/;"	f	file:
U2	rcv/crescent.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/gw10.c	/^static unsigned short U2(unsigned char *p)$/;"	f	file:
U2	rcv/javad.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/novatel.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/nvs.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/rcvlex.c	/^static unsigned short U2(unsigned char *p)$/;"	f	file:
U2	rcv/rt17.c	291;"	d	file:
U2	rcv/septentrio.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/skytraq.c	/^static unsigned short U2(unsigned char *p)$/;"	f	file:
U2	rcv/ss2.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/ublox.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U4	rcv/binex.c	/^static unsigned int U4(unsigned char *p)$/;"	f	file:
U4	rcv/crescent.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/gw10.c	/^static unsigned int U4(unsigned char *p)$/;"	f	file:
U4	rcv/javad.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/novatel.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/nvs.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/rcvlex.c	/^static unsigned int U4(unsigned char *p)$/;"	f	file:
U4	rcv/rt17.c	293;"	d	file:
U4	rcv/septentrio.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/skytraq.c	/^static unsigned int U4(unsigned char *p)$/;"	f	file:
U4	rcv/ss2.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/ublox.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
UBXCFG	rcv/ublox.c	63;"	d	file:
UBXSYNC1	rcv/ublox.c	61;"	d	file:
UBXSYNC2	rcv/ublox.c	62;"	d	file:
VAR_ACC	rtkpos.c	53;"	d	file:
VAR_BIAS	ppp.c	58;"	d	file:
VAR_CLK	ppp.c	55;"	d	file:
VAR_GRA	ppp.c	57;"	d	file:
VAR_GRA	rtkpos.c	55;"	d	file:
VAR_HOLDAMB	rtkpos.c	62;"	d	file:
VAR_HWBIAS	rtkpos.c	54;"	d	file:
VAR_IONO_OFF	ppp.c	60;"	d	file:
VAR_NOTEC	ionex.c	24;"	d	file:
VAR_POS	ppp.c	54;"	d	file:
VAR_POS	rtkpos.c	51;"	d	file:
VAR_VEL	rtkpos.c	52;"	d	file:
VAR_ZTD	ppp.c	56;"	d	file:
VER_RTKLIB	rtklib.h	49;"	d
WEEKOFFSET	sbas.c	45;"	d	file:
WL1	rcv/novatel.c	101;"	d	file:
WL2	rcv/novatel.c	102;"	d	file:
X3PIO2	tle.c	29;"	d	file:
XJ2	tle.c	30;"	d	file:
XJ3	tle.c	31;"	d	file:
XJ4	tle.c	32;"	d	file:
XKE	tle.c	33;"	d	file:
XKMPER	tle.c	34;"	d	file:
XMNPDA	tle.c	35;"	d	file:
_POSIX_C_SOURCE	rtkcmn.c	113;"	d	file:
__USE_MISC	stream.c	54;"	d	file:
aborts	postpos.c	/^static int aborts=0;            \/* abort status *\/$/;"	v	file:
acc	rtklib.h	/^    double acc[3];      \/* satellite acceleration (ecef) (m\/s^2) *\/$/;"	m	struct:__anon17
acc	rtklib.h	/^    double acc[3];      \/* satellite acceleration (m\/s2) *\/$/;"	m	struct:__anon41
acc	rtklib.h	/^    double acc[3];      \/* satellite acceleration (m\/s^2) (ecef) *\/$/;"	m	struct:__anon20
accept_nb	stream.c	/^static socket_t accept_nb(socket_t sock, struct sockaddr *addr, socklen_t *len)$/;"	f	file:
accsock	stream.c	/^static int accsock(tcpsvr_t *tcpsvr, char *msg)$/;"	f	file:
add_data	tle.c	/^static int add_data(tle_t *tle, const tled_t *data)$/;"	f	file:
add_eph	rinex.c	/^static int add_eph(nav_t *nav, const eph_t *eph)$/;"	f	file:
add_geph	rinex.c	/^static int add_geph(nav_t *nav, const geph_t *geph)$/;"	f	file:
add_path	download.c	/^static int add_path(paths_t *paths, const char *remot, const char *dir)$/;"	f	file:
add_seph	rinex.c	/^static int add_seph(nav_t *nav, const seph_t *seph)$/;"	f	file:
addobsdata	rinex.c	/^static int addobsdata(obs_t *obs, const obsd_t *data)$/;"	f	file:
addpcv	rtkcmn.c	/^static void addpcv(const pcv_t *pcv, pcvs_t *pcvs)$/;"	f	file:
addpeph	preceph.c	/^static int addpeph(nav_t *nav, peph_t *peph)$/;"	f	file:
addr	stream.c	/^    char addr[1024];        \/* download address *\/$/;"	m	struct:__anon73	file:
addr	stream.c	/^    struct sockaddr_in addr; \/* address resolved *\/$/;"	m	struct:__anon69	typeref:struct:__anon69::sockaddr_in	file:
addsol	solution.c	/^extern int addsol(solbuf_t *solbuf, const sol_t *sol)$/;"	f
addsolstat	solution.c	/^static void addsolstat(solstatbuf_t *statbuf, const solstat_t *stat)$/;"	f	file:
addtec	ionex.c	/^static tec_t *addtec(const double *lats, const double *lons, const double *hgts,$/;"	f	file:
adj_utcweek	rcv/skytraq.c	/^static void adj_utcweek(gtime_t time, double *utc)$/;"	f	file:
adj_utcweek	rcv/ublox.c	/^static void adj_utcweek(gtime_t time, double *utc)$/;"	f	file:
adjbdtweek	rtcm3.c	/^static int adjbdtweek(int week)$/;"	f	file:
adjcp	rtcm3.c	/^static double adjcp(rtcm_t *rtcm, int sat, int freq, double cp)$/;"	f	file:
adjday	rcv/binex.c	/^static gtime_t adjday(gtime_t time, double tod)$/;"	f	file:
adjday	rcv/javad.c	/^static gtime_t adjday(gtime_t time, double tod)$/;"	f	file:
adjday	rcv/nvs.c	/^static gtime_t adjday(gtime_t time, double tod)$/;"	f	file:
adjday	rinex.c	/^static gtime_t adjday(gtime_t t, gtime_t t0)$/;"	f	file:
adjday_glot	rtcm3.c	/^static void adjday_glot(rtcm_t *rtcm, double tod)$/;"	f	file:
adjgpsweek	rtkcmn.c	/^extern int adjgpsweek(int week)$/;"	f
adjhour	rtcm2.c	/^static void adjhour(rtcm_t *rtcm, double zcnt)$/;"	f	file:
adjweek	rcv/binex.c	/^static gtime_t adjweek(gtime_t time, double tow)$/;"	f	file:
adjweek	rcv/gw10.c	/^static int adjweek(raw_t *raw, double tow)$/;"	f	file:
adjweek	rcv/javad.c	/^static gtime_t adjweek(gtime_t time, double tow)$/;"	f	file:
adjweek	rcv/novatel.c	/^static gtime_t adjweek(gtime_t time, double tow)$/;"	f	file:
adjweek	rcv/septentrio.c	/^static gtime_t adjweek(gtime_t time, double tow)$/;"	f	file:
adjweek	rcv/ss2.c	/^static int adjweek(raw_t *raw, double sec)$/;"	f	file:
adjweek	rinex.c	/^static gtime_t adjweek(gtime_t t, gtime_t t0)$/;"	f	file:
adjweek	rtcm3.c	/^static void adjweek(rtcm_t *rtcm, double tow)$/;"	f	file:
af0	rtklib.h	/^    double af0,af1;     \/* satellite clock bias and drift (s,s\/s) *\/$/;"	m	struct:__anon41
af0	rtklib.h	/^    double af0,af1;     \/* satellite clock-offset\/drift (s,s\/s) *\/$/;"	m	struct:__anon20
af1	rtklib.h	/^    double af0,af1;     \/* satellite clock bias and drift (s,s\/s) *\/$/;"	m	struct:__anon41
af1	rtklib.h	/^    double af0,af1;     \/* satellite clock-offset\/drift (s,s\/s) *\/$/;"	m	struct:__anon20
age	rtklib.h	/^    float age;          \/* age of differential (s) *\/$/;"	m	struct:__anon45
age	rtklib.h	/^    int svh,sva,age;    \/* satellite health, accuracy, age of operation *\/$/;"	m	struct:__anon17
ai	rtklib.h	/^    short ai;           \/* degradation factor indicator *\/$/;"	m	struct:__anon30
alert	rtklib.h	/^    int alert;          \/* alert flag *\/$/;"	m	struct:__anon39
alias	rtklib.h	/^    char alias[32];     \/* alias name *\/$/;"	m	struct:__anon21
alm	rtklib.h	/^    alm_t *alm;         \/* almanac data *\/$/;"	m	struct:__anon43
alm2pos	ephemeris.c	/^extern void alm2pos(gtime_t time, const alm_t *alm, double *rs, double *dts)$/;"	f
alm_t	rtklib.h	/^} alm_t;$/;"	t	typeref:struct:__anon15
ambc	rtklib.h	/^    ambc_t ambc[MAXSAT]; \/* ambibuity control *\/$/;"	m	struct:__anon61
ambc_t	rtklib.h	/^} ambc_t;$/;"	t	typeref:struct:__anon60
ant	rtklib.h	/^    char ant [3][32];   \/* antenna #\/type *\/$/;"	m	struct:__anon58
antdel	rtklib.h	/^    double antdel[2][3]; \/* antenna delta {{rov_e,rov_n,rov_u},{ref_e,ref_n,ref_u}} *\/$/;"	m	struct:__anon55
antdel	rtklib.h	/^    double antdel[3];   \/* antenna delta h\/e\/n *\/$/;"	m	struct:__anon58
antdes	rtklib.h	/^    char antdes [MAXANT]; \/* antenna descriptor *\/$/;"	m	struct:__anon44
antmodel	rtkcmn.c	/^extern void antmodel(const pcv_t *pcv, const double *del, const double *azel,$/;"	f
antmodel_s	rtkcmn.c	/^extern void antmodel_s(const pcv_t *pcv, double nadir, double *dant)$/;"	f
antpos	postpos.c	/^static int antpos(prcopt_t *opt, int rcvno, const obs_t *obs, const nav_t *nav,$/;"	f	file:
antpos_	options.c	/^static double antpos_[2][3];$/;"	v	file:
antpostype_	options.c	/^static int antpostype_[2];$/;"	v	file:
antsetup	rtklib.h	/^    int antsetup;       \/* antenna setup id *\/$/;"	m	struct:__anon44
antsno	rtklib.h	/^    char antsno [MAXANT]; \/* antenna serial number *\/$/;"	m	struct:__anon44
anttype	rtklib.h	/^    char anttype[2][MAXANT]; \/* antenna types {rover,base} *\/$/;"	m	struct:__anon55
apppos	rtklib.h	/^    double apppos[3];   \/* approx position x\/y\/z *\/$/;"	m	struct:__anon58
ast_args	rtkcmn.c	/^static void ast_args(double t, double *f)$/;"	f	file:
autopos	rtklib.h	/^    int autopos;        \/* auto approx position *\/$/;"	m	struct:__anon58
avepos	postpos.c	/^static int avepos(double *ra, int rcv, const obs_t *obs, const nav_t *nav,$/;"	f	file:
average_LC	ppp_ar.c	/^static void average_LC(rtk_t *rtk, const obsd_t *obs, int n, const nav_t *nav,$/;"	f	file:
az	rtklib.h	/^    float az,el;        \/* azimuth\/elevation angle (rad) *\/$/;"	m	struct:__anon47
azel	rtklib.h	/^    double azel[2];     \/* azimuth\/elevation angles {az,el} (rad) *\/$/;"	m	struct:__anon59
baseline	rtklib.h	/^    double baseline[2]; \/* baseline length constraint {const,sigma} (m) *\/$/;"	m	struct:__anon55
baseline	rtkpos.c	/^static double baseline(const double *ru, const double *rb, double *dr)$/;"	f	file:
bcd2num	rcv/gw10.c	/^static int bcd2num(unsigned char bcd)$/;"	f	file:
bds_tgd	rcv/binex.c	/^static double bds_tgd(int tgd)$/;"	f	file:
bdsmodear	rtklib.h	/^    int bdsmodear;      \/* BeiDou AR mode (0:off,1:on) *\/$/;"	m	struct:__anon55
bdt0	rtkcmn.c	/^const static double bdt0 []={2006,1, 1,0,0,0}; \/* beidou time reference *\/$/;"	v	file:
bdt2gpst	rtkcmn.c	/^extern gtime_t bdt2gpst(gtime_t t)$/;"	f
bdt2time	rtkcmn.c	/^extern gtime_t bdt2time(int week, double sec)$/;"	f
bite	rtklib.h	/^    unsigned char bite; \/* IGP mask end bit *\/$/;"	m	struct:__anon35
bits	rtklib.h	/^    unsigned char bits; \/* IGP mask start bit *\/$/;"	m	struct:__anon35
blq	rtklib.h	/^    char blq    [MAXSTRPATH]; \/* ocean tide loading blq file *\/$/;"	m	struct:__anon57
bstar	rtklib.h	/^    double bstar;       \/* B* drag term *\/$/;"	m	struct:__anon21
buff	rtklib.h	/^    unsigned char *buff; \/* input buffers *\/$/;"	m	struct:__anon65
buff	rtklib.h	/^    unsigned char *buff[3]; \/* input buffers {rov,base,corr} *\/$/;"	m	struct:__anon66
buff	rtklib.h	/^    unsigned char buff[1200]; \/* message buffer *\/$/;"	m	struct:__anon49
buff	rtklib.h	/^    unsigned char buff[MAXRAWLEN]; \/* message buffer *\/$/;"	m	struct:__anon62
buff	rtklib.h	/^    unsigned char buff[MAXSOLMSG+1]; \/* message buffer *\/$/;"	m	struct:__anon46
buff	stream.c	/^    unsigned char *buff;    \/* write buffer *\/$/;"	m	struct:__anon67	file:
buff	stream.c	/^    unsigned char buff[NTRIP_MAXRSP]; \/* response buffer *\/$/;"	m	struct:__anon72	file:
buff2sysopts	options.c	/^static void buff2sysopts(void)$/;"	f	file:
buffsize	rtklib.h	/^    int buffsize;       \/* input buffer size (bytes) *\/$/;"	m	struct:__anon66
buffsize	rtklib.h	/^    int buffsize;       \/* input\/monitor buffer size (bytes) *\/$/;"	m	struct:__anon65
buffsize	stream.c	/^    int buffsize;           \/* write buffer size (bytes) *\/$/;"	m	struct:__anon67	file:
buffsize	stream.c	/^static int buffsize =32768; \/* receive\/send buffer size (bytes) *\/$/;"	v	file:
c	rcv/rt17.c	/^typedef union {unsigned short u2; unsigned char c[2];} ENDIAN_TEST; $/;"	m	union:__anon5	file:
cbias	rtklib.h	/^    double cbias[MAXSAT][3];   \/* code bias (0:p1-p2,1:p1-c1,2:p2-c2) (m) *\/$/;"	m	struct:__anon43
cbias	rtklib.h	/^    float cbias[MAXCODE]; \/* code biases (m) *\/$/;"	m	struct:__anon38
cellmask	rtcm3.c	/^    unsigned char cellmask[64];     \/* cell mask *\/$/;"	m	struct:__anon7	file:
cerr	rtklib.h	/^    double cerr[4][NFREQ*2]; \/* code errors (m) *\/$/;"	m	struct:__anon53
check_packet_checksum	rcv/rt17.c	/^static int check_packet_checksum(raw_t *raw)$/;"	f	file:
check_parity	rcv/gw10.c	/^extern int check_parity(unsigned int word, unsigned char *data)$/;"	f
checkbrk	postpos.c	/^static int checkbrk(const char *format, ...)$/;"	f	file:
checkpri	rcv/javad.c	/^static int checkpri(const char *opt, int sys, int code, int freq)$/;"	f	file:
checkpri	rcv/novatel.c	/^static int checkpri(const char *opt, int sys, int code, int freq)$/;"	f	file:
checkpri	rcv/septentrio.c	/^static int checkpri(const char *opt, int sys, int code, int freq)$/;"	f	file:
checksum	rcv/javad.c	/^static int checksum(unsigned char *buff, int len)$/;"	f	file:
checksum	rcv/septentrio.c	/^static unsigned short checksum(unsigned char *buff, int len)$/;"	f	file:
checksum	rcv/skytraq.c	/^static unsigned char checksum(unsigned char *buff, int len)$/;"	f	file:
checksum	rcv/ublox.c	/^static int checksum(unsigned char *buff, int len)$/;"	f	file:
checksum	tle.c	/^static int checksum(const char *buff)$/;"	f	file:
chisqr	rtkcmn.c	/^const double chisqr[100]={      \/* chi-sqr(n) (alpha=0.001) *\/$/;"	v
chksum	rcv/crescent.c	/^static int chksum(const unsigned char *buff, int len)$/;"	f	file:
chksum	rcv/gw10.c	/^static int chksum(const unsigned char *buff, int n)$/;"	f	file:
chksum	rcv/novatel.c	/^static unsigned char chksum(const unsigned char *buff, int len)$/;"	f	file:
chksum	rcv/ss2.c	/^static int chksum(const unsigned char *buff, int len)$/;"	f	file:
chop	options.c	/^static void chop(char *str)$/;"	f	file:
chop	tle.c	/^static void chop(char *buff)$/;"	f	file:
cic	rtklib.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon16
cis	rtklib.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon16
clear_message_buffer	rcv/rt17.c	/^static void clear_message_buffer(raw_t *raw)$/;"	f	file:
clear_packet_buffer	rcv/rt17.c	/^static void clear_packet_buffer(raw_t *raw)$/;"	f	file:
clearbuff	rcv/javad.c	/^static void clearbuff(raw_t *raw)$/;"	f	file:
cli	stream.c	/^    tcp_t cli[MAXCLI];      \/* tcp client controls *\/$/;"	m	struct:__anon70	file:
clk	rtklib.h	/^    double clk[MAXSAT][1]; \/* satellite clock (s) *\/$/;"	m	struct:__anon19
clk_ext	rtcm3.c	/^    unsigned char clk_ext;          \/* external clock indicator *\/$/;"	m	struct:__anon7	file:
clk_str	rtcm3.c	/^    unsigned char clk_str;          \/* clock steering indicator *\/$/;"	m	struct:__anon7	file:
close_strfile	convrnx.c	/^static void close_strfile(strfile_t *str)$/;"	f	file:
closefile	convrnx.c	/^static void closefile(FILE **ofp, const rnxopt_t *opt, nav_t *nav)$/;"	f	file:
closefile	stream.c	/^static void closefile(file_t *file)$/;"	f	file:
closefile_	stream.c	/^static void closefile_(file_t *file)$/;"	f	file:
closeftp	stream.c	/^static void closeftp(ftp_t *ftp)$/;"	f	file:
closegeoid	geoid.c	/^extern void closegeoid(void)$/;"	f
closentrip	stream.c	/^static void closentrip(ntrip_t *ntrip)$/;"	f	file:
closeserial	stream.c	/^static void closeserial(serial_t *serial)$/;"	f	file:
closeses	postpos.c	/^static void closeses(nav_t *nav, pcvs_t *pcvs, pcvs_t *pcvr)$/;"	f	file:
closesocket	stream.c	98;"	d	file:
closetcpcli	stream.c	/^static void closetcpcli(tcpcli_t *tcpcli)$/;"	f	file:
closetcpsvr	stream.c	/^static void closetcpsvr(tcpsvr_t *tcpsvr)$/;"	f	file:
cmp_str	download.c	/^static int cmp_str(const char *str1, const char *str2)$/;"	f	file:
cmp_tle_data	tle.c	/^static int cmp_tle_data(const void *p1, const void *p2)$/;"	f	file:
cmpeph	rtkcmn.c	/^static int cmpeph(const void *p1, const void *p2)$/;"	f	file:
cmpgeph	rtkcmn.c	/^static int cmpgeph(const void *p1, const void *p2)$/;"	f	file:
cmpmsgs	sbas.c	/^static int cmpmsgs(const void *p1, const void *p2)$/;"	f	file:
cmpobs	rtkcmn.c	/^static int cmpobs(const void *p1, const void *p2)$/;"	f	file:
cmppclk	rinex.c	/^static int cmppclk(const void *p1, const void *p2)$/;"	f	file:
cmppeph	preceph.c	/^static int cmppeph(const void *p1, const void *p2)$/;"	f	file:
cmpprm	datum.c	/^static int cmpprm(const void *p1, const void *p2)$/;"	f	file:
cmpseph	rtkcmn.c	/^static int cmpseph(const void *p1, const void *p2)$/;"	f	file:
cmpsol	solution.c	/^static int cmpsol(const void *p1, const void *p2)$/;"	f	file:
cmpsolstat	solution.c	/^static int cmpsolstat(const void *p1, const void *p2)$/;"	f	file:
code	datum.c	/^    int code;                       \/* mesh code *\/$/;"	m	struct:__anon2	file:
code	rinex.c	/^    unsigned char code[MAXOBSTYPE];     \/* obs code (CODE_L??) *\/$/;"	m	struct:__anon6	file:
code	rtklib.h	/^    char code[MAXANT];  \/* serial number or satellite code *\/$/;"	m	struct:__anon13
code	rtklib.h	/^    int code;           \/* GPS\/QZS: code on L2, GAL\/CMP: data sources *\/$/;"	m	struct:__anon16
code	rtklib.h	/^    unsigned char code[NFREQ+NEXOBS]; \/* code indicator (CODE_???) *\/$/;"	m	struct:__anon9
code2obs	rtkcmn.c	/^extern char *code2obs(unsigned char code, int *freq)$/;"	f
code2sys	preceph.c	/^static int code2sys(char code)$/;"	f	file:
codepris	rtkcmn.c	/^static char codepris[6][MAXFREQ][16]={  \/* code priority table *\/$/;"	v	file:
codes_bds	rtcm3.c	/^static const int codes_bds[]={$/;"	v	file:
codes_bds	rtcm3e.c	/^static const int codes_bds[]={$/;"	v	file:
codes_gal	rtcm3.c	/^static const int codes_gal[]={$/;"	v	file:
codes_gal	rtcm3e.c	/^static const int codes_gal[]={$/;"	v	file:
codes_glo	rtcm3.c	/^static const int codes_glo[]={$/;"	v	file:
codes_glo	rtcm3e.c	/^static const int codes_glo[]={$/;"	v	file:
codes_gps	rtcm3.c	/^static const int codes_gps[]={$/;"	v	file:
codes_gps	rtcm3e.c	/^static  const int codes_gps[]={$/;"	v	file:
codes_qzs	rtcm3.c	/^static const int codes_qzs[]={$/;"	v	file:
codes_qzs	rtcm3e.c	/^static const int codes_qzs[]={$/;"	v	file:
codes_sbs	rtcm3.c	/^static const int codes_sbs[]={$/;"	v	file:
codes_sbs	rtcm3e.c	/^static const int codes_sbs[]={$/;"	v	file:
codesmooth	rtklib.h	/^    int codesmooth;     \/* code smoothing window size (0:none) *\/$/;"	m	struct:__anon55
coef	rtklib.h	/^    double coef[3][2];  \/* coefficients lat x lon (3 x 2) *\/$/;"	m	struct:__anon42
combpclk	rinex.c	/^static void combpclk(nav_t *nav)$/;"	f	file:
combpeph	preceph.c	/^static void combpeph(nav_t *nav, int opt)$/;"	f	file:
combres	postpos.c	/^static void combres(FILE *fp, const prcopt_t *popt, const solopt_t *sopt)$/;"	f	file:
combtec	ionex.c	/^static void combtec(nav_t *nav)$/;"	f	file:
comment	rtklib.h	/^    char *comment;      \/* option comment\/enum labels\/unit *\/$/;"	m	struct:__anon52
comment	rtklib.h	/^    char comment[MAXCOMMENT][64]; \/* comments *\/$/;"	m	struct:__anon58
compTwoConv	rcv/septentrio.c	/^static int compTwoConv(unsigned int byte) {$/;"	f	file:
compact_paths	download.c	/^static void compact_paths(paths_t *paths)$/;"	f	file:
conffunc	ppp_ar.c	/^static double conffunc(int N, double B, double sig)$/;"	f	file:
connect_nb	stream.c	/^static int connect_nb(socket_t sock, struct sockaddr *addr, socklen_t len)$/;"	f	file:
consock	stream.c	/^static int consock(tcpcli_t *tcpcli, char *msg)$/;"	f	file:
constbl	rtkpos.c	/^static int constbl(rtk_t *rtk, const double *x, const double *P, double *v,$/;"	f	file:
conv	rtklib.h	/^    strconv_t *conv[16]; \/* stream converter *\/$/;"	m	struct:__anon65
convcode	convrnx.c	/^static void convcode(double ver, int sys, char *type)$/;"	f	file:
convcode	rinex.c	/^static void convcode(double ver, int sys, const char *str, char *type)$/;"	f	file:
convkml	convkml.c	/^extern int convkml(const char *infile, const char *outfile, gtime_t ts,$/;"	f
convlex	convrnx.c	/^static void convlex(FILE **ofp, rnxopt_t *opt, strfile_t *str, int *n)$/;"	f	file:
convnav	convrnx.c	/^static void convnav(FILE **ofp, rnxopt_t *opt, strfile_t *str, int *n)$/;"	f	file:
convobs	convrnx.c	/^static void convobs(FILE **ofp, rnxopt_t *opt, strfile_t *str, int *n,$/;"	f	file:
convrnx	convrnx.c	/^extern int convrnx(int format, rnxopt_t *opt, const char *file, char **ofile)$/;"	f
convrnx_s	convrnx.c	/^static int convrnx_s(int sess, int format, rnxopt_t *opt, const char *file,$/;"	f	file:
convsbs	convrnx.c	/^static void convsbs(FILE **ofp, rnxopt_t *opt, strfile_t *str, int *n)$/;"	f	file:
corr_ion	ppp.c	/^static int corr_ion(gtime_t time, const nav_t *nav, int sat, const double *pos,$/;"	f	file:
corrmeas	ppp.c	/^static int corrmeas(const obsd_t *obs, const nav_t *nav, const double *pos,$/;"	f	file:
cov	rtklib.h	/^    float  cov[MAXSAT][3]; \/* satellite position covariance (m^2) *\/$/;"	m	struct:__anon18
covecef	rtkcmn.c	/^extern void covecef(const double *pos, const double *Q, double *P)$/;"	f
covenu	rtkcmn.c	/^extern void covenu(const double *pos, const double *P, double *Q)$/;"	f
covtosol	solution.c	/^static void covtosol(const double *P, sol_t *sol)$/;"	f	file:
cp	rtklib.h	/^    double cp[MAXSAT][NFREQ+NEXOBS]; \/* carrier-phase measurement *\/$/;"	m	struct:__anon49
cp_pr	rtcm3e.c	/^static double cp_pr(double cp, double pr_cyc)$/;"	f	file:
cputime	rtklib.h	/^    int cputime;        \/* CPU time (ms) for a processing cycle *\/$/;"	m	struct:__anon66
crc	rtklib.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon16
crc32r	rcv/rcvlex.c	/^static unsigned int crc32r(const unsigned char *buff, int len)$/;"	f	file:
createdir	rtkcmn.c	/^extern void createdir(const char *path)$/;"	f
cross3	rtkcmn.c	/^extern void cross3(const double *a, const double *b, double *c)$/;"	f
crs	rtklib.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon16
csmooth	rtkcmn.c	/^extern void csmooth(obs_t *obs, int ns)$/;"	f
csum8	rcv/binex.c	/^static unsigned char csum8(const unsigned char *buff, int len)$/;"	f	file:
cuc	rtklib.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon16
cus	rtklib.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon16
cycle	rtklib.h	/^    int cycle;          \/* processing cycle (ms) *\/$/;"	m	struct:__anon66
cycle	rtklib.h	/^    int cycle;          \/* server cycle (ms) *\/$/;"	m	struct:__anon65
cyclic	rtklib.h	/^    int cyclic;         \/* cyclic buffer flag *\/$/;"	m	struct:__anon46
daf0	rtklib.h	/^    double daf0,daf1;   \/* delta clock-offset\/drift (s,s\/s) *\/$/;"	m	struct:__anon31
daf1	rtklib.h	/^    double daf0,daf1;   \/* delta clock-offset\/drift (s,s\/s) *\/$/;"	m	struct:__anon31
data	rtklib.h	/^    double *data;       \/* TEC grid data (tecu) *\/$/;"	m	struct:__anon23
data	rtklib.h	/^    erpd_t *data;       \/* earth rotation parameter data *\/$/;"	m	struct:__anon12
data	rtklib.h	/^    obsd_t *data;       \/* observation data records *\/$/;"	m	struct:__anon10
data	rtklib.h	/^    sol_t *data;        \/* solution data *\/$/;"	m	struct:__anon46
data	rtklib.h	/^    solstat_t *data;    \/* solution status data *\/$/;"	m	struct:__anon48
data	rtklib.h	/^    stecd_t *data;      \/* stec data *\/$/;"	m	struct:__anon25
data	rtklib.h	/^    tled_t *data;       \/* norad two line element data *\/$/;"	m	struct:__anon22
data	rtklib.h	/^    zwdd_t *data;       \/* zwd data *\/$/;"	m	struct:__anon27
dataindex	ionex.c	/^static int dataindex(int i, int j, int k, const int *ndata)$/;"	f	file:
datum	rtklib.h	/^    int datum;          \/* datum (0:WGS84,1:Tokyo) *\/$/;"	m	struct:__anon56
db	datum.c	/^    float db,dl;                    \/* difference of latitude\/longitude (sec) *\/$/;"	m	struct:__anon2	file:
dcb	rtklib.h	/^    char dcb    [MAXSTRPATH]; \/* dcb data file *\/$/;"	m	struct:__anon57
dclk	rtklib.h	/^    double dclk [3];    \/* delta clock {c0,c1,c2} (m,m\/s,m\/s^2) *\/$/;"	m	struct:__anon38
ddcov	rtkpos.c	/^static void ddcov(const int *nb, int n, const double *Ri, const double *Rj,$/;"	f	file:
ddeph	rtklib.h	/^    double ddeph[3];    \/* dot delta orbit {radial,along,cross} (m\/s) *\/$/;"	m	struct:__anon38
ddmat	rtkpos.c	/^static int ddmat(rtk_t *rtk, double *D)$/;"	f	file:
ddres	rtkpos.c	/^static int ddres(rtk_t *rtk, const nav_t *nav, double dt, const double *x,$/;"	f	file:
decode_CA	rcv/javad.c	/^static int decode_CA(raw_t *raw)$/;"	f	file:
decode_CN	rcv/javad.c	/^static int decode_CN(raw_t *raw)$/;"	f	file:
decode_Dx	rcv/javad.c	/^static int decode_Dx(raw_t *raw, char code)$/;"	f	file:
decode_EA	rcv/javad.c	/^static int decode_EA(raw_t *raw)$/;"	f	file:
decode_ED	rcv/javad.c	/^static int decode_ED(raw_t *raw)$/;"	f	file:
decode_EN	rcv/javad.c	/^static int decode_EN(raw_t *raw)$/;"	f	file:
decode_ET	rcv/javad.c	/^static int decode_ET(raw_t *raw)$/;"	f	file:
decode_EU	rcv/javad.c	/^static int decode_EU(raw_t *raw)$/;"	f	file:
decode_Ex	rcv/javad.c	/^static int decode_Ex(raw_t *raw, char code)$/;"	f	file:
decode_Fx	rcv/javad.c	/^static int decode_Fx(raw_t *raw, char code)$/;"	f	file:
decode_GA	rcv/javad.c	/^static int decode_GA(raw_t *raw)$/;"	f	file:
decode_GE	rcv/javad.c	/^static int decode_GE(raw_t *raw)$/;"	f	file:
decode_IA	rcv/javad.c	/^static int decode_IA(raw_t *raw)$/;"	f	file:
decode_IE	rcv/javad.c	/^static int decode_IE(raw_t *raw)$/;"	f	file:
decode_IO	rcv/javad.c	/^static int decode_IO(raw_t *raw)$/;"	f	file:
decode_L1Cnav	rcv/javad.c	/^static int decode_L1Cnav(unsigned char *buff, int len, int sat, raw_t *raw)$/;"	f	file:
decode_L1nav	rcv/javad.c	/^static int decode_L1nav(unsigned char *buff, int len, int sat, raw_t *raw)$/;"	f	file:
decode_L2nav	rcv/javad.c	/^static int decode_L2nav(unsigned char *buff, int len, int sat, raw_t *raw)$/;"	f	file:
decode_L5nav	rcv/javad.c	/^static int decode_L5nav(unsigned char *buff, int len, int sat, raw_t *raw)$/;"	f	file:
decode_LD	rcv/javad.c	/^static int decode_LD(raw_t *raw)$/;"	f	file:
decode_NA	rcv/javad.c	/^static int decode_NA(raw_t *raw)$/;"	f	file:
decode_NE	rcv/javad.c	/^static int decode_NE(raw_t *raw)$/;"	f	file:
decode_NN	rcv/javad.c	/^static int decode_NN(raw_t *raw)$/;"	f	file:
decode_NU	rcv/javad.c	/^static int decode_NU(raw_t *raw)$/;"	f	file:
decode_Px	rcv/javad.c	/^static int decode_Px(raw_t *raw, char code)$/;"	f	file:
decode_QA	rcv/javad.c	/^static int decode_QA(raw_t *raw)$/;"	f	file:
decode_QE	rcv/javad.c	/^static int decode_QE(raw_t *raw)$/;"	f	file:
decode_QU	rcv/javad.c	/^static int decode_QU(raw_t *raw)$/;"	f	file:
decode_RD	rcv/javad.c	/^static int decode_RD(raw_t *raw)$/;"	f	file:
decode_RT	rcv/javad.c	/^static int decode_RT(raw_t *raw)$/;"	f	file:
decode_Rx	rcv/javad.c	/^static int decode_Rx(raw_t *raw, char code)$/;"	f	file:
decode_SI	rcv/javad.c	/^static int decode_SI(raw_t *raw)$/;"	f	file:
decode_TC	rcv/javad.c	/^static int decode_TC(raw_t *raw)$/;"	f	file:
decode_UO	rcv/javad.c	/^static int decode_UO(raw_t *raw)$/;"	f	file:
decode_WA	rcv/javad.c	/^static int decode_WA(raw_t *raw)$/;"	f	file:
decode_WD	rcv/javad.c	/^static int decode_WD(raw_t *raw)$/;"	f	file:
decode_WE	rcv/javad.c	/^static int decode_WE(raw_t *raw)$/;"	f	file:
decode_WU	rcv/javad.c	/^static int decode_WU(raw_t *raw)$/;"	f	file:
decode_alm1	rcv/skytraq.c	/^static int decode_alm1(int sat, raw_t *raw)$/;"	f	file:
decode_alm1	rcv/ublox.c	/^static int decode_alm1(int sat, raw_t *raw)$/;"	f	file:
decode_alm2	rcv/skytraq.c	/^static int decode_alm2(int sat, raw_t *raw)$/;"	f	file:
decode_alm2	rcv/ublox.c	/^static int decode_alm2(int sat, raw_t *raw)$/;"	f	file:
decode_almanac	rcvraw.c	/^static void decode_almanac(const unsigned char *buff, int sat, alm_t *alm)$/;"	f	file:
decode_bds_d1	rcvraw.c	/^extern int decode_bds_d1(const unsigned char *buff, eph_t *eph)$/;"	f
decode_bds_d2	rcvraw.c	/^extern int decode_bds_d2(const unsigned char *buff, eph_t *eph)$/;"	f
decode_bdsephemerisb	rcv/novatel.c	/^static int decode_bdsephemerisb(raw_t *raw)$/;"	f	file:
decode_bnx	rcv/binex.c	/^static int decode_bnx(raw_t *raw)$/;"	f	file:
decode_bnx_00	rcv/binex.c	/^static int decode_bnx_00(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_00	rcv/binex.c	/^static int decode_bnx_00_00(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_01	rcv/binex.c	/^static int decode_bnx_00_01(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_02	rcv/binex.c	/^static int decode_bnx_00_02(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_03	rcv/binex.c	/^static int decode_bnx_00_03(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_04	rcv/binex.c	/^static int decode_bnx_00_04(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_05	rcv/binex.c	/^static int decode_bnx_00_05(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_06	rcv/binex.c	/^static int decode_bnx_00_06(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_07	rcv/binex.c	/^static int decode_bnx_00_07(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_08	rcv/binex.c	/^static int decode_bnx_00_08(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_09	rcv/binex.c	/^static int decode_bnx_00_09(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0a	rcv/binex.c	/^static int decode_bnx_00_0a(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0b	rcv/binex.c	/^static int decode_bnx_00_0b(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0c	rcv/binex.c	/^static int decode_bnx_00_0c(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0d	rcv/binex.c	/^static int decode_bnx_00_0d(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0e	rcv/binex.c	/^static int decode_bnx_00_0e(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0f	rcv/binex.c	/^static int decode_bnx_00_0f(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_10	rcv/binex.c	/^static int decode_bnx_00_10(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_11	rcv/binex.c	/^static int decode_bnx_00_11(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_12	rcv/binex.c	/^static int decode_bnx_00_12(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_13	rcv/binex.c	/^static int decode_bnx_00_13(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_14	rcv/binex.c	/^static int decode_bnx_00_14(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_15	rcv/binex.c	/^static int decode_bnx_00_15(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_16	rcv/binex.c	/^static int decode_bnx_00_16(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_17	rcv/binex.c	/^static int decode_bnx_00_17(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_18	rcv/binex.c	/^static int decode_bnx_00_18(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_19	rcv/binex.c	/^static int decode_bnx_00_19(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1a	rcv/binex.c	/^static int decode_bnx_00_1a(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1b	rcv/binex.c	/^static int decode_bnx_00_1b(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1c	rcv/binex.c	/^static int decode_bnx_00_1c(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1d	rcv/binex.c	/^static int decode_bnx_00_1d(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1e	rcv/binex.c	/^static int decode_bnx_00_1e(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1f	rcv/binex.c	/^static int decode_bnx_00_1f(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_20	rcv/binex.c	/^static int decode_bnx_00_20(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_21	rcv/binex.c	/^static int decode_bnx_00_21(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_22	rcv/binex.c	/^static int decode_bnx_00_22(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_7f	rcv/binex.c	/^static int decode_bnx_00_7f(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01	rcv/binex.c	/^static int decode_bnx_01(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_00	rcv/binex.c	/^static int decode_bnx_01_00(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_01	rcv/binex.c	/^static int decode_bnx_01_01(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_02	rcv/binex.c	/^static int decode_bnx_01_02(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_03	rcv/binex.c	/^static int decode_bnx_01_03(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_04	rcv/binex.c	/^static int decode_bnx_01_04(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_05	rcv/binex.c	/^static int decode_bnx_01_05(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_06	rcv/binex.c	/^static int decode_bnx_01_06(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_02	rcv/binex.c	/^static int decode_bnx_02(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_03	rcv/binex.c	/^static int decode_bnx_03(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7d	rcv/binex.c	/^static int decode_bnx_7d(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7e	rcv/binex.c	/^static int decode_bnx_7e(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f	rcv/binex.c	/^static int decode_bnx_7f(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_00	rcv/binex.c	/^static int decode_bnx_7f_00(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_01	rcv/binex.c	/^static int decode_bnx_7f_01(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_02	rcv/binex.c	/^static int decode_bnx_7f_02(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_03	rcv/binex.c	/^static int decode_bnx_7f_03(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_04	rcv/binex.c	/^static int decode_bnx_7f_04(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_05	rcv/binex.c	/^static int decode_bnx_7f_05(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_05_obs	rcv/binex.c	/^static unsigned char *decode_bnx_7f_05_obs(raw_t *raw, unsigned char *buff,$/;"	f	file:
decode_cd	rcv/javad.c	/^static int decode_cd(raw_t *raw)$/;"	f	file:
decode_cnav	rcv/ublox.c	/^static int decode_cnav(raw_t *raw, int sat, int off)$/;"	f	file:
decode_cres	rcv/crescent.c	/^static int decode_cres(raw_t *raw)$/;"	f	file:
decode_creseph	rcv/crescent.c	/^static int decode_creseph(raw_t *raw)$/;"	f	file:
decode_cresgloeph	rcv/crescent.c	/^static int decode_cresgloeph(raw_t *raw)$/;"	f	file:
decode_cresgloraw	rcv/crescent.c	/^static int decode_cresgloraw(raw_t *raw)$/;"	f	file:
decode_cresionutc	rcv/crescent.c	/^static int decode_cresionutc(raw_t *raw)$/;"	f	file:
decode_crespos	rcv/crescent.c	/^static int decode_crespos(raw_t *raw)$/;"	f	file:
decode_cresraw	rcv/crescent.c	/^static int decode_cresraw(raw_t *raw)$/;"	f	file:
decode_cresraw2	rcv/crescent.c	/^static int decode_cresraw2(raw_t *raw)$/;"	f	file:
decode_creswaas	rcv/crescent.c	/^static int decode_creswaas(raw_t *raw)$/;"	f	file:
decode_enav	rcv/ublox.c	/^static int decode_enav(raw_t *raw, int sat, int off)$/;"	f	file:
decode_eph	rcv/javad.c	/^static int decode_eph(raw_t *raw, int sys)$/;"	f	file:
decode_eph	rinex.c	/^static int decode_eph(double ver, int sat, gtime_t toc, const double *data,$/;"	f	file:
decode_ephem	rcv/skytraq.c	/^static int decode_ephem(int sat, raw_t *raw)$/;"	f	file:
decode_ephem	rcv/ublox.c	/^static int decode_ephem(int sat, raw_t *raw)$/;"	f	file:
decode_frame	rcvraw.c	/^extern int decode_frame(const unsigned char *buff, eph_t *eph, alm_t *alm,$/;"	f
decode_frmb	rcv/novatel.c	/^static int decode_frmb(raw_t *raw)$/;"	f	file:
decode_gal_inav	rcvraw.c	/^extern int decode_gal_inav(const unsigned char *buff, eph_t *eph)$/;"	f
decode_galalm	rcv/septentrio.c	/^static int decode_galalm(raw_t *raw)$/;"	f	file:
decode_galalmanacb	rcv/novatel.c	/^static int decode_galalmanacb(raw_t *raw)$/;"	f	file:
decode_galclockb	rcv/novatel.c	/^static int decode_galclockb(raw_t *raw)$/;"	f	file:
decode_galephemerisb	rcv/novatel.c	/^static int decode_galephemerisb(raw_t *raw)$/;"	f	file:
decode_galfnavrawpageb	rcv/novatel.c	/^static int decode_galfnavrawpageb(raw_t *raw)$/;"	f	file:
decode_galinavrawwordb	rcv/novatel.c	/^static int decode_galinavrawwordb(raw_t *raw)$/;"	f	file:
decode_galion	rcv/septentrio.c	/^static int decode_galion(raw_t *raw){$/;"	f	file:
decode_galionob	rcv/novatel.c	/^static int decode_galionob(raw_t *raw)$/;"	f	file:
decode_galnav	rcv/septentrio.c	/^static int decode_galnav(raw_t *raw){$/;"	f	file:
decode_galutc	rcv/septentrio.c	/^static int decode_galutc(raw_t *raw)$/;"	f	file:
decode_genout	rcv/rt17.c	/^static void decode_genout(raw_t *raw, int endian)$/;"	f	file:
decode_georaw	rcv/septentrio.c	/^static int decode_georaw(raw_t *raw){$/;"	f	file:
decode_geph	rinex.c	/^static int decode_geph(double ver, int sat, gtime_t toc, double *data,$/;"	f	file:
decode_gloephem	rcv/nvs.c	/^static int decode_gloephem(int sat, raw_t *raw)$/;"	f	file:
decode_gloephemerisb	rcv/novatel.c	/^static int decode_gloephemerisb(raw_t *raw)$/;"	f	file:
decode_glonav	rcv/septentrio.c	/^static int decode_glonav(raw_t *raw){$/;"	f	file:
decode_glorawcanav	rcv/septentrio.c	/^static int decode_glorawcanav(raw_t *raw){$/;"	f	file:
decode_glostr	rcvraw.c	/^extern int decode_glostr(const unsigned char *buff, geph_t *geph)$/;"	f
decode_gnav	rcv/ublox.c	/^static int decode_gnav(raw_t *raw, int sat, int off, int frq)$/;"	f	file:
decode_gnavh	rinex.c	/^static void decode_gnavh(char *buff, nav_t *nav)$/;"	f	file:
decode_gps_ephemeris	rcv/rt17.c	/^static int decode_gps_ephemeris(raw_t *raw, int e)$/;"	f	file:
decode_gps_subfrm4	rcvraw.c	/^static void decode_gps_subfrm4(const unsigned char *buff, alm_t *alm,$/;"	f	file:
decode_gps_subfrm5	rcvraw.c	/^static void decode_gps_subfrm5(const unsigned char *buff, alm_t *alm)$/;"	f	file:
decode_gpsalm	rcv/septentrio.c	/^static int decode_gpsalm(raw_t *raw)$/;"	f	file:
decode_gpsephem	rcv/nvs.c	/^static int decode_gpsephem(int sat, raw_t *raw)$/;"	f	file:
decode_gpsion	rcv/septentrio.c	/^static int decode_gpsion(raw_t *raw){$/;"	f	file:
decode_gpsnav	rcv/septentrio.c	/^static int decode_gpsnav(raw_t *raw){$/;"	f	file:
decode_gpsrawcanav	rcv/septentrio.c	/^static int decode_gpsrawcanav(raw_t *raw){$/;"	f	file:
decode_gpsutc	rcv/septentrio.c	/^static int decode_gpsutc(raw_t *raw)$/;"	f	file:
decode_gsof_1	rcv/rt17.c	/^static void decode_gsof_1(raw_t *raw, unsigned char *p, int endian)$/;"	f	file:
decode_gsof_16	rcv/rt17.c	/^static void decode_gsof_16(raw_t *raw, unsigned char *p, int endian)$/;"	f	file:
decode_gsof_26	rcv/rt17.c	/^static void decode_gsof_26(raw_t *raw, unsigned char *p, int endian)$/;"	f	file:
decode_gsof_41	rcv/rt17.c	/^static void decode_gsof_41(raw_t *raw, unsigned char *p, int endian)$/;"	f	file:
decode_gw10	rcv/gw10.c	/^static int decode_gw10(raw_t *raw)$/;"	f	file:
decode_gw10gps	rcv/gw10.c	/^static int decode_gw10gps(raw_t *raw)$/;"	f	file:
decode_gw10raw	rcv/gw10.c	/^static int decode_gw10raw(raw_t *raw)$/;"	f	file:
decode_gw10reph	rcv/gw10.c	/^static int decode_gw10reph(raw_t *raw)$/;"	f	file:
decode_gw10sbs	rcv/gw10.c	/^static int decode_gw10sbs(raw_t *raw)$/;"	f	file:
decode_gw10sol	rcv/gw10.c	/^static int decode_gw10sol(raw_t *raw)$/;"	f	file:
decode_head1001	rtcm3.c	/^static int decode_head1001(rtcm_t *rtcm, int *sync)$/;"	f	file:
decode_head1009	rtcm3.c	/^static int decode_head1009(rtcm_t *rtcm, int *sync)$/;"	f	file:
decode_hnavh	rinex.c	/^static void decode_hnavh(char *buff, nav_t *nav)$/;"	f	file:
decode_id	rcv/javad.c	/^static int decode_id(raw_t *raw)$/;"	f	file:
decode_ion_utc_data	rcv/rt17.c	/^static int decode_ion_utc_data(raw_t *raw, int e)$/;"	f	file:
decode_ionb	rcv/novatel.c	/^static int decode_ionb(raw_t *raw)$/;"	f	file:
decode_ionutcb	rcv/novatel.c	/^static int decode_ionutcb(raw_t *raw)$/;"	f	file:
decode_javad	rcv/javad.c	/^static int decode_javad(raw_t *raw)$/;"	f	file:
decode_lD	rcv/javad.c	/^static int decode_lD(raw_t *raw)$/;"	f	file:
decode_lexeph	qzslex.c	/^static int decode_lexeph(const unsigned char *buff, int i, gtime_t toe,$/;"	f	file:
decode_lexhealth	qzslex.c	/^static int decode_lexhealth(const unsigned char *buff, int i, gtime_t tof,$/;"	f	file:
decode_lexion	qzslex.c	/^static int decode_lexion(const unsigned char *buff, int i, gtime_t tof,$/;"	f	file:
decode_lexmsg	rcv/rcvlex.c	/^static int decode_lexmsg(raw_t *raw)$/;"	f	file:
decode_lexr	rcv/rcvlex.c	/^static int decode_lexr(raw_t *raw)$/;"	f	file:
decode_lexraw	rcv/rcvlex.c	/^static int decode_lexraw(raw_t *raw)$/;"	f	file:
decode_lextof	qzslex.c	/^static int decode_lextof(const unsigned char *buff, int i, gtime_t *tof,$/;"	f	file:
decode_lextype10	qzslex.c	/^static int decode_lextype10(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f	file:
decode_lextype11	qzslex.c	/^static int decode_lextype11(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f	file:
decode_lextype12	qzslex.c	/^static int decode_lextype12(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f	file:
decode_lextype20	qzslex.c	/^static int decode_lextype20(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f	file:
decode_line1	tle.c	/^static int decode_line1(const char *buff, tled_t *data)$/;"	f	file:
decode_line2	tle.c	/^static int decode_line2(const char *buff, tled_t *data)$/;"	f	file:
decode_longcorr0	sbas.c	/^static int decode_longcorr0(const sbsmsg_t *msg, int p, sbssat_t *sbssat)$/;"	f	file:
decode_longcorr1	sbas.c	/^static int decode_longcorr1(const sbsmsg_t *msg, int p, sbssat_t *sbssat)$/;"	f	file:
decode_longcorrh	sbas.c	/^static int decode_longcorrh(const sbsmsg_t *msg, int p, sbssat_t *sbssat)$/;"	f	file:
decode_measepoch	rcv/septentrio.c	/^static int decode_measepoch(raw_t *raw){$/;"	f	file:
decode_msm0	rtcm3.c	/^static int decode_msm0(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm4	rtcm3.c	/^static int decode_msm4(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm5	rtcm3.c	/^static int decode_msm5(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm6	rtcm3.c	/^static int decode_msm6(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm7	rtcm3.c	/^static int decode_msm7(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm_head	rtcm3.c	/^static int decode_msm_head(rtcm_t *rtcm, int sys, int *sync, int *iod,$/;"	f	file:
decode_nD	rcv/javad.c	/^static int decode_nD(raw_t *raw, int sys)$/;"	f	file:
decode_nav	rcv/ublox.c	/^static int decode_nav(raw_t *raw, int sat, int off)$/;"	f	file:
decode_navh	rinex.c	/^static void decode_navh(char *buff, nav_t *nav)$/;"	f	file:
decode_navsol	rcv/ublox.c	/^static int decode_navsol(raw_t *raw)$/;"	f	file:
decode_navtime	rcv/ublox.c	/^static int decode_navtime(raw_t *raw)$/;"	f	file:
decode_nd	rcv/javad.c	/^static int decode_nd(raw_t *raw, int sys)$/;"	f	file:
decode_nmea	solution.c	/^static int decode_nmea(char *buff, sol_t *sol)$/;"	f	file:
decode_nmeagga	solution.c	/^static int decode_nmeagga(char **val, int n, sol_t *sol)$/;"	f	file:
decode_nmearmc	solution.c	/^static int decode_nmearmc(char **val, int n, sol_t *sol)$/;"	f	file:
decode_nvs	rcv/nvs.c	/^static int decode_nvs(raw_t *raw)$/;"	f	file:
decode_obsdata	rinex.c	/^static int decode_obsdata(FILE *fp, char *buff, double ver, int mask,$/;"	f	file:
decode_obsepoch	rinex.c	/^static int decode_obsepoch(FILE *fp, char *buff, double ver, gtime_t *time,$/;"	f	file:
decode_obsh	rinex.c	/^static void decode_obsh(FILE *fp, char *buff, double ver, int *tsys,$/;"	f	file:
decode_oem3	rcv/novatel.c	/^static int decode_oem3(raw_t *raw)$/;"	f	file:
decode_oem4	rcv/novatel.c	/^static int decode_oem4(raw_t *raw)$/;"	f	file:
decode_px	rcv/javad.c	/^static int decode_px(raw_t *raw, char code)$/;"	f	file:
decode_qzs_subfrm45	rcvraw.c	/^static void decode_qzs_subfrm45(const unsigned char *buff, alm_t *alm,$/;"	f	file:
decode_qzssionutcb	rcv/novatel.c	/^static int decode_qzssionutcb(raw_t *raw)$/;"	f	file:
decode_qzssrawephemb	rcv/novatel.c	/^static int decode_qzssrawephemb(raw_t *raw)$/;"	f	file:
decode_qzssrawsubframeb	rcv/novatel.c	/^static int decode_qzssrawsubframeb(raw_t *raw)$/;"	f	file:
decode_rangeb	rcv/novatel.c	/^static int decode_rangeb(raw_t *raw)$/;"	f	file:
decode_rangecmpb	rcv/novatel.c	/^static int decode_rangecmpb(raw_t *raw)$/;"	f	file:
decode_rawcnavframeb	rcv/novatel.c	/^static int decode_rawcnavframeb(raw_t *raw)$/;"	f	file:
decode_rawdata	rcv/rt17.c	/^static int decode_rawdata(raw_t *raw, int endian)$/;"	f	file:
decode_rawephemb	rcv/novatel.c	/^static int decode_rawephemb(raw_t *raw)$/;"	f	file:
decode_rawsbasframeb	rcv/novatel.c	/^static int decode_rawsbasframeb(raw_t *raw)$/;"	f	file:
decode_rawwaasframeb	rcv/novatel.c	/^static int decode_rawwaasframeb(raw_t *raw)$/;"	f	file:
decode_refpos	solution.c	/^static void decode_refpos(char *buff, const solopt_t *opt, double *rb)$/;"	f	file:
decode_repb	rcv/novatel.c	/^static int decode_repb(raw_t *raw)$/;"	f	file:
decode_retsvdata	rcv/rt17.c	/^static int decode_retsvdata(raw_t *raw, int endian)$/;"	f	file:
decode_rgeb	rcv/novatel.c	/^static int decode_rgeb(raw_t *raw)$/;"	f	file:
decode_rged	rcv/novatel.c	/^static int decode_rged(raw_t *raw)$/;"	f	file:
decode_rtcm2	rtcm2.c	/^extern int decode_rtcm2(rtcm_t *rtcm)$/;"	f
decode_rtcm3	rtcm3.c	/^extern int decode_rtcm3(rtcm_t *rtcm)$/;"	f
decode_rx	rcv/javad.c	/^static int decode_rx(raw_t *raw, char code)$/;"	f	file:
decode_rxmraw	rcv/ublox.c	/^static int decode_rxmraw(raw_t *raw)$/;"	f	file:
decode_rxmrawx	rcv/ublox.c	/^static int decode_rxmrawx(raw_t *raw)$/;"	f	file:
decode_rxmsfrb	rcv/ublox.c	/^static int decode_rxmsfrb(raw_t *raw)$/;"	f	file:
decode_rxmsfrbx	rcv/ublox.c	/^static int decode_rxmsfrbx(raw_t *raw)$/;"	f	file:
decode_sbasnav	rcv/septentrio.c	/^static int decode_sbasnav(raw_t *raw){$/;"	f	file:
decode_sbf	rcv/septentrio.c	/^static int decode_sbf(raw_t *raw)$/;"	f	file:
decode_sbstype1	sbas.c	/^static int decode_sbstype1(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype18	sbas.c	/^static int decode_sbstype18(const sbsmsg_t *msg, sbsion_t *sbsion)$/;"	f	file:
decode_sbstype2	sbas.c	/^static int decode_sbstype2(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype24	sbas.c	/^static int decode_sbstype24(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype25	sbas.c	/^static int decode_sbstype25(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype26	sbas.c	/^static int decode_sbstype26(const sbsmsg_t *msg, sbsion_t *sbsion)$/;"	f	file:
decode_sbstype6	sbas.c	/^static int decode_sbstype6(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype7	sbas.c	/^static int decode_sbstype7(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype9	sbas.c	/^static int decode_sbstype9(const sbsmsg_t *msg, nav_t *nav)$/;"	f	file:
decode_seph	rinex.c	/^static int decode_seph(double ver, int sat, gtime_t toc, double *data,$/;"	f	file:
decode_snav	rcv/ublox.c	/^static int decode_snav(raw_t *raw, int sat, int off)$/;"	f	file:
decode_sol	solution.c	/^static int decode_sol(char *buff, const solopt_t *opt, sol_t *sol, double *rb)$/;"	f	file:
decode_solenu	solution.c	/^static int decode_solenu(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_solgsi	solution.c	/^static int decode_solgsi(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_solllh	solution.c	/^static int decode_solllh(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_solopt	solution.c	/^static void decode_solopt(char *buff, solopt_t *opt)$/;"	f	file:
decode_solpos	solution.c	/^static int decode_solpos(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_solstat	solution.c	/^static int decode_solstat(char *buff, solstat_t *stat)$/;"	f	file:
decode_soltime	solution.c	/^static char *decode_soltime(char *buff, const solopt_t *opt, gtime_t *time)$/;"	f	file:
decode_solxyz	solution.c	/^static int decode_solxyz(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_ss2	rcv/ss2.c	/^static int decode_ss2(raw_t *raw)$/;"	f	file:
decode_ss2ecef	rcv/ss2.c	/^static int decode_ss2ecef(raw_t *raw)$/;"	f	file:
decode_ss2eph	rcv/ss2.c	/^static int decode_ss2eph(raw_t *raw)$/;"	f	file:
decode_ss2llh	rcv/ss2.c	/^static int decode_ss2llh(raw_t *raw)$/;"	f	file:
decode_ss2meas	rcv/ss2.c	/^static int decode_ss2meas(raw_t *raw)$/;"	f	file:
decode_ss2sbas	rcv/ss2.c	/^static int decode_ss2sbas(raw_t *raw)$/;"	f	file:
decode_ssr1	rtcm3.c	/^static int decode_ssr1(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr1_head	rtcm3.c	/^static int decode_ssr1_head(rtcm_t *rtcm, int sys, int *sync, int *iod,$/;"	f	file:
decode_ssr2	rtcm3.c	/^static int decode_ssr2(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr2_head	rtcm3.c	/^static int decode_ssr2_head(rtcm_t *rtcm, int sys, int *sync, int *iod,$/;"	f	file:
decode_ssr3	rtcm3.c	/^static int decode_ssr3(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr4	rtcm3.c	/^static int decode_ssr4(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr5	rtcm3.c	/^static int decode_ssr5(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr6	rtcm3.c	/^static int decode_ssr6(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_stq	rcv/skytraq.c	/^static int decode_stq(raw_t *raw)$/;"	f	file:
decode_stqack	rcv/skytraq.c	/^static int decode_stqack(raw_t *raw)$/;"	f	file:
decode_stqbds	rcv/skytraq.c	/^static int decode_stqbds(raw_t *raw)$/;"	f	file:
decode_stqglo	rcv/skytraq.c	/^static int decode_stqglo(raw_t *raw)$/;"	f	file:
decode_stqgloe	rcv/skytraq.c	/^static int decode_stqgloe(raw_t *raw)$/;"	f	file:
decode_stqgps	rcv/skytraq.c	/^static int decode_stqgps(raw_t *raw)$/;"	f	file:
decode_stqnack	rcv/skytraq.c	/^static int decode_stqnack(raw_t *raw)$/;"	f	file:
decode_stqraw	rcv/skytraq.c	/^static int decode_stqraw(raw_t *raw)$/;"	f	file:
decode_stqrawx	rcv/skytraq.c	/^static int decode_stqrawx(raw_t *raw)$/;"	f	file:
decode_stqtime	rcv/skytraq.c	/^static int decode_stqtime(raw_t *raw)$/;"	f	file:
decode_subfrm1	rcvraw.c	/^static int decode_subfrm1(const unsigned char *buff, eph_t *eph)$/;"	f	file:
decode_subfrm2	rcvraw.c	/^static int decode_subfrm2(const unsigned char *buff, eph_t *eph)$/;"	f	file:
decode_subfrm3	rcvraw.c	/^static int decode_subfrm3(const unsigned char *buff, eph_t *eph)$/;"	f	file:
decode_subfrm4	rcvraw.c	/^static int decode_subfrm4(const unsigned char *buff, alm_t *alm, double *ion,$/;"	f	file:
decode_subfrm5	rcvraw.c	/^static int decode_subfrm5(const unsigned char *buff, alm_t *alm, double *ion,$/;"	f	file:
decode_trackstat	rcv/novatel.c	/^static int decode_trackstat(unsigned int stat, int *sys, int *code, int *track,$/;"	f	file:
decode_trkd5	rcv/ublox.c	/^static int decode_trkd5(raw_t *raw)$/;"	f	file:
decode_trkmeas	rcv/ublox.c	/^static int decode_trkmeas(raw_t *raw)$/;"	f	file:
decode_trksfrbx	rcv/ublox.c	/^static int decode_trksfrbx(raw_t *raw)$/;"	f	file:
decode_type1	rtcm2.c	/^static int decode_type1(rtcm_t *rtcm)$/;"	f	file:
decode_type1001	rtcm3.c	/^static int decode_type1001(rtcm_t *rtcm)$/;"	f	file:
decode_type1002	rtcm3.c	/^static int decode_type1002(rtcm_t *rtcm)$/;"	f	file:
decode_type1003	rtcm3.c	/^static int decode_type1003(rtcm_t *rtcm)$/;"	f	file:
decode_type1004	rtcm3.c	/^static int decode_type1004(rtcm_t *rtcm)$/;"	f	file:
decode_type1005	rtcm3.c	/^static int decode_type1005(rtcm_t *rtcm)$/;"	f	file:
decode_type1006	rtcm3.c	/^static int decode_type1006(rtcm_t *rtcm)$/;"	f	file:
decode_type1007	rtcm3.c	/^static int decode_type1007(rtcm_t *rtcm)$/;"	f	file:
decode_type1008	rtcm3.c	/^static int decode_type1008(rtcm_t *rtcm)$/;"	f	file:
decode_type1009	rtcm3.c	/^static int decode_type1009(rtcm_t *rtcm)$/;"	f	file:
decode_type1010	rtcm3.c	/^static int decode_type1010(rtcm_t *rtcm)$/;"	f	file:
decode_type1011	rtcm3.c	/^static int decode_type1011(rtcm_t *rtcm)$/;"	f	file:
decode_type1012	rtcm3.c	/^static int decode_type1012(rtcm_t *rtcm)$/;"	f	file:
decode_type1013	rtcm3.c	/^static int decode_type1013(rtcm_t *rtcm)$/;"	f	file:
decode_type1019	rtcm3.c	/^static int decode_type1019(rtcm_t *rtcm)$/;"	f	file:
decode_type1020	rtcm3.c	/^static int decode_type1020(rtcm_t *rtcm)$/;"	f	file:
decode_type1021	rtcm3.c	/^static int decode_type1021(rtcm_t *rtcm)$/;"	f	file:
decode_type1022	rtcm3.c	/^static int decode_type1022(rtcm_t *rtcm)$/;"	f	file:
decode_type1023	rtcm3.c	/^static int decode_type1023(rtcm_t *rtcm)$/;"	f	file:
decode_type1024	rtcm3.c	/^static int decode_type1024(rtcm_t *rtcm)$/;"	f	file:
decode_type1025	rtcm3.c	/^static int decode_type1025(rtcm_t *rtcm)$/;"	f	file:
decode_type1026	rtcm3.c	/^static int decode_type1026(rtcm_t *rtcm)$/;"	f	file:
decode_type1027	rtcm3.c	/^static int decode_type1027(rtcm_t *rtcm)$/;"	f	file:
decode_type1030	rtcm3.c	/^static int decode_type1030(rtcm_t *rtcm)$/;"	f	file:
decode_type1031	rtcm3.c	/^static int decode_type1031(rtcm_t *rtcm)$/;"	f	file:
decode_type1032	rtcm3.c	/^static int decode_type1032(rtcm_t *rtcm)$/;"	f	file:
decode_type1033	rtcm3.c	/^static int decode_type1033(rtcm_t *rtcm)$/;"	f	file:
decode_type1034	rtcm3.c	/^static int decode_type1034(rtcm_t *rtcm)$/;"	f	file:
decode_type1035	rtcm3.c	/^static int decode_type1035(rtcm_t *rtcm)$/;"	f	file:
decode_type1037	rtcm3.c	/^static int decode_type1037(rtcm_t *rtcm)$/;"	f	file:
decode_type1038	rtcm3.c	/^static int decode_type1038(rtcm_t *rtcm)$/;"	f	file:
decode_type1039	rtcm3.c	/^static int decode_type1039(rtcm_t *rtcm)$/;"	f	file:
decode_type1042	rtcm3.c	/^static int decode_type1042(rtcm_t *rtcm)$/;"	f	file:
decode_type1044	rtcm3.c	/^static int decode_type1044(rtcm_t *rtcm)$/;"	f	file:
decode_type1045	rtcm3.c	/^static int decode_type1045(rtcm_t *rtcm)$/;"	f	file:
decode_type1046	rtcm3.c	/^static int decode_type1046(rtcm_t *rtcm)$/;"	f	file:
decode_type1230	rtcm3.c	/^static int decode_type1230(rtcm_t *rtcm)$/;"	f	file:
decode_type14	rtcm2.c	/^static int decode_type14(rtcm_t *rtcm)$/;"	f	file:
decode_type16	rtcm2.c	/^static int decode_type16(rtcm_t *rtcm)$/;"	f	file:
decode_type17	rtcm2.c	/^static int decode_type17(rtcm_t *rtcm)$/;"	f	file:
decode_type18	rtcm2.c	/^static int decode_type18(rtcm_t *rtcm)$/;"	f	file:
decode_type19	rtcm2.c	/^static int decode_type19(rtcm_t *rtcm)$/;"	f	file:
decode_type22	rtcm2.c	/^static int decode_type22(rtcm_t *rtcm)$/;"	f	file:
decode_type23	rtcm2.c	/^static int decode_type23(rtcm_t *rtcm)$/;"	f	file:
decode_type24	rtcm2.c	/^static int decode_type24(rtcm_t *rtcm)$/;"	f	file:
decode_type3	rtcm2.c	/^static int decode_type3(rtcm_t *rtcm)$/;"	f	file:
decode_type31	rtcm2.c	/^static int decode_type31(rtcm_t *rtcm)$/;"	f	file:
decode_type32	rtcm2.c	/^static int decode_type32(rtcm_t *rtcm)$/;"	f	file:
decode_type34	rtcm2.c	/^static int decode_type34(rtcm_t *rtcm)$/;"	f	file:
decode_type36	rtcm2.c	/^static int decode_type36(rtcm_t *rtcm)$/;"	f	file:
decode_type37	rtcm2.c	/^static int decode_type37(rtcm_t *rtcm)$/;"	f	file:
decode_type59	rtcm2.c	/^static int decode_type59(rtcm_t *rtcm)$/;"	f	file:
decode_type_17	rcv/rt17.c	/^static int decode_type_17(raw_t *raw, unsigned int rif, int e)$/;"	f	file:
decode_type_29	rcv/rt17.c	/^static int decode_type_29(raw_t *raw, int endian)$/;"	f	file:
decode_ubx	rcv/ublox.c	/^static int decode_ubx(raw_t *raw)$/;"	f	file:
decode_utcb	rcv/novatel.c	/^static int decode_utcb(raw_t *raw)$/;"	f	file:
decode_word	rtkcmn.c	/^extern int decode_word(unsigned int word, unsigned char *data)$/;"	f
decode_x4aiono	rcv/nvs.c	/^static int decode_x4aiono(raw_t *raw)$/;"	f	file:
decode_x4btime	rcv/nvs.c	/^static int decode_x4btime(raw_t *raw)$/;"	f	file:
decode_xE	rcv/javad.c	/^static int decode_xE(raw_t *raw, char code)$/;"	f	file:
decode_xP	rcv/javad.c	/^static int decode_xP(raw_t *raw, char code)$/;"	f	file:
decode_xR	rcv/javad.c	/^static int decode_xR(raw_t *raw, char code)$/;"	f	file:
decode_xd	rcv/javad.c	/^static int decode_xd(raw_t *raw, char code)$/;"	f	file:
decode_xe5bit	rcv/nvs.c	/^static int decode_xe5bit(raw_t *raw)$/;"	f	file:
decode_xf5raw	rcv/nvs.c	/^static int decode_xf5raw(raw_t *raw)$/;"	f	file:
decode_xf7eph	rcv/nvs.c	/^static int decode_xf7eph(raw_t *raw)$/;"	f	file:
decode_xp	rcv/javad.c	/^static int decode_xp(raw_t *raw, char code)$/;"	f	file:
decode_xr	rcv/javad.c	/^static int decode_xr(raw_t *raw, char code)$/;"	f	file:
decodef	rtkcmn.c	/^static int decodef(char *p, int n, double *v)$/;"	f	file:
decodefile	rtksvr.c	/^static void decodefile(rtksvr_t *svr, int index)$/;"	f	file:
decodeftppath	stream.c	/^static void decodeftppath(const char *path, char *addr, char *file, char *user,$/;"	f	file:
decodelen	rcv/javad.c	/^static int decodelen(const unsigned char *buff)$/;"	f	file:
decoderaw	rtksvr.c	/^static int decoderaw(rtksvr_t *svr, int index)$/;"	f	file:
decodetcppath	stream.c	/^static void decodetcppath(const char *path, char *addr, char *port, char *user,$/;"	f	file:
deg2dms	rtkcmn.c	/^extern void deg2dms(double deg, double *dms)$/;"	f
degf	rtklib.h	/^    int degf;           \/* latitude\/longitude format (0:ddd.ddd,1:ddd mm ss) *\/$/;"	m	struct:__anon56
degfcorr	sbas.c	/^static double degfcorr(int ai)$/;"	f	file:
del	rtklib.h	/^    double del[3];      \/* antenna position delta (e\/n\/u or x\/y\/z) (m) *\/$/;"	m	struct:__anon44
delay	rtklib.h	/^    float delay;        \/* vertical delay estimate (m) *\/$/;"	m	struct:__anon34
deln	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon16
deltype	rtklib.h	/^    int deltype;        \/* antenna delta type (0:enu,1:xyz) *\/$/;"	m	struct:__anon44
deph	rtklib.h	/^    double deph [3];    \/* delta orbit {radial,along,cross} (m) *\/$/;"	m	struct:__anon38
deq	ephemeris.c	/^static void deq(const double *x, double *xdot, const double *acc)$/;"	f	file:
desig	rtklib.h	/^    char desig[16];     \/* international designator *\/$/;"	m	struct:__anon21
detslp_dop	rtkpos.c	/^static void detslp_dop(rtk_t *rtk, const obsd_t *obs, int i, int rcv,$/;"	f	file:
detslp_gf	ppp.c	/^static void detslp_gf(rtk_t *rtk, const obsd_t *obs, int n, const nav_t *nav)$/;"	f	file:
detslp_gf_L1L2	rtkpos.c	/^static void detslp_gf_L1L2(rtk_t *rtk, const obsd_t *obs, int i, int j,$/;"	f	file:
detslp_gf_L1L5	rtkpos.c	/^static void detslp_gf_L1L5(rtk_t *rtk, const obsd_t *obs, int i, int j,$/;"	f	file:
detslp_ll	ppp.c	/^static void detslp_ll(rtk_t *rtk, const obsd_t *obs, int n)$/;"	f	file:
detslp_ll	rtkpos.c	/^static void detslp_ll(rtk_t *rtk, const obsd_t *obs, int i, int rcv)$/;"	f	file:
dev	stream.c	/^    dev_t dev;              \/* serial device *\/$/;"	m	struct:__anon67	file:
dev_t	stream.c	92;"	d	file:
dev_t	stream.c	96;"	d	file:
dgemm_	rtkcmn.c	320;"	d	file:
dgetrf_	rtkcmn.c	321;"	d	file:
dgetri_	rtkcmn.c	322;"	d	file:
dgetrs_	rtkcmn.c	323;"	d	file:
dgps	rtklib.h	/^    dgps_t *dgps;       \/* output of dgps corrections *\/$/;"	m	struct:__anon49
dgps	rtklib.h	/^    dgps_t dgps[MAXSAT]; \/* DGPS corrections *\/$/;"	m	struct:__anon43
dgps_t	rtklib.h	/^} dgps_t;$/;"	t	typeref:struct:__anon37
dir	rtklib.h	/^    char dir [1024];    \/* local directory *\/$/;"	m	struct:__anon51
discontcp	stream.c	/^static void discontcp(tcp_t *tcp, int tcon)$/;"	f	file:
dl	datum.c	/^    float db,dl;                    \/* difference of latitude\/longitude (sec) *\/$/;"	m	struct:__anon2	file:
dl_exec	download.c	/^extern int dl_exec(gtime_t ts, gtime_t te, double ti, int seqnos, int seqnoe,$/;"	f
dl_readstas	download.c	/^extern int dl_readstas(const char *file, char **stas, int nmax)$/;"	f
dl_readurls	download.c	/^extern int dl_readurls(const char *file, char **types, int ntype, url_t *urls,$/;"	f
dl_test	download.c	/^extern void dl_test(gtime_t ts, gtime_t te, double ti, const url_t *urls,$/;"	f
dlatdlon	datum.c	/^static int dlatdlon(const double *post, double *dpos)$/;"	f	file:
dmm2deg	solution.c	/^static double dmm2deg(double dmm)$/;"	f	file:
dms2deg	rtkcmn.c	/^extern double dms2deg(const double *dms)$/;"	f
dops	rtkcmn.c	/^extern void dops(int ns, const double *azel, double elmin, double *dop)$/;"	f
dot	rtkcmn.c	/^extern double dot(const double *a, const double *b, int n)$/;"	f
dpCA	rtklib.h	/^    double prCA[MAXSAT],dpCA[MAXSAT]; \/* L1\/CA pseudrange\/doppler for javad *\/$/;"	m	struct:__anon62
dpos	rtklib.h	/^    double dpos[3];     \/* delta position (m) (ecef) *\/$/;"	m	struct:__anon31
dt	rtklib.h	/^    double dt;          \/* range-rate correction delta-time (s) *\/$/;"	m	struct:__anon30
dtaun	rtklib.h	/^    double dtaun;       \/* delay between L1 and L2 (s) *\/$/;"	m	struct:__anon17
dtr	rtklib.h	/^    double dtr[6];      \/* receiver clock bias to time systems (s) *\/$/;"	m	struct:__anon45
dvel	rtklib.h	/^    double dvel[3];     \/* delta velocity (m\/s) (ecef) *\/$/;"	m	struct:__anon31
dynamics	rtklib.h	/^    int dynamics;       \/* dynamics model (0:none,1:velociy,2:accel) *\/$/;"	m	struct:__anon55
e	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon15
e	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon16
ecc	rtklib.h	/^    double ecc;         \/* eccentricity *\/$/;"	m	struct:__anon21
ecef2enu	rtkcmn.c	/^extern void ecef2enu(const double *pos, const double *r, double *e)$/;"	f
ecef2pos	rtkcmn.c	/^extern void ecef2pos(const double *r, double *pos)$/;"	f
eci2ecef	rtkcmn.c	/^extern void eci2ecef(gtime_t tutc, const double *erpv, double *U, double *gmst)$/;"	f
el	rtklib.h	/^    float az,el;        \/* azimuth\/elevation angle (rad) *\/$/;"	m	struct:__anon47
eleno	rtklib.h	/^    int eleno;          \/* element number *\/$/;"	m	struct:__anon21
elmask_	options.c	/^static double elmask_,elmaskar_,elmaskhold_;$/;"	v	file:
elmaskar	rtklib.h	/^    double elmaskar;    \/* elevation mask of AR for rising satellite (deg) *\/$/;"	m	struct:__anon55
elmaskar_	options.c	/^static double elmask_,elmaskar_,elmaskhold_;$/;"	v	file:
elmaskhold	rtklib.h	/^    double elmaskhold;  \/* elevation mask to hold ambiguity (deg) *\/$/;"	m	struct:__anon55
elmaskhold_	options.c	/^static double elmask_,elmaskar_,elmaskhold_;$/;"	v	file:
elmin	rtklib.h	/^    double elmin;       \/* elevation mask angle (rad) *\/$/;"	m	struct:__anon55
ena	rtklib.h	/^    int ena[2];         \/* enable flag {rover,base} *\/$/;"	m	struct:__anon54
ena	rtklib.h	/^    int ena[4];         \/* model enabled *\/$/;"	m	struct:__anon53
encbase64	stream.c	/^static int encbase64(char *str, const unsigned char *byte, int n)$/;"	f	file:
encode_head	rtcm3e.c	/^static int encode_head(int type, rtcm_t *rtcm, int sys, int sync, int nsat)$/;"	f	file:
encode_msm1	rtcm3e.c	/^static int encode_msm1(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm2	rtcm3e.c	/^static int encode_msm2(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm3	rtcm3e.c	/^static int encode_msm3(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm4	rtcm3e.c	/^static int encode_msm4(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm5	rtcm3e.c	/^static int encode_msm5(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm6	rtcm3e.c	/^static int encode_msm6(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm7	rtcm3e.c	/^static int encode_msm7(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm_cnr	rtcm3e.c	/^static int encode_msm_cnr(rtcm_t *rtcm, int i, const float *cnr, int ncell)$/;"	f	file:
encode_msm_cnr_ex	rtcm3e.c	/^static int encode_msm_cnr_ex(rtcm_t *rtcm, int i, const float *cnr, int ncell)$/;"	f	file:
encode_msm_half_amb	rtcm3e.c	/^static int encode_msm_half_amb(rtcm_t *rtcm, int i, const unsigned char *half,$/;"	f	file:
encode_msm_head	rtcm3e.c	/^static int encode_msm_head(int type, rtcm_t *rtcm, int sys, int sync, int *nsat,$/;"	f	file:
encode_msm_info	rtcm3e.c	/^static int encode_msm_info(rtcm_t *rtcm, int i, const unsigned char *info,$/;"	f	file:
encode_msm_int_rrng	rtcm3e.c	/^static int encode_msm_int_rrng(rtcm_t *rtcm, int i, const double *rrng,$/;"	f	file:
encode_msm_lock	rtcm3e.c	/^static int encode_msm_lock(rtcm_t *rtcm, int i, const double *lock, int ncell)$/;"	f	file:
encode_msm_lock_ex	rtcm3e.c	/^static int encode_msm_lock_ex(rtcm_t *rtcm, int i, const double *lock,$/;"	f	file:
encode_msm_mod_rrng	rtcm3e.c	/^static int encode_msm_mod_rrng(rtcm_t *rtcm, int i, const double *rrng,$/;"	f	file:
encode_msm_phrng	rtcm3e.c	/^static int encode_msm_phrng(rtcm_t *rtcm, int i, const double *phrng, int ncell)$/;"	f	file:
encode_msm_phrng_ex	rtcm3e.c	/^static int encode_msm_phrng_ex(rtcm_t *rtcm, int i, const double *phrng,$/;"	f	file:
encode_msm_psrng	rtcm3e.c	/^static int encode_msm_psrng(rtcm_t *rtcm, int i, const double *psrng, int ncell)$/;"	f	file:
encode_msm_psrng_ex	rtcm3e.c	/^static int encode_msm_psrng_ex(rtcm_t *rtcm, int i, const double *psrng,$/;"	f	file:
encode_msm_rate	rtcm3e.c	/^static int encode_msm_rate(rtcm_t *rtcm, int i, const double *rate, int ncell)$/;"	f	file:
encode_msm_rrate	rtcm3e.c	/^static int encode_msm_rrate(rtcm_t *rtcm, int i, const double *rrate, int nsat)$/;"	f	file:
encode_rtcm3	rtcm3e.c	/^extern int encode_rtcm3(rtcm_t *rtcm, int type, int sync)$/;"	f
encode_ssr1	rtcm3e.c	/^static int encode_ssr1(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr2	rtcm3e.c	/^static int encode_ssr2(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr3	rtcm3e.c	/^static int encode_ssr3(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr4	rtcm3e.c	/^static int encode_ssr4(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr5	rtcm3e.c	/^static int encode_ssr5(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr6	rtcm3e.c	/^static int encode_ssr6(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr_head	rtcm3e.c	/^static int encode_ssr_head(int type, rtcm_t *rtcm, int sys, int nsat, int sync,$/;"	f	file:
encode_type1001	rtcm3e.c	/^static int encode_type1001(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1002	rtcm3e.c	/^static int encode_type1002(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1003	rtcm3e.c	/^static int encode_type1003(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1004	rtcm3e.c	/^static int encode_type1004(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1005	rtcm3e.c	/^static int encode_type1005(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1006	rtcm3e.c	/^static int encode_type1006(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1007	rtcm3e.c	/^static int encode_type1007(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1008	rtcm3e.c	/^static int encode_type1008(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1009	rtcm3e.c	/^static int encode_type1009(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1010	rtcm3e.c	/^static int encode_type1010(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1011	rtcm3e.c	/^static int encode_type1011(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1012	rtcm3e.c	/^static int encode_type1012(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1019	rtcm3e.c	/^static int encode_type1019(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1020	rtcm3e.c	/^static int encode_type1020(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1033	rtcm3e.c	/^static int encode_type1033(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1042	rtcm3e.c	/^static int encode_type1042(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1044	rtcm3e.c	/^static int encode_type1044(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1045	rtcm3e.c	/^static int encode_type1045(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1046	rtcm3e.c	/^static int encode_type1046(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type63	rtcm3e.c	/^static int encode_type63(rtcm_t *rtcm, int sync)$/;"	f	file:
end	rtklib.h	/^    int start,end;      \/* start\/end index *\/$/;"	m	struct:__anon46
endfile	rcv/javad.c	/^static int endfile(raw_t *raw)$/;"	f	file:
enu2ecef	rtkcmn.c	/^extern void enu2ecef(const double *pos, const double *e, double *r)$/;"	f
enum2str	options.c	/^static int enum2str(char *s, const char *comment, int val)$/;"	f	file:
eop	rtklib.h	/^    char eop    [MAXSTRPATH]; \/* eop data file *\/$/;"	m	struct:__anon57
eph	rtklib.h	/^    eph_t *eph;         \/* GPS\/QZS\/GAL ephemeris *\/$/;"	m	struct:__anon43
eph2clk	ephemeris.c	/^extern double eph2clk(gtime_t time, const eph_t *eph)$/;"	f
eph2pos	ephemeris.c	/^extern void eph2pos(gtime_t time, const eph_t *eph, double *rs, double *dts,$/;"	f
eph_t	rtklib.h	/^} eph_t;$/;"	t	typeref:struct:__anon16
ephclk	ephemeris.c	/^static int ephclk(gtime_t time, gtime_t teph, int sat, const nav_t *nav,$/;"	f	file:
ephpos	ephemeris.c	/^static int ephpos(gtime_t time, gtime_t teph, int sat, const nav_t *nav,$/;"	f	file:
ephsat	rtklib.h	/^    int    ephsat;      \/* ephemeris satellite number *\/$/;"	m	struct:__anon50
ephsat	rtklib.h	/^    int ephsat;         \/* sat number of update ephemeris (0:no satellite) *\/$/;"	m	struct:__anon62
ephsat	rtklib.h	/^    int ephsat;         \/* update satellite of ephemeris *\/$/;"	m	struct:__anon49
ephsat	rtklib.h	/^    int ephsat[32];     \/* satellites of output ephemeris *\/$/;"	m	struct:__anon64
epoch	rtklib.h	/^    gtime_t epoch;      \/* element set epoch (UTC) *\/$/;"	m	struct:__anon21
epoch	rtklib.h	/^    gtime_t epoch[4];   \/* last epoch *\/$/;"	m	struct:__anon60
epoch2time	rtkcmn.c	/^extern gtime_t epoch2time(const double *ep)$/;"	f
eratio	rtklib.h	/^    double eratio[NFREQ]; \/* code\/phase error ratio *\/$/;"	m	struct:__anon55
erp	rtklib.h	/^    erp_t  erp;         \/* earth rotation parameters *\/$/;"	m	struct:__anon43
erp_t	rtklib.h	/^} erp_t;$/;"	t	typeref:struct:__anon12
erpd_t	rtklib.h	/^} erpd_t;$/;"	t	typeref:struct:__anon11
err	rtklib.h	/^    double err[5];      \/* measurement error factor *\/$/;"	m	struct:__anon55
errbuf	rtklib.h	/^    char errbuf[MAXERRMSG]; \/* error message buffer *\/$/;"	m	struct:__anon61
errmsg	rtkpos.c	/^static void errmsg(rtk_t *rtk, const char *format, ...)$/;"	f	file:
error	stream.c	/^    int error;              \/* error code (0:no error,1-10:wget error, *\/$/;"	m	struct:__anon73	file:
error	stream.c	/^    int error;              \/* error state *\/$/;"	m	struct:__anon67	file:
errsock	stream.c	/^static int errsock(void) {return WSAGetLastError();}$/;"	f	file:
errsock	stream.c	/^static int errsock(void) {return errno;}$/;"	f	file:
estpos	pntpos.c	/^static int estpos(const obsd_t *obs, int n, const double *rs, const double *dts,$/;"	f	file:
estvel	pntpos.c	/^static void estvel(const obsd_t *obs, int n, const double *rs, const double *dts,$/;"	f	file:
etype	rtklib.h	/^    int etype;          \/* element set type *\/$/;"	m	struct:__anon21
exec_down	download.c	/^static int exec_down(const path_t *path, char *remot_p, const char *usr,$/;"	f	file:
execcmd	rtkcmn.c	/^extern int execcmd(const char *cmd)$/;"	f
execcmd_to	download.c	/^extern int execcmd_to(const char *cmd)$/;"	f
execses	postpos.c	/^static int execses(gtime_t ts, gtime_t te, double ti, const prcopt_t *popt,$/;"	f	file:
execses_b	postpos.c	/^static int execses_b(gtime_t ts, gtime_t te, double ti, const prcopt_t *popt,$/;"	f	file:
execses_r	postpos.c	/^static int execses_r(gtime_t ts, gtime_t te, double ti, const prcopt_t *popt,$/;"	f	file:
exist_file	download.c	/^static int exist_file(const char *local)$/;"	f	file:
expath	rtkcmn.c	/^extern int expath(const char *path, char *paths[], int nmax)$/;"	f
exsats	rtklib.h	/^    unsigned char exsats[MAXSAT]; \/* excluded satellites (1:excluded,2:included) *\/$/;"	m	struct:__anon55
exsats	rtklib.h	/^    unsigned char exsats[MAXSAT]; \/* excluded satellites *\/$/;"	m	struct:__anon58
exsats_	options.c	/^static char exsats_[1024];$/;"	v	file:
exsign	rcv/novatel.c	/^static int exsign(unsigned int v, int bits)$/;"	f	file:
exterr	rtklib.h	/^    exterr_t exterr;    \/* extended receiver error model *\/$/;"	m	struct:__anon55
exterr_t	rtklib.h	/^} exterr_t;$/;"	t	typeref:struct:__anon53
eye	rtkcmn.c	/^extern double *eye(int n)$/;"	f
f0	rtklib.h	/^    double f0,f1,f2;    \/* SV clock parameters (af0,af1,af2) *\/$/;"	m	struct:__anon16
f0	rtklib.h	/^    double f0,f1;       \/* SV clock parameters (af0,af1) *\/$/;"	m	struct:__anon15
f1	rtklib.h	/^    double f0,f1,f2;    \/* SV clock parameters (af0,af1,af2) *\/$/;"	m	struct:__anon16
f1	rtklib.h	/^    double f0,f1;       \/* SV clock parameters (af0,af1) *\/$/;"	m	struct:__anon15
f2	rtklib.h	/^    double f0,f1,f2;    \/* SV clock parameters (af0,af1,af2) *\/$/;"	m	struct:__anon16
f_erfc	ppp_ar.c	/^static double f_erfc(double x)$/;"	f	file:
fatalerr	rtkcmn.c	/^static void fatalerr(const char *format, ...)$/;"	f	file:
fcn_glo	rtcm3e.c	/^static int fcn_glo(int sat, rtcm_t *rtcm)$/;"	f	file:
fcorr	rtklib.h	/^    sbsfcorr_t fcorr;   \/* fast correction *\/$/;"	m	struct:__anon32
fget2b	geoid.c	/^static short fget2b(FILE *fp, long off)$/;"	f	file:
fget4f	geoid.c	/^static float fget4f(FILE *fp, long off)$/;"	f	file:
fgetgsi	geoid.c	/^static double fgetgsi(FILE *fp, int nlon, int nlat, int i, int j)$/;"	f	file:
file	stream.c	/^    char file[1024];        \/* download file path *\/$/;"	m	struct:__anon73	file:
file_stat	rtkpos.c	/^static char file_stat[1024]="";  \/* rtk status file original path *\/$/;"	v	file:
file_t	stream.c	/^} file_t;$/;"	t	typeref:struct:__anon68	file:
file_trace	rtkcmn.c	/^static char file_trace[1024];   \/* trace file *\/$/;"	v	file:
files	rtklib.h	/^    char files[3][MAXSTRPATH]; \/* download paths {rov,base,corr} *\/$/;"	m	struct:__anon66
filopt_	options.c	/^static filopt_t filopt_;$/;"	v	file:
filopt_t	rtklib.h	/^} filopt_t;$/;"	t	typeref:struct:__anon57
filter	rtkcmn.c	/^extern int filter(double *x, double *P, const double *H, const double *v,$/;"	f
filter_	rtkcmn.c	/^static int filter_(const double *x, const double *P, const double *H,$/;"	f	file:
fit	rtklib.h	/^    double fit;         \/* fit interval (h) *\/$/;"	m	struct:__anon16
fix	rtklib.h	/^    unsigned char fix [NFREQ]; \/* ambiguity fix flag (1:fix,2:float,3:hold) *\/$/;"	m	struct:__anon59
fix_amb_ILS	ppp_ar.c	/^static int fix_amb_ILS(rtk_t *rtk, int *sat1, int *sat2, int *NW, int n)$/;"	f	file:
fix_amb_ROUND	ppp_ar.c	/^static int fix_amb_ROUND(rtk_t *rtk, int *sat1, int *sat2, const int *NW, int n)$/;"	f	file:
fix_amb_WL	ppp_ar.c	/^static int fix_amb_WL(rtk_t *rtk, const nav_t *nav, int sat1, int sat2, int *NW)$/;"	f	file:
fix_sol	ppp_ar.c	/^static int fix_sol(rtk_t *rtk, const int *sat1, const int *sat2,$/;"	f	file:
fixcnt	rtklib.h	/^    int fixcnt;         \/* fix counter *\/$/;"	m	struct:__anon60
flag	rtklib.h	/^    int flag;           \/* GPS\/QZS: L2 P data flag, CMP: nav type *\/$/;"	m	struct:__anon16
flag	rtklib.h	/^    int flag;           \/* general purpose flag *\/$/;"	m	struct:__anon62
flag	rtklib.h	/^    unsigned char flag; \/* flags: (vsat<<5)+(slip<<3)+fix *\/$/;"	m	struct:__anon47
flags	rtklib.h	/^    char flags[MAXSAT]; \/* fix flags *\/$/;"	m	struct:__anon60
flushobuf	rcv/javad.c	/^static int flushobuf(raw_t *raw)$/;"	f	file:
format	convrnx.c	/^    int    format;              \/* stream format (STRFMT_???) *\/$/;"	m	struct:__anon1	file:
format	rtklib.h	/^    int format;         \/* option format (0:int,1:double,2:string,3:enum) *\/$/;"	m	struct:__anon52
format	rtklib.h	/^    int format[3];      \/* input format {rov,base,corr} *\/$/;"	m	struct:__anon66
formatstrs	rtkcmn.c	/^const char *formatstrs[]={      \/* stream format strings *\/$/;"	v
fp	convrnx.c	/^    FILE   *fp;                 \/* file pointer *\/$/;"	m	struct:__anon1	file:
fp	stream.c	/^    FILE *fp;               \/* file pointer *\/$/;"	m	struct:__anon68	file:
fp_geoid	geoid.c	/^static FILE *fp_geoid=NULL;         \/* geoid file pointer *\/$/;"	v	file:
fp_rtcm	postpos.c	/^static FILE *fp_rtcm=NULL;      \/* rtcm data file pointer *\/$/;"	v	file:
fp_stat	rtkpos.c	/^static FILE *fp_stat=NULL;       \/* rtk status file pointer *\/$/;"	v	file:
fp_tag	stream.c	/^    FILE *fp_tag;           \/* file pointer of tag file *\/$/;"	m	struct:__anon68	file:
fp_tag_tmp	stream.c	/^    FILE *fp_tag_tmp;       \/* temporary file pointer of tag file for swap *\/$/;"	m	struct:__anon68	file:
fp_tmp	stream.c	/^    FILE *fp_tmp;           \/* temporary file pointer for swap *\/$/;"	m	struct:__anon68	file:
fp_trace	rtkcmn.c	/^static FILE *fp_trace=NULL;     \/* file pointer of trace *\/$/;"	v	file:
fpos	stream.c	/^    unsigned int fpos;      \/* current file position *\/$/;"	m	struct:__anon68	file:
free_path	download.c	/^static void free_path(paths_t *paths)$/;"	f	file:
free_raw	rcvraw.c	/^extern void free_raw(raw_t *raw)$/;"	f
free_rnxctr	rinex.c	/^extern void free_rnxctr(rnxctr_t *rnx)$/;"	f
free_rtcm	rtcm.c	/^extern void free_rtcm(rtcm_t *rtcm)$/;"	f
free_strfile	convrnx.c	/^static void free_strfile(strfile_t *str)$/;"	f	file:
freenav	rtkcmn.c	/^extern void freenav(nav_t *nav, int opt)$/;"	f
freeobs	rtkcmn.c	/^extern void freeobs(obs_t *obs)$/;"	f
freeobsnav	postpos.c	/^static void freeobsnav(obs_t *obs, nav_t *nav)$/;"	f	file:
freepreceph	postpos.c	/^static void freepreceph(nav_t *nav, sbs_t *sbs, lex_t *lex)$/;"	f	file:
freesolbuf	solution.c	/^extern void freesolbuf(solbuf_t *solbuf)$/;"	f
freesolstatbuf	solution.c	/^extern void freesolstatbuf(solstatbuf_t *solstatbuf)$/;"	f
freq_sys	rcv/javad.c	/^static double freq_sys(int sys, int freq, int freqn)$/;"	f	file:
freqn	rtklib.h	/^    char freqn[MAXOBS]; \/* frequency number for javad *\/$/;"	m	struct:__anon62
freqtype	rtklib.h	/^    int freqtype;       \/* frequency type *\/$/;"	m	struct:__anon58
frq	rinex.c	/^    int frq[MAXOBSTYPE];                \/* signal frequency (1:L1,2:L2,...) *\/$/;"	m	struct:__anon6	file:
frq	rtklib.h	/^    int frq;            \/* satellite frequency number *\/$/;"	m	struct:__anon17
frq	rtklib.h	/^    unsigned char frq;  \/* frequency (1:L1,2:L2,...) *\/$/;"	m	struct:__anon47
frqcodes	rinex.c	/^static const char frqcodes[]="125678";  \/* frequency codes *\/$/;"	v	file:
fswapmargin	stream.c	/^static int fswapmargin=30;  \/* file swap margin (s) *\/$/;"	v	file:
ftime	rtklib.h	/^    gtime_t ftime[3];   \/* download time {rov,base,corr} *\/$/;"	m	struct:__anon66
ftp_t	stream.c	/^} ftp_t;$/;"	t	typeref:struct:__anon73	file:
ftpthread	stream.c	/^static DWORD WINAPI ftpthread(void *arg)$/;"	f	file:
gamn	rtklib.h	/^    double taun,gamn;   \/* SV clock bias (s)\/relative freq bias *\/$/;"	m	struct:__anon17
gauss	lambda.c	/^static void gauss(int n, double *L, double *Z, int i, int j)$/;"	f	file:
geexe	rtklib.h	/^    char geexe  [MAXSTRPATH]; \/* google earth exec file *\/$/;"	m	struct:__anon57
gen_hex	stream.c	/^static int gen_hex(const char *msg, unsigned char *buff)$/;"	f	file:
gen_lexr	rcv/rcvlex.c	/^extern int gen_lexr(const char *msg, unsigned char *buff)$/;"	f
gen_lexr	rtkcmn.c	/^extern int gen_lexr(const char *msg, unsigned char *buff) {return 0;}$/;"	f
gen_msm_index	rtcm3e.c	/^static void gen_msm_index(rtcm_t *rtcm, int sys, int *nsat, int *nsig,$/;"	f	file:
gen_msm_sat	rtcm3e.c	/^static void gen_msm_sat(rtcm_t *rtcm, int sys, int nsat,$/;"	f	file:
gen_msm_sig	rtcm3e.c	/^static void gen_msm_sig(rtcm_t *rtcm, int sys, int nsat, int nsig, int ncell,$/;"	f	file:
gen_nvs	rcv/nvs.c	/^extern int gen_nvs(const char *msg, unsigned char *buff)$/;"	f
gen_obs_glo	rtcm3e.c	/^static void gen_obs_glo(rtcm_t *rtcm, const obsd_t *data, int fcn, int *code1,$/;"	f	file:
gen_obs_gps	rtcm3e.c	/^static void gen_obs_gps(rtcm_t *rtcm, const obsd_t *data, int *code1, int *pr1,$/;"	f	file:
gen_path	download.c	/^static int gen_path(gtime_t time, gtime_t time_p, int seqnos, int seqnoe,$/;"	f	file:
gen_paths	download.c	/^static int gen_paths(gtime_t time, gtime_t time_p, int seqnos, int seqnoe,$/;"	f	file:
gen_rtcm2	rtcm.c	/^extern int gen_rtcm2(rtcm_t *rtcm, int type, int sync)$/;"	f
gen_rtcm3	rtcm.c	/^extern int gen_rtcm3(rtcm_t *rtcm, int type, int sync)$/;"	f
gen_stq	rcv/skytraq.c	/^extern int gen_stq(const char *msg, unsigned char *buff)$/;"	f
gen_strfile	convrnx.c	/^static strfile_t *gen_strfile(int format, const char *opt, gtime_t time)$/;"	f	file:
gen_ubx	rcv/ublox.c	/^extern int gen_ubx(const char *msg, unsigned char *buff)$/;"	f
genmsg	rcv/rcvlex.c	/^static int genmsg(unsigned char *buff, unsigned short id, unsigned char *data,$/;"	f	file:
genpath	download.c	/^static void genpath(const char *file, const char *name, gtime_t time, int seqno,$/;"	f	file:
gentcp	stream.c	/^static int gentcp(tcp_t *tcp, int type, char *msg)$/;"	f	file:
geodist	rtkcmn.c	/^extern double geodist(const double *rs, const double *rr, double *e)$/;"	f
geoid	geoid.c	/^static const float geoid[361][181]; \/* embedded geoid heights (m) (lon x lat) *\/$/;"	v	file:
geoid	geoid.c	/^static const float geoid[361][181]={{$/;"	v	file:
geoid	rtklib.h	/^    char geoid  [MAXSTRPATH]; \/* external geoid data file *\/$/;"	m	struct:__anon57
geoid	rtklib.h	/^    int geoid;          \/* geoid model (0:EGM96,1:JGD2000) *\/$/;"	m	struct:__anon56
geoidh	geoid.c	/^extern double geoidh(const double *pos)$/;"	f
geoidh_egm08	geoid.c	/^static double geoidh_egm08(const double *pos, int model)$/;"	f	file:
geoidh_egm96	geoid.c	/^static double geoidh_egm96(const double *pos)$/;"	f	file:
geoidh_emb	geoid.c	/^static double geoidh_emb(const double *pos)$/;"	f	file:
geoidh_gsi	geoid.c	/^static double geoidh_gsi(const double *pos)$/;"	f	file:
geph	rtklib.h	/^    geph_t *geph;       \/* GLONASS ephemeris *\/$/;"	m	struct:__anon43
geph2clk	ephemeris.c	/^extern double geph2clk(gtime_t time, const geph_t *geph)$/;"	f
geph2pos	ephemeris.c	/^extern void geph2pos(gtime_t time, const geph_t *geph, double *rs, double *dts,$/;"	f
geph_t	rtklib.h	/^} geph_t;$/;"	t	typeref:struct:__anon17
getSigFreq	rcv/septentrio.c	/^static int getSigFreq(int _signType){$/;"	f	file:
getSignalCode	rcv/septentrio.c	/^static int getSignalCode(int signType){$/;"	f	file:
get_list	download.c	/^static int get_list(const path_t *path, const char *usr, const char *pwd,$/;"	f	file:
get_week	rcv/rt17.c	/^static int get_week(raw_t *raw, double receive_time)$/;"	f	file:
getbitg	rcvraw.c	/^static double getbitg(const unsigned char *buff, int pos, int len)$/;"	f	file:
getbitg	rtcm3.c	/^static double getbitg(const unsigned char *buff, int pos, int len)$/;"	f	file:
getbits	rtkcmn.c	/^extern int getbits(const unsigned char *buff, int pos, int len)$/;"	f
getbits2	rcvraw.c	/^static int getbits2(const unsigned char *buff, int p1, int l1, int p2, int l2)$/;"	f	file:
getbits3	rcvraw.c	/^static int getbits3(const unsigned char *buff, int p1, int l1, int p2, int l2,$/;"	f	file:
getbits_33	qzslex.c	/^static double getbits_33(const unsigned char *buff, int pos)$/;"	f	file:
getbits_38	rtcm3.c	/^static double getbits_38(const unsigned char *buff, int pos)$/;"	f	file:
getbitu	rtkcmn.c	/^extern unsigned int getbitu(const unsigned char *buff, int pos, int len)$/;"	f
getbitu2	rcvraw.c	/^static unsigned int getbitu2(const unsigned char *buff, int p1, int l1, int p2,$/;"	f	file:
getbitu3	rcvraw.c	/^static unsigned int getbitu3(const unsigned char *buff, int p1, int l1, int p2,$/;"	f	file:
getbnxi	rcv/binex.c	/^static int getbnxi(unsigned char *p, unsigned int *val)$/;"	f	file:
getcodepri	rtkcmn.c	/^extern int getcodepri(int sys, unsigned char code, const char *opt)$/;"	f
geterp	rtkcmn.c	/^extern int geterp(const erp_t *erp, gtime_t time, double *erpv)$/;"	f
getfield	sbas.c	/^static char *getfield(char *p, int pos)$/;"	f	file:
getindex	ionex.c	/^static int getindex(double value, const double *range)$/;"	f	file:
getmet	sbas.c	/^static void getmet(double lat, double *met)$/;"	f	file:
getsol	solution.c	/^extern sol_t *getsol(solbuf_t *solbuf, int index)$/;"	f
getstapos	postpos.c	/^static int getstapos(const char *file, char *name, double *r)$/;"	f	file:
getsysopts	options.c	/^extern void getsysopts(prcopt_t *popt, solopt_t *sopt, filopt_t *fopt)$/;"	f
gettgd	pntpos.c	/^static double gettgd(int sat, const nav_t *nav)$/;"	f	file:
gettgd	ppp.c	/^static double gettgd(int sat, const nav_t *nav)$/;"	f	file:
gf	rtklib.h	/^    double  gf;         \/* geometry-free phase L1-L2 (m) *\/$/;"	m	struct:__anon59
gf2	rtklib.h	/^    double  gf2;        \/* geometry-free phase L1-L5 (m) *\/$/;"	m	struct:__anon59
gfmeas	ppp.c	/^static double gfmeas(const obsd_t *obs, const nav_t *nav)$/;"	f	file:
gfobs_L1L2	rtkpos.c	/^static double gfobs_L1L2(const obsd_t *obs, int i, int j, const double *lam)$/;"	f	file:
gfobs_L1L5	rtkpos.c	/^static double gfobs_L1L5(const obsd_t *obs, int i, int j, const double *lam)$/;"	f	file:
give	rtklib.h	/^    short give;         \/* GIVI+1 *\/$/;"	m	struct:__anon34
glo_cpbias	rtklib.h	/^    double glo_cpbias[4];    \/* glonass code-phase bias {1C,1P,2C,2P} (m) *\/$/;"	m	struct:__anon43
glo_fcn	rtklib.h	/^    char glo_fcn[MAXPRNGLO+1]; \/* glonass frequency channel number + 8 *\/$/;"	m	struct:__anon43
gloicb	rtklib.h	/^    double gloicb [NFREQ]; \/* glonass interchannel bias (m\/fn) *\/$/;"	m	struct:__anon53
gloicbcorr	rtkpos.c	/^static double gloicbcorr(int sat1, int sat2, const prcopt_t *opt, double lam1,$/;"	f	file:
glomodear	rtklib.h	/^    int glomodear;      \/* GLONASS AR mode (0:off,1:on,2:auto cal,3:ext cal) *\/$/;"	m	struct:__anon55
glorbit	ephemeris.c	/^static void glorbit(double t, double *x, const double *acc)$/;"	f	file:
gpsglob	rtklib.h	/^    double gpsglob[NFREQ]; \/* gps-glonass h\/w bias (m) *\/$/;"	m	struct:__anon53
gpst0	rtkcmn.c	/^const static double gpst0[]={1980,1, 6,0,0,0}; \/* gps time reference *\/$/;"	v	file:
gpst2bdt	rtkcmn.c	/^extern gtime_t gpst2bdt(gtime_t t)$/;"	f
gpst2time	rtkcmn.c	/^extern gtime_t gpst2time(int week, double sec)$/;"	f
gpst2utc	rtkcmn.c	/^extern gtime_t gpst2utc(gtime_t t)$/;"	f
gst0	rtkcmn.c	/^const static double gst0 []={1999,8,22,0,0,0}; \/* galileo system time reference *\/$/;"	v	file:
gst2time	rtkcmn.c	/^extern gtime_t gst2time(int week, double sec)$/;"	f
gtime_t	rtklib.h	/^} gtime_t;$/;"	t	typeref:struct:__anon8
halfc	rtklib.h	/^    unsigned char halfc[MAXSAT][NFREQ+NEXOBS]; \/* half-cycle add flag *\/$/;"	m	struct:__anon62
health	rtklib.h	/^    unsigned char health; \/* signal health (L1,L2,L1C,L5,LEX) *\/$/;"	m	struct:__anon41
height	rtklib.h	/^    int height;         \/* height (0:ellipsoidal,1:geodetic) *\/$/;"	m	struct:__anon56
hgt	rtklib.h	/^    double hgt;         \/* antenna height (m) *\/$/;"	m	struct:__anon44
hgts	rtklib.h	/^    double hgts[3];     \/* heights start\/interval (km) *\/$/;"	m	struct:__anon23
holdamb	rtkpos.c	/^static void holdamb(rtk_t *rtk, const double *xa)$/;"	f	file:
hrclk	rtklib.h	/^    double hrclk;       \/* high-rate clock corection (m) *\/$/;"	m	struct:__anon38
i0	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon15
i0	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon16
icpc	rtklib.h	/^    double icpp[MAXSAT],off[MAXSAT],icpc; \/* carrier params for ss2 *\/$/;"	m	struct:__anon62
icpp	rtklib.h	/^    double icpp[MAXSAT],off[MAXSAT],icpc; \/* carrier params for ss2 *\/$/;"	m	struct:__anon62
idot	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon16
iers_mean_pole	ppp.c	/^static void iers_mean_pole(gtime_t tut, double *xp_bar, double *yp_bar)$/;"	f	file:
ifmeas	ppp.c	/^static int ifmeas(const obsd_t *obs, const nav_t *nav, const double *azel,$/;"	f	file:
igp	rtklib.h	/^    sbsigp_t igp[MAXNIGP]; \/* ionospheric correction *\/$/;"	m	struct:__anon36
igpband1	sbas.c	/^const sbsigpband_t igpband1[9][8]={ \/* band 0-8 *\/$/;"	v
igpband2	sbas.c	/^const sbsigpband_t igpband2[2][5]={ \/* band 9-10 *\/$/;"	v
ilex	postpos.c	/^static int ilex  =0;            \/* current lex message index *\/$/;"	v	file:
imat	rtkcmn.c	/^extern int *imat(int n, int m)$/;"	f
inb	rtklib.h	/^    unsigned int inb,inr;   \/* input bytes\/rate *\/$/;"	m	struct:__anon63
inbt	rtklib.h	/^    unsigned int inbt,outbt; \/* input\/output bytes at tick *\/$/;"	m	struct:__anon63
inc	rtklib.h	/^    double inc;         \/* orbit inclination (deg) *\/$/;"	m	struct:__anon21
index	rtklib.h	/^    int index;          \/* clock index for multiple files *\/$/;"	m	struct:__anon19
index	rtklib.h	/^    int index;          \/* ephemeris index for multiple files *\/$/;"	m	struct:__anon18
index	rtklib.h	/^    int index[MAXSAT];  \/* search index *\/$/;"	m	struct:__anon25
init_raw	rcvraw.c	/^extern int init_raw(raw_t *raw)$/;"	f
init_rnxctr	rinex.c	/^extern int init_rnxctr(rnxctr_t *rnx)$/;"	f
init_rtcm	rtcm.c	/^extern int init_rtcm(rtcm_t *rtcm)$/;"	f
init_sta	rinex.c	/^static void init_sta(sta_t *sta)$/;"	f	file:
initlock	rtklib.h	460;"	d
initlock	rtklib.h	467;"	d
initsolbuf	solution.c	/^extern void initsolbuf(solbuf_t *solbuf, int cyclic, int nmax)$/;"	f
initx	ppp.c	/^static void initx(rtk_t *rtk, double xi, double var, int i)$/;"	f	file:
initx	rtkpos.c	/^static void initx(rtk_t *rtk, double xi, double var, int i)$/;"	f	file:
input_bnx	rcv/binex.c	/^extern int input_bnx(raw_t *raw, unsigned char data)$/;"	f
input_bnxf	rcv/binex.c	/^extern int input_bnxf(raw_t *raw, FILE *fp)$/;"	f
input_cres	rcv/crescent.c	/^extern int input_cres(raw_t *raw, unsigned char data)$/;"	f
input_cresf	rcv/crescent.c	/^extern int input_cresf(raw_t *raw, FILE *fp)$/;"	f
input_gw10	rcv/gw10.c	/^extern int input_gw10(raw_t *raw, unsigned char data)$/;"	f
input_gw10f	rcv/gw10.c	/^extern int input_gw10f(raw_t *raw, FILE *fp)$/;"	f
input_javad	rcv/javad.c	/^extern int input_javad(raw_t *raw, unsigned char data)$/;"	f
input_javadf	rcv/javad.c	/^extern int input_javadf(raw_t *raw, FILE *fp)$/;"	f
input_lexr	rcv/rcvlex.c	/^extern int input_lexr(raw_t *raw, unsigned char data)$/;"	f
input_lexr	rtkcmn.c	/^extern int input_lexr(raw_t *raw, unsigned char data) {return 0;}$/;"	f
input_lexrf	rcv/rcvlex.c	/^extern int input_lexrf(raw_t *raw, FILE *fp)$/;"	f
input_lexrf	rtkcmn.c	/^extern int input_lexrf(raw_t *raw, FILE *fp) {return 0;}$/;"	f
input_nvs	rcv/nvs.c	/^extern int input_nvs(raw_t *raw, unsigned char data)$/;"	f
input_nvsf	rcv/nvs.c	/^extern int input_nvsf(raw_t *raw, FILE *fp)$/;"	f
input_oem3	rcv/novatel.c	/^extern int input_oem3(raw_t *raw, unsigned char data)$/;"	f
input_oem3f	rcv/novatel.c	/^extern int input_oem3f(raw_t *raw, FILE *fp)$/;"	f
input_oem4	rcv/novatel.c	/^extern int input_oem4(raw_t *raw, unsigned char data)$/;"	f
input_oem4f	rcv/novatel.c	/^extern int input_oem4f(raw_t *raw, FILE *fp)$/;"	f
input_raw	rcvraw.c	/^extern int input_raw(raw_t *raw, int format, unsigned char data)$/;"	f
input_rawf	rcvraw.c	/^extern int input_rawf(raw_t *raw, int format, FILE *fp)$/;"	f
input_rnxctr	rinex.c	/^extern int input_rnxctr(rnxctr_t *rnx, FILE *fp)$/;"	f
input_rt17	rcv/rt17.c	/^extern int input_rt17(raw_t *raw, unsigned char data)$/;"	f
input_rt17f	rcv/rt17.c	/^extern int input_rt17f(raw_t *raw, FILE *fp)$/;"	f
input_rtcm2	rtcm.c	/^extern int input_rtcm2(rtcm_t *rtcm, unsigned char data)$/;"	f
input_rtcm2f	rtcm.c	/^extern int input_rtcm2f(rtcm_t *rtcm, FILE *fp)$/;"	f
input_rtcm3	rtcm.c	/^extern int input_rtcm3(rtcm_t *rtcm, unsigned char data)$/;"	f
input_rtcm3f	rtcm.c	/^extern int input_rtcm3f(rtcm_t *rtcm, FILE *fp)$/;"	f
input_sbf	rcv/septentrio.c	/^extern int input_sbf(raw_t *raw, unsigned char data)$/;"	f
input_sbff	rcv/septentrio.c	/^extern int input_sbff(raw_t *raw, FILE *fp)$/;"	f
input_ss2	rcv/ss2.c	/^extern int input_ss2(raw_t *raw, unsigned char data)$/;"	f
input_ss2f	rcv/ss2.c	/^extern int input_ss2f(raw_t *raw, FILE *fp)$/;"	f
input_ssr	postpos.c	/^static void input_ssr(gtime_t time, rtcm_t *rtcm, nav_t *nav, FILE *fp)$/;"	f	file:
input_stq	rcv/skytraq.c	/^extern int input_stq(raw_t *raw, unsigned char data)$/;"	f
input_stqf	rcv/skytraq.c	/^extern int input_stqf(raw_t *raw, FILE *fp)$/;"	f
input_strfile	convrnx.c	/^static int input_strfile(strfile_t *str)$/;"	f	file:
input_ubx	rcv/ublox.c	/^extern int input_ubx(raw_t *raw, unsigned char data)$/;"	f
input_ubxf	rcv/ublox.c	/^extern int input_ubxf(raw_t *raw, FILE *fp)$/;"	f
inputobs	postpos.c	/^static int inputobs(obsd_t *obs, int solq, const prcopt_t *popt)$/;"	f	file:
inputsol	solution.c	/^extern int inputsol(unsigned char data, gtime_t ts, gtime_t te, double tint,$/;"	f
inr	rtklib.h	/^    unsigned int inb,inr;   \/* input bytes\/rate *\/$/;"	m	struct:__anon63
interpb	geoid.c	/^static double interpb(const double *y, double a, double b)$/;"	f	file:
interpc	rtkcmn.c	/^static double interpc(const double coef[], double lat)$/;"	f	file:
interppol	preceph.c	/^static double interppol(const double *x, double *y, int n)$/;"	f	file:
interptec	ionex.c	/^static int interptec(const tec_t *tec, int k, const double *posp, double *value,$/;"	f	file:
interpvar	rtkcmn.c	/^static double interpvar(double ang, const double *var)$/;"	f	file:
intpref	rtklib.h	/^    int intpref;        \/* interpolate reference obs (for post mission) *\/$/;"	m	struct:__anon55
intpres	rtkpos.c	/^static double intpres(gtime_t time, const obsd_t *obs, int n, const nav_t *nav,$/;"	f	file:
iobsr	postpos.c	/^static int iobsr =0;            \/* current reference observation data index *\/$/;"	v	file:
iobsu	postpos.c	/^static int iobsu =0;            \/* current rover observation data index *\/$/;"	v	file:
iod	rtcm3.c	/^    unsigned char iod;              \/* issue of data station *\/$/;"	m	struct:__anon7	file:
iod	rtklib.h	/^    int iod;            \/* issue of data (IOD) *\/$/;"	m	struct:__anon37
iod	rtklib.h	/^    int iod;            \/* issue of data *\/$/;"	m	struct:__anon62
iod	rtklib.h	/^    int iod[5];         \/* iod ssr {eph,clk,hrclk,ura,bias} *\/$/;"	m	struct:__anon38
iodc	rtklib.h	/^    int iode,iodc;      \/* IODE,IODC *\/$/;"	m	struct:__anon16
iodcrc	rtklib.h	/^    int iodcrc;         \/* issue of data crc for beidou\/sbas *\/$/;"	m	struct:__anon38
iode	rtklib.h	/^    int iode,iodc;      \/* IODE,IODC *\/$/;"	m	struct:__anon16
iode	rtklib.h	/^    int iode;           \/* IODE (0-6 bit of tb field) *\/$/;"	m	struct:__anon17
iode	rtklib.h	/^    int iode;           \/* IODE (issue of date ephemeris) *\/$/;"	m	struct:__anon31
iode	rtklib.h	/^    int iode;           \/* issue of data *\/$/;"	m	struct:__anon38
iodf	rtklib.h	/^    int iodf;           \/* IODF (issue of date fast corr) *\/$/;"	m	struct:__anon30
iodi	rtklib.h	/^    int iodi;           \/* IODI (issue of date ionos corr) *\/$/;"	m	struct:__anon36
iodp	rtklib.h	/^    int iodp;           \/* IODP (issue of date mask) *\/$/;"	m	struct:__anon33
ion_cmp	rtklib.h	/^    double ion_cmp[8];  \/* BeiDou iono model parameters {a0,a1,a2,a3,b0,b1,b2,b3} *\/$/;"	m	struct:__anon43
ion_gal	rtklib.h	/^    double ion_gal[4];  \/* Galileo iono model parameters {ai0,ai1,ai2,0} *\/$/;"	m	struct:__anon43
ion_gps	rtklib.h	/^    double ion_gps[8];  \/* GPS iono model parameters {a0,a1,a2,a3,b0,b1,b2,b3} *\/$/;"	m	struct:__anon43
ion_qzs	rtklib.h	/^    double ion_qzs[8];  \/* QZSS iono model parameters {a0,a1,a2,a3,b0,b1,b2,b3} *\/$/;"	m	struct:__anon43
iondelay	ionex.c	/^static int iondelay(gtime_t time, const tec_t *tec, const double *pos,$/;"	f	file:
ionmapf	rtkcmn.c	/^extern double ionmapf(const double *pos, const double *azel)$/;"	f
ionmodel	rtkcmn.c	/^extern double ionmodel(gtime_t t, const double *ion, const double *pos,$/;"	f
iono	rtklib.h	/^    char iono   [MAXSTRPATH]; \/* ionosphere data file *\/$/;"	m	struct:__anon57
iono	rtklib.h	/^    float iono;         \/* L1 ionosphere delay (m) *\/$/;"	m	struct:__anon24
ionocorr	pntpos.c	/^extern int ionocorr(gtime_t time, const nav_t *nav, int sat, const double *pos,$/;"	f
ionoopt	rtklib.h	/^    int ionoopt;        \/* ionosphere option (IONOOPT_???) *\/$/;"	m	struct:__anon55
ionppp	rtkcmn.c	/^extern double ionppp(const double *pos, const double *azel, double re,$/;"	f
iontec	ionex.c	/^extern int iontec(gtime_t time, const nav_t *nav, const double *pos,$/;"	f
is_depend	ppp_ar.c	/^static int is_depend(int sat1, int sat2, int *flgs, int *max_flg)$/;"	f	file:
is_meas	rcv/javad.c	/^static int is_meas(char sig)$/;"	f	file:
is_navmsg	streamsvr.c	/^static int is_navmsg(int msg)$/;"	f	file:
is_obsmsg	streamsvr.c	/^static int is_obsmsg(int msg)$/;"	f	file:
is_stamsg	streamsvr.c	/^static int is_stamsg(int msg)$/;"	f	file:
is_tint	streamsvr.c	/^static int is_tint(gtime_t time, double tint)$/;"	f	file:
isbs	postpos.c	/^static int isbs  =0;            \/* current sbas message index *\/$/;"	v	file:
isc	rtklib.h	/^    double isc[8];      \/* ISC *\/$/;"	m	struct:__anon41
isolb	postpos.c	/^static int isolb=0;             \/* current backward solutions index *\/$/;"	v	file:
isolf	postpos.c	/^static int isolf=0;             \/* current forward solutions index *\/$/;"	v	file:
itrf	rtklib.h	/^    int itrf;           \/* ITRF realization year *\/$/;"	m	struct:__anon44
itype	rtklib.h	/^    int itype,otype;    \/* input and output stream type *\/$/;"	m	struct:__anon64
jerk	rtklib.h	/^    double jerk[3];     \/* satellite jerk (m\/s3) *\/$/;"	m	struct:__anon41
jgd2tokyo	datum.c	/^extern int jgd2tokyo(double *pos)$/;"	f
lam	rtklib.h	/^    double lam[MAXSAT][NFREQ]; \/* carrier wave lengths (m) *\/$/;"	m	struct:__anon43
lam_LC	ppp_ar.c	/^static double lam_LC(int i, int j, int k)$/;"	f	file:
lam_carr	rtkcmn.c	/^const double lam_carr[]={       \/* carrier wave length (m) *\/$/;"	v
lambda	lambda.c	/^extern int lambda(int n, int m, const double *a, const double *Q, double *F,$/;"	f
lat	rtklib.h	/^    short lat,lon;      \/* latitude\/longitude (deg) *\/$/;"	m	struct:__anon34
lats	rtklib.h	/^    double lats[3];     \/* latitude start\/interval (deg) *\/$/;"	m	struct:__anon23
lcorr	rtklib.h	/^    sbslcorr_t lcorr;   \/* long term correction *\/$/;"	m	struct:__anon32
leaps	rtkcmn.c	/^static double leaps[MAXLEAPS+1][7]={ \/* leap seconds (y,m,d,h,m,s,utc-gpst) *\/$/;"	v	file:
leaps	rtklib.h	/^    int leaps;          \/* leap seconds (s) *\/$/;"	m	struct:__anon43
len	rtklib.h	/^    int len;            \/* message length (bytes) *\/$/;"	m	struct:__anon49
len	rtklib.h	/^    int len;            \/* message length (bytes) *\/$/;"	m	struct:__anon62
level_trace	rtkcmn.c	/^static int level_trace=0;       \/* level of trace *\/$/;"	v	file:
lex2rtcm	qzslex.c	/^static int lex2rtcm(const unsigned char *msg, int i, unsigned char *buff)$/;"	f	file:
lex_t	rtklib.h	/^} lex_t;$/;"	t	typeref:struct:__anon40
lexconvbin	qzslex.c	/^extern int lexconvbin(int type, int format, const char *infile,$/;"	f
lexeph	rtklib.h	/^    lexeph_t lexeph[MAXSAT]; \/* LEX ephemeris *\/$/;"	m	struct:__anon43
lexeph2pos	qzslex.c	/^extern int lexeph2pos(gtime_t time, int sat, const nav_t *nav, double *rs,$/;"	f
lexeph_t	rtklib.h	/^} lexeph_t;$/;"	t	typeref:struct:__anon41
lexion	rtklib.h	/^    lexion_t lexion;    \/* LEX ionosphere correction *\/$/;"	m	struct:__anon43
lexion_t	rtklib.h	/^} lexion_t;$/;"	t	typeref:struct:__anon42
lexioncorr	qzslex.c	/^extern int lexioncorr(gtime_t time, const nav_t *nav, const double *pos,$/;"	f
lexmsg	rtklib.h	/^    lexmsg_t lexmsg;    \/* LEX message *\/$/;"	m	struct:__anon62
lexmsg_t	rtklib.h	/^} lexmsg_t;$/;"	t	typeref:struct:__anon39
lexoutmsg	qzslex.c	/^extern void lexoutmsg(FILE *fp, const lexmsg_t *msg)$/;"	f
lexreadmsg	qzslex.c	/^extern int lexreadmsg(const char *file, int sel, lex_t *lex)$/;"	f
lexs	postpos.c	/^static lex_t lexs={0};          \/* lex messages *\/$/;"	v	file:
lexupdatecorr	qzslex.c	/^extern int lexupdatecorr(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f
lltime	rtklib.h	/^    gtime_t lltime[MAXSAT][NFREQ+NEXOBS]; \/* last lock time *\/$/;"	m	struct:__anon49
loaddatump	datum.c	/^extern int loaddatump(const char *file)$/;"	f
loadopts	options.c	/^extern int loadopts(const char *file, opt_t *opts)$/;"	f
local	download.c	/^    char *local;                    \/* local path *\/$/;"	m	struct:__anon3	file:
local	stream.c	/^    char local[1024];       \/* local file path *\/$/;"	m	struct:__anon73	file:
localdir	stream.c	/^static char localdir[1024]=""; \/* local directory for ftp\/http *\/$/;"	v	file:
lock	rtklib.h	/^    lock_t lock;        \/* lock flag *\/$/;"	m	struct:__anon63
lock	rtklib.h	/^    lock_t lock;        \/* lock flag *\/$/;"	m	struct:__anon65
lock	rtklib.h	/^    lock_t lock;        \/* lock flag *\/$/;"	m	struct:__anon66
lock	rtklib.h	/^    unsigned int lock [NFREQ]; \/* lock counter of phase *\/$/;"	m	struct:__anon59
lock	rtklib.h	/^    unsigned short lock;  \/* lock counter *\/$/;"	m	struct:__anon47
lock	rtklib.h	/^    unsigned short lock[MAXSAT][NFREQ+NEXOBS]; \/* lock time *\/$/;"	m	struct:__anon49
lock	rtklib.h	461;"	d
lock	rtklib.h	468;"	d
lock	stream.c	/^    lock_t lock;            \/* lock flag *\/$/;"	m	struct:__anon67	file:
lock	stream.c	/^    lock_t lock;            \/* lock flag *\/$/;"	m	struct:__anon68	file:
lock_t	rtklib.h	459;"	d
lock_t	rtklib.h	466;"	d
lock_trace	rtkcmn.c	/^static lock_t lock_trace;       \/* lock for trace *\/$/;"	v	file:
lockt	rtklib.h	/^    double lockt[MAXSAT][NFREQ+NEXOBS]; \/* lock time (s) *\/$/;"	m	struct:__anon62
locktime	rtcm3e.c	/^static int locktime(gtime_t time, gtime_t *lltime, unsigned char LLI)$/;"	f	file:
locktime_d	rtcm3e.c	/^static double locktime_d(gtime_t time, gtime_t *lltime, unsigned char LLI)$/;"	f	file:
lod	rtklib.h	/^    double lod;         \/* length of day (s\/day) *\/$/;"	m	struct:__anon11
lon	rtklib.h	/^    short lat,lon;      \/* latitude\/longitude (deg) *\/$/;"	m	struct:__anon34
lons	rtklib.h	/^    double lons[3];     \/* longitude start\/interval (deg) *\/$/;"	m	struct:__anon23
loss	rtklib.h	/^    unsigned short loss[MAXSAT][NFREQ+NEXOBS]; \/* loss of lock count *\/$/;"	m	struct:__anon49
lossoflock	rtcm3.c	/^static int lossoflock(rtcm_t *rtcm, int sat, int freq, int lock)$/;"	f	file:
lsq	rtkcmn.c	/^extern int lsq(const double *A, const double *y, int n, int m, double *x,$/;"	f
lubksb	rtkcmn.c	/^static void lubksb(const double *A, int n, const int *indx, double *b)$/;"	f	file:
ludcmp	rtkcmn.c	/^static int ludcmp(double *A, int n, int *indx, double *d)$/;"	f	file:
mapf	rtkcmn.c	/^static double mapf(double el, double a, double b, double c)$/;"	f	file:
marker	rtklib.h	/^    char marker [MAXANT]; \/* marker number *\/$/;"	m	struct:__anon44
marker	rtklib.h	/^    char marker[64];    \/* marker name *\/$/;"	m	struct:__anon58
markerno	rtklib.h	/^    char markerno[32];  \/* marker number *\/$/;"	m	struct:__anon58
markertype	rtklib.h	/^    char markertype[32]; \/* marker type (ver.3) *\/$/;"	m	struct:__anon58
mask	rtklib.h	/^    char mask[6][64];   \/* code mask {GPS,GLO,GAL,QZS,SBS,CMP} *\/$/;"	m	struct:__anon58
mask	rtklib.h	/^    double mask[NFREQ][9]; \/* mask (dBHz) at 5,10,...85 deg *\/$/;"	m	struct:__anon54
mat	rtkcmn.c	/^extern double *mat(int n, int m)$/;"	f
matcpy	rtkcmn.c	/^extern void matcpy(double *A, const double *B, int n, int m)$/;"	f
matfprint	rtkcmn.c	/^extern void matfprint(const double A[], int n, int m, int p, int q, FILE *fp)$/;"	f
matinv	rtkcmn.c	/^extern int matinv(double *A, int n)$/;"	f
matmul	rtkcmn.c	/^extern void matmul(const char *tr, int n, int k, int m, double alpha,$/;"	f
matprint	rtkcmn.c	/^extern void matprint(const double A[], int n, int m, int p, int q)$/;"	f
maxgdop	rtklib.h	/^    double maxgdop;     \/* reject threshold of gdop *\/$/;"	m	struct:__anon55
maxinno	rtklib.h	/^    double maxinno;     \/* reject threshold of innovation (m) *\/$/;"	m	struct:__anon55
maxout	rtklib.h	/^    int maxout;         \/* obs outage count to reset bias *\/$/;"	m	struct:__anon55
maxtdiff	rtklib.h	/^    double maxtdiff;    \/* max difference of time (sec) *\/$/;"	m	struct:__anon55
merge_two_s	rcvraw.c	/^static int merge_two_s(int a, unsigned int b, int n)$/;"	f	file:
merge_two_u	rcvraw.c	/^static unsigned int merge_two_u(unsigned int a, unsigned int b, int n)$/;"	f	file:
minfix	rtklib.h	/^    int minfix;         \/* min fix count to hold ambiguity *\/$/;"	m	struct:__anon55
minlock	rtklib.h	/^    int minlock;        \/* min lock count to fix ambiguity *\/$/;"	m	struct:__anon55
mjd	rtklib.h	/^    double mjd;         \/* mjd (days) *\/$/;"	m	struct:__anon11
mkdir_r	download.c	/^static int mkdir_r(const char *dir)$/;"	f	file:
mntpnt	stream.c	/^    char mntpnt[256];       \/* mountpoint *\/$/;"	m	struct:__anon72	file:
mode	rtklib.h	/^    int mode;           \/* mode (STR_MODE_?) *\/$/;"	m	struct:__anon63
mode	rtklib.h	/^    int mode;           \/* positioning mode (PMODE_???) *\/$/;"	m	struct:__anon55
mode	stream.c	/^    int mode;               \/* file mode *\/$/;"	m	struct:__anon68	file:
modear	rtklib.h	/^    int modear;         \/* AR mode (0:off,1:continuous,2:instantaneous,3:fix and hold,4:ppp-ar) *\/$/;"	m	struct:__anon55
model_geoid	geoid.c	/^static int model_geoid=GEOID_EMBEDDED; \/* geoid model *\/$/;"	v	file:
moni	rtklib.h	/^    stream_t *moni;     \/* monitor stream *\/$/;"	m	struct:__anon66
msg	rtklib.h	/^    char msg [MAXSTRMSG];  \/* stream message *\/$/;"	m	struct:__anon63
msg	rtklib.h	/^    char msg[128];      \/* special message *\/$/;"	m	struct:__anon49
msg	rtklib.h	/^    unsigned char msg[212]; \/* LEX message data part 1695 bits *\/$/;"	m	struct:__anon39
msg	rtklib.h	/^    unsigned char msg[29]; \/* SBAS message (226bit) padded by 0 *\/$/;"	m	struct:__anon28
msglen	rcv/gw10.c	/^static int msglen(unsigned char id)$/;"	f	file:
msgs	rtklib.h	/^    int msgs[32];       \/* output message types *\/$/;"	m	struct:__anon64
msgs	rtklib.h	/^    lexmsg_t *msgs;     \/* LEX messages *\/$/;"	m	struct:__anon40
msgs	rtklib.h	/^    sbsmsg_t *msgs;     \/* SBAS messages *\/$/;"	m	struct:__anon29
msgtype	rtklib.h	/^    char msgtype[256];  \/* last message type *\/$/;"	m	struct:__anon49
msgtype	rtklib.h	/^    char msgtype[256];  \/* last message type *\/$/;"	m	struct:__anon62
msm_h_t	rtcm3.c	/^} msm_h_t;$/;"	t	typeref:struct:__anon7	file:
msm_sig_cmp	rtcm3.c	/^const char *msm_sig_cmp[32]={$/;"	v
msm_sig_gal	rtcm3.c	/^const char *msm_sig_gal[32]={$/;"	v
msm_sig_glo	rtcm3.c	/^const char *msm_sig_glo[32]={$/;"	v
msm_sig_gps	rtcm3.c	/^const char *msm_sig_gps[32]={$/;"	v
msm_sig_qzs	rtcm3.c	/^const char *msm_sig_qzs[32]={$/;"	v
msm_sig_sbs	rtcm3.c	/^const char *msm_sig_sbs[32]={$/;"	v
msmtype	rtklib.h	/^    char msmtype[6][128]; \/* msm signal types *\/$/;"	m	struct:__anon49
n	datum.c	/^static int n=0;                     \/* datum trans parameter table size *\/$/;"	v	file:
n	download.c	/^    int n,nmax;                     \/* number and max number of paths *\/$/;"	m	struct:__anon4	file:
n	rinex.c	/^    int n;                              \/* number of index *\/$/;"	m	struct:__anon6	file:
n	rtklib.h	/^    double n;           \/* mean motion (rev\/day) *\/$/;"	m	struct:__anon21
n	rtklib.h	/^    double n[4];        \/* number of epochs *\/$/;"	m	struct:__anon60
n	rtklib.h	/^    int n,nmax;         \/* number and max number of data *\/$/;"	m	struct:__anon12
n	rtklib.h	/^    int n,nmax;         \/* number of LEX messages and allocated *\/$/;"	m	struct:__anon40
n	rtklib.h	/^    int n,nmax;         \/* number of SBAS messages\/allocated *\/$/;"	m	struct:__anon29
n	rtklib.h	/^    int n,nmax;         \/* number of broadcast ephemeris *\/$/;"	m	struct:__anon43
n	rtklib.h	/^    int n,nmax;         \/* number of data *\/$/;"	m	struct:__anon25
n	rtklib.h	/^    int n,nmax;         \/* number of data *\/$/;"	m	struct:__anon27
n	rtklib.h	/^    int n,nmax;         \/* number of data\/allocated *\/$/;"	m	struct:__anon14
n	rtklib.h	/^    int n,nmax;         \/* number of obervation data\/allocated *\/$/;"	m	struct:__anon10
n	rtklib.h	/^    int n,nmax;         \/* number of solution\/max number of buffer *\/$/;"	m	struct:__anon46
n	rtklib.h	/^    int n,nmax;         \/* number of solution\/max number of buffer *\/$/;"	m	struct:__anon48
n	rtklib.h	/^    int n,nmax;         \/* number\/max number of two line element data *\/$/;"	m	struct:__anon22
na	rtklib.h	/^    int na,namax;       \/* number of almanac data *\/$/;"	m	struct:__anon43
na	rtklib.h	/^    int nx,na;          \/* number of float states\/fixed states *\/$/;"	m	struct:__anon61
namax	rtklib.h	/^    int na,namax;       \/* number of almanac data *\/$/;"	m	struct:__anon43
name	rtklib.h	/^    char *name;         \/* option name *\/$/;"	m	struct:__anon52
name	rtklib.h	/^    char name   [MAXANT]; \/* marker name *\/$/;"	m	struct:__anon44
name	rtklib.h	/^    char name [32];     \/* common name *\/$/;"	m	struct:__anon21
name	rtklib.h	/^    char name[2][32];   \/* observer\/agency *\/$/;"	m	struct:__anon58
nav	convrnx.c	/^    nav_t  *nav;                \/* input navigation data *\/$/;"	m	struct:__anon1	file:
nav	rtklib.h	/^    nav_t  nav;         \/* navigation data *\/$/;"	m	struct:__anon50
nav	rtklib.h	/^    nav_t nav;          \/* navigation data *\/$/;"	m	struct:__anon66
nav	rtklib.h	/^    nav_t nav;          \/* satellite ephemerides *\/$/;"	m	struct:__anon49
nav	rtklib.h	/^    nav_t nav;          \/* satellite ephemerides *\/$/;"	m	struct:__anon62
nav_t	rtklib.h	/^} nav_t;$/;"	t	typeref:struct:__anon43
navs	postpos.c	/^static nav_t navs={0};          \/* navigation data *\/$/;"	v	file:
navsel	rtklib.h	/^    int navsel;         \/* ephemeris select (0:all,1:rover,2:base,3:corr) *\/$/;"	m	struct:__anon66
navsys	convrnx.c	/^static const int navsys[]={     \/* system codes *\/$/;"	v	file:
navsys	rinex.c	/^static const int navsys[]={             \/* satellite systems *\/$/;"	v	file:
navsys	rtklib.h	/^    int navsys;         \/* navigation system *\/$/;"	m	struct:__anon55
navsys	rtklib.h	/^    int navsys;         \/* navigation system *\/$/;"	m	struct:__anon58
nb	rtklib.h	/^    int nb [3];         \/* bytes in input buffers {rov,base} *\/$/;"	m	struct:__anon66
nb	rtklib.h	/^    int nb;             \/* number of byte in message buffer *\/$/;"	m	struct:__anon46
nb	stream.c	/^    int nb;                 \/* response buffer size *\/$/;"	m	struct:__anon72	file:
nbit	rtklib.h	/^    int nbit;           \/* number of bits in word buffer *\/ $/;"	m	struct:__anon49
nbyte	rtklib.h	/^    int nbyte;          \/* number of bytes in message buffer *\/ $/;"	m	struct:__anon49
nbyte	rtklib.h	/^    int nbyte;          \/* number of bytes in message buffer *\/ $/;"	m	struct:__anon62
nc	rtklib.h	/^    int nc,ncmax;       \/* number of precise clock *\/$/;"	m	struct:__anon43
ncmax	rtklib.h	/^    int nc,ncmax;       \/* number of precise clock *\/$/;"	m	struct:__anon43
ndata	rtklib.h	/^    int ndata[3];       \/* TEC grid data size {nlat,nlon,nhgt} *\/$/;"	m	struct:__anon23
nddot	rtklib.h	/^    double nddot;       \/* 2st derivative of mean motion *\/$/;"	m	struct:__anon21
ndot	rtklib.h	/^    double Adot,ndot;   \/* Adot,ndot for CNAV *\/$/;"	m	struct:__anon16
ndot	rtklib.h	/^    double ndot;        \/* 1st derivative of mean motion *\/$/;"	m	struct:__anon21
ne	rtklib.h	/^    int ne,nemax;       \/* number of precise ephemeris *\/$/;"	m	struct:__anon43
neb	rtklib.h	/^    int neb;            \/* bytes in error message buffer *\/$/;"	m	struct:__anon61
nemax	rtklib.h	/^    int ne,nemax;       \/* number of precise ephemeris *\/$/;"	m	struct:__anon43
nepoch	postpos.c	/^static int nepoch=0;            \/* number of observation epochs *\/$/;"	v	file:
nextdltime	stream.c	/^static gtime_t nextdltime(const int *topts, int stat)$/;"	f	file:
nextobsb	postpos.c	/^static int nextobsb(const obs_t *obs, int *i, int rcv)$/;"	f	file:
nextobsf	postpos.c	/^static int nextobsf(const obs_t *obs, int *i, int rcv)$/;"	f	file:
nextsat	streamsvr.c	/^static int nextsat(nav_t *nav, int sat, int msg)$/;"	f	file:
nf	rtklib.h	/^    int nf;             \/* number of frequencies (1:L1,2:L1+L2,3:L1+L2+L5) *\/$/;"	m	struct:__anon55
nfix	rtklib.h	/^    int nfix;           \/* number of continuous fixes of ambiguity *\/$/;"	m	struct:__anon61
ng	rtklib.h	/^    int ng,ngmax;       \/* number of glonass ephemeris *\/$/;"	m	struct:__anon43
ngmax	rtklib.h	/^    int ng,ngmax;       \/* number of glonass ephemeris *\/$/;"	m	struct:__anon43
nigp	rtklib.h	/^    int nigp;           \/* number of igps *\/$/;"	m	struct:__anon36
nitem	ionex.c	/^static int nitem(const double *range)$/;"	f	file:
niter	rtklib.h	/^    int niter;          \/* number of filter iteration *\/$/;"	m	struct:__anon55
nmax	download.c	/^    int n,nmax;                     \/* number and max number of paths *\/$/;"	m	struct:__anon4	file:
nmax	rtklib.h	/^    int n,nmax;         \/* number and max number of data *\/$/;"	m	struct:__anon12
nmax	rtklib.h	/^    int n,nmax;         \/* number of LEX messages and allocated *\/$/;"	m	struct:__anon40
nmax	rtklib.h	/^    int n,nmax;         \/* number of SBAS messages\/allocated *\/$/;"	m	struct:__anon29
nmax	rtklib.h	/^    int n,nmax;         \/* number of broadcast ephemeris *\/$/;"	m	struct:__anon43
nmax	rtklib.h	/^    int n,nmax;         \/* number of data *\/$/;"	m	struct:__anon25
nmax	rtklib.h	/^    int n,nmax;         \/* number of data *\/$/;"	m	struct:__anon27
nmax	rtklib.h	/^    int n,nmax;         \/* number of data\/allocated *\/$/;"	m	struct:__anon14
nmax	rtklib.h	/^    int n,nmax;         \/* number of obervation data\/allocated *\/$/;"	m	struct:__anon10
nmax	rtklib.h	/^    int n,nmax;         \/* number of solution\/max number of buffer *\/$/;"	m	struct:__anon46
nmax	rtklib.h	/^    int n,nmax;         \/* number of solution\/max number of buffer *\/$/;"	m	struct:__anon48
nmax	rtklib.h	/^    int n,nmax;         \/* number\/max number of two line element data *\/$/;"	m	struct:__anon22
nmeacycle	rtklib.h	/^    int nmeacycle;      \/* NMEA request cycle (ms) (0:no req) *\/$/;"	m	struct:__anon66
nmeacycle	rtklib.h	/^    int nmeacycle;      \/* NMEA request cycle (ms) (0:no) *\/$/;"	m	struct:__anon65
nmeaintv	rtklib.h	/^    double nmeaintv[2]; \/* nmea output interval (s) (<0:no,0:all) *\/$/;"	m	struct:__anon56
nmeapos	rtklib.h	/^    double nmeapos[3];  \/* NMEA request position (ecef) (m) *\/$/;"	m	struct:__anon65
nmeapos	rtklib.h	/^    double nmeapos[3];  \/* NMEA request position (ecef) (m) *\/$/;"	m	struct:__anon66
nmeareq	rtklib.h	/^    int nmeareq;        \/* NMEA request (0:no,1:nmeapos,2:single sol) *\/$/;"	m	struct:__anon66
nmf	rtkcmn.c	/^static double nmf(gtime_t time, const double pos[], const double azel[],$/;"	f	file:
nmsg	rtklib.h	/^    int nmsg;           \/* number of output messages *\/$/;"	m	struct:__anon64
nmsg	rtklib.h	/^    unsigned int nmsg[3][10]; \/* input message counts *\/$/;"	m	struct:__anon66
nmsg2	rtklib.h	/^    unsigned int nmsg2[100]; \/* message count of RTCM 2 (1-99:1-99,0:other) *\/$/;"	m	struct:__anon49
nmsg3	rtklib.h	/^    unsigned int nmsg3[300]; \/* message count of RTCM 3 (1-299:1001-1299,0:ohter) *\/$/;"	m	struct:__anon49
nn	rtklib.h	/^    int nn,nnmax;       \/* number of stec grid data *\/$/;"	m	struct:__anon43
nnmax	rtklib.h	/^    int nn,nnmax;       \/* number of stec grid data *\/$/;"	m	struct:__anon43
nobs	rtklib.h	/^    int nobs[6];        \/* number of obs types {GPS,GLO,GAL,QZS,SBS,CMP} *\/$/;"	m	struct:__anon58
norm	rtkcmn.c	/^extern double norm(const double *a, int n)$/;"	f
normv3	rtkcmn.c	/^extern int normv3(const double *a, double *b)$/;"	f
npb	rtklib.h	/^    int npb;            \/* data length in peek buffer (bytes) *\/$/;"	m	struct:__anon65
npb	rtklib.h	/^    int npb[3];         \/* bytes in input peek buffers *\/$/;"	m	struct:__anon66
ns	rtklib.h	/^    int ns,nsmax;       \/* number of sbas ephemeris *\/$/;"	m	struct:__anon43
ns	rtklib.h	/^    unsigned char ns;   \/* number of valid satellites *\/$/;"	m	struct:__anon45
nsat	rtcm3.c	/^    unsigned char nsat,nsig;        \/* number of satellites\/signals *\/$/;"	m	struct:__anon7	file:
nsat	rtklib.h	/^    int nsat;           \/* number of satellites *\/$/;"	m	struct:__anon33
nsb	rtklib.h	/^    int nsb[2];         \/* bytes in soulution buffers *\/$/;"	m	struct:__anon66
nsbs	rtklib.h	/^    int nsbs;           \/* number of sbas message *\/$/;"	m	struct:__anon66
nsig	rtcm3.c	/^    unsigned char nsat,nsig;        \/* number of satellites\/signals *\/$/;"	m	struct:__anon7	file:
nsmax	rtklib.h	/^    int ns,nsmax;       \/* number of sbas ephemeris *\/$/;"	m	struct:__anon43
nsol	rtklib.h	/^    int nsol;           \/* number of solution buffer *\/$/;"	m	struct:__anon66
nstr	rtklib.h	/^    int nstr;           \/* number of streams (1 input + (nstr-1) outputs *\/$/;"	m	struct:__anon65
nt	rtklib.h	/^    int nt,ntmax;       \/* number of tec grid data *\/$/;"	m	struct:__anon43
ntmax	rtklib.h	/^    int nt,ntmax;       \/* number of tec grid data *\/$/;"	m	struct:__anon43
ntrip_t	stream.c	/^} ntrip_t;$/;"	t	typeref:struct:__anon72	file:
nut_iau1980	rtkcmn.c	/^static void nut_iau1980(double t, const double *f, double *dpsi, double *deps)$/;"	f	file:
nx	rtklib.h	/^    int nx,na;          \/* number of float states\/fixed states *\/$/;"	m	struct:__anon61
obs	convrnx.c	/^    obs_t  *obs;                \/* input observation data *\/$/;"	m	struct:__anon1	file:
obs	rtklib.h	/^    obs_t  obs;         \/* observation data *\/$/;"	m	struct:__anon50
obs	rtklib.h	/^    obs_t obs;          \/* observation data (uncorrected) *\/$/;"	m	struct:__anon49
obs	rtklib.h	/^    obs_t obs;          \/* observation data *\/$/;"	m	struct:__anon62
obs	rtklib.h	/^    obs_t obs[3][MAXOBSBUF]; \/* observation data {rov,base,corr} *\/$/;"	m	struct:__anon66
obs2code	rtkcmn.c	/^extern unsigned char obs2code(const char *obs, int *freq)$/;"	f
obs_t	rtklib.h	/^} obs_t;$/;"	t	typeref:struct:__anon10
obscodes	rinex.c	/^static const char obscodes[]="CLDS";    \/* obs type codes *\/$/;"	v	file:
obscodes	rtkcmn.c	/^static char *obscodes[]={       \/* observation code strings *\/$/;"	v	file:
obsd_t	rtklib.h	/^} obsd_t;$/;"	t	typeref:struct:__anon9
obsflag	rtklib.h	/^    int obsflag;        \/* obs data complete flag (1:ok,0:not complete) *\/$/;"	m	struct:__anon49
obsfreqs	rtkcmn.c	/^static unsigned char obsfreqs[]={ \/* 1:L1,2:L2,3:L5,4:L6,5:L7,6:L8,7:L3 *\/$/;"	v	file:
obsindex	rcv/novatel.c	/^static int obsindex(obs_t *obs, gtime_t time, int sat)$/;"	f	file:
obsindex	rcv/septentrio.c	/^static int obsindex(obs_t *obs, gtime_t time, int sat)$/;"	f	file:
obsindex	rinex.c	/^static int obsindex(double ver, int sys, const unsigned char *code,$/;"	f	file:
obsindex	rtcm2.c	/^static int obsindex(obs_t *obs, gtime_t time, int sat)$/;"	f	file:
obsindex	rtcm3.c	/^static int obsindex(obs_t *obs, gtime_t time, int sat)$/;"	f	file:
obss	postpos.c	/^static obs_t obss={0};          \/* observation data *\/$/;"	v	file:
obstype	rtklib.h	/^    int obstype;        \/* observation type *\/$/;"	m	struct:__anon58
obuf	rtklib.h	/^    obs_t obuf;         \/* observation data buffer *\/$/;"	m	struct:__anon62
odisp	rtklib.h	/^    double odisp[2][6*11]; \/* ocean tide loading parameters {rov,base} *\/$/;"	m	struct:__anon55
off	rtklib.h	/^    double icpp[MAXSAT],off[MAXSAT],icpc; \/* carrier params for ss2 *\/$/;"	m	struct:__anon62
off	rtklib.h	/^    double off[NFREQ][ 3]; \/* phase center offset e\/n\/u or x\/y\/z (m) *\/$/;"	m	struct:__anon13
offset	stream.c	/^    int offset;             \/* time offset (ms) for slave *\/$/;"	m	struct:__anon68	file:
omg	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon15
omg	rtklib.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon16
omg	rtklib.h	/^    double omg;         \/* argument of perigee (deg) *\/$/;"	m	struct:__anon21
open_rnxctr	rinex.c	/^extern int open_rnxctr(rnxctr_t *rnx, FILE *fp)$/;"	f
open_strfile	convrnx.c	/^static int open_strfile(strfile_t *str, const char *file)$/;"	f	file:
openfile	convrnx.c	/^static int openfile(FILE **ofp, char *files[], const char *file,$/;"	f	file:
openfile	postpos.c	/^static FILE *openfile(const char *outfile)$/;"	f	file:
openfile	stream.c	/^static file_t *openfile(const char *path, int mode, char *msg)$/;"	f	file:
openfile_	stream.c	/^static int openfile_(file_t *file, gtime_t time, char *msg)$/;"	f	file:
openftp	stream.c	/^static ftp_t *openftp(const char *path, int type, char *msg)$/;"	f	file:
opengeoid	geoid.c	/^extern int opengeoid(int model, const char *file)$/;"	f
openntrip	stream.c	/^static ntrip_t *openntrip(const char *path, int type, char *msg)$/;"	f	file:
openpath	stream.c	/^    char openpath[MAXSTRPATH]; \/* open file path *\/$/;"	m	struct:__anon68	file:
openserial	stream.c	/^static serial_t *openserial(const char *path, int mode, char *msg)$/;"	f	file:
openses	postpos.c	/^static int openses(const prcopt_t *popt, const solopt_t *sopt,$/;"	f	file:
opentcpcli	stream.c	/^static tcpcli_t *opentcpcli(const char *path, char *msg)$/;"	f	file:
opentcpsvr	stream.c	/^static tcpsvr_t *opentcpsvr(const char *path, char *msg)$/;"	f	file:
opt	rtklib.h	/^    char   opt[256];    \/* rinex dependent options *\/$/;"	m	struct:__anon50
opt	rtklib.h	/^    char opt[256];      \/* RTCM dependent options *\/$/;"	m	struct:__anon49
opt	rtklib.h	/^    char opt[256];      \/* receiver dependent options *\/$/;"	m	struct:__anon62
opt	rtklib.h	/^    prcopt_t opt;       \/* processing options *\/$/;"	m	struct:__anon61
opt2buf	options.c	/^extern int opt2buf(const opt_t *opt, char *buff)$/;"	f
opt2sep	solution.c	/^static const char *opt2sep(const solopt_t *opt)$/;"	f	file:
opt2str	options.c	/^extern int opt2str(const opt_t *opt, char *str)$/;"	f
opt_t	rtklib.h	/^} opt_t;$/;"	t	typeref:struct:__anon52
otype	rtklib.h	/^    int itype,otype;    \/* input and output stream type *\/$/;"	m	struct:__anon64
out	rtklib.h	/^    rtcm_t out;         \/* rtcm output data buffer *\/$/;"	m	struct:__anon64
outb	rtklib.h	/^    unsigned int outb,outr; \/* output bytes\/rate *\/$/;"	m	struct:__anon63
outbt	rtklib.h	/^    unsigned int inbt,outbt; \/* input\/output bytes at tick *\/$/;"	m	struct:__anon63
outc	rtklib.h	/^    unsigned int outc [NFREQ]; \/* obs outage counter of phase *\/$/;"	m	struct:__anon59
outc	rtklib.h	/^    unsigned short outc;  \/* outage counter *\/$/;"	m	struct:__anon47
outecef	solution.c	/^static int outecef(unsigned char *buff, const char *s, const sol_t *sol,$/;"	f	file:
outenu	solution.c	/^static int outenu(unsigned char *buff, const char *s, const sol_t *sol,$/;"	f	file:
outhead	postpos.c	/^static int outhead(const char *outfile, char **infile, int n,$/;"	f	file:
outhead	rtklib.h	/^    int outhead;        \/* output header (0:no,1:yes) *\/$/;"	m	struct:__anon56
outheader	postpos.c	/^static void outheader(FILE *fp, char **file, int n, const prcopt_t *popt,$/;"	f	file:
outiono	rtklib.h	/^    int outiono;        \/* output iono correction *\/$/;"	m	struct:__anon58
outleaps	rtklib.h	/^    int outleaps;       \/* output leap seconds *\/$/;"	m	struct:__anon58
outnavf	rinex.c	/^static void outnavf(FILE *fp, double value)$/;"	f	file:
outnmea_gga	solution.c	/^extern int outnmea_gga(unsigned char *buff, const sol_t *sol)$/;"	f
outnmea_gsa	solution.c	/^extern int outnmea_gsa(unsigned char *buff, const sol_t *sol,$/;"	f
outnmea_gsv	solution.c	/^extern int outnmea_gsv(unsigned char *buff, const sol_t *sol,$/;"	f
outnmea_rmc	solution.c	/^extern int outnmea_rmc(unsigned char *buff, const sol_t *sol)$/;"	f
outobstype_ver2	rinex.c	/^static void outobstype_ver2(FILE *fp, const rnxopt_t *opt)$/;"	f	file:
outobstype_ver3	rinex.c	/^static void outobstype_ver3(FILE *fp, const rnxopt_t *opt)$/;"	f	file:
outopt	rtklib.h	/^    int outopt;         \/* output processing options (0:no,1:yes) *\/$/;"	m	struct:__anon56
outpoint	convkml.c	/^static void outpoint(FILE *fp, gtime_t time, const double *pos,$/;"	f	file:
outpos	solution.c	/^static int outpos(unsigned char *buff, const char *s, const sol_t *sol,$/;"	f	file:
outprcopt	solution.c	/^extern void outprcopt(FILE *fp, const prcopt_t *opt)$/;"	f
outprcopts	solution.c	/^extern int outprcopts(unsigned char *buff, const prcopt_t *opt)$/;"	f
outr	rtklib.h	/^    unsigned int outb,outr; \/* output bytes\/rate *\/$/;"	m	struct:__anon63
outrnxcnavh	rinex.c	/^extern int outrnxcnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxgnavb	rinex.c	/^extern int outrnxgnavb(FILE *fp, const rnxopt_t *opt, const geph_t *geph)$/;"	f
outrnxgnavh	rinex.c	/^extern int outrnxgnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxhnavb	rinex.c	/^extern int outrnxhnavb(FILE *fp, const rnxopt_t *opt, const seph_t *seph)$/;"	f
outrnxhnavh	rinex.c	/^extern int outrnxhnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxlnavh	rinex.c	/^extern int outrnxlnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxnavb	rinex.c	/^extern int outrnxnavb(FILE *fp, const rnxopt_t *opt, const eph_t *eph)$/;"	f
outrnxnavh	rinex.c	/^extern int outrnxnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxobsb	rinex.c	/^extern int outrnxobsb(FILE *fp, const rnxopt_t *opt, const obsd_t *obs, int n,$/;"	f
outrnxobsf	rinex.c	/^static void outrnxobsf(FILE *fp, double obs, int lli)$/;"	f	file:
outrnxobsh	rinex.c	/^extern int outrnxobsh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxqnavh	rinex.c	/^extern int outrnxqnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrpos	postpos.c	/^static void outrpos(FILE *fp, const double *r, const solopt_t *opt)$/;"	f	file:
outsol	solution.c	/^extern void outsol(FILE *fp, const sol_t *sol, const double *rb,$/;"	f
outsolex	solution.c	/^extern void outsolex(FILE *fp, const sol_t *sol, const ssat_t *ssat,$/;"	f
outsolexs	solution.c	/^extern int outsolexs(unsigned char *buff, const sol_t *sol, const ssat_t *ssat,$/;"	f
outsolhead	solution.c	/^extern void outsolhead(FILE *fp, const solopt_t *opt)$/;"	f
outsolheads	solution.c	/^extern int outsolheads(unsigned char *buff, const solopt_t *opt)$/;"	f
outsols	solution.c	/^extern int outsols(unsigned char *buff, const sol_t *sol, const double *rb,$/;"	f
outsolstat	rtkpos.c	/^static void outsolstat(rtk_t *rtk)$/;"	f	file:
outtime	rtklib.h	/^    int outtime;        \/* output time system correction *\/$/;"	m	struct:__anon58
outtrack	convkml.c	/^static void outtrack(FILE *f, const solbuf_t *solbuf, const char *color,$/;"	f	file:
outtype	rtklib.h	/^    int outtype;        \/* output message type *\/$/;"	m	struct:__anon49
outtype	rtklib.h	/^    int outtype;        \/* output message type *\/$/;"	m	struct:__anon62
p_gamma	ppp_ar.c	/^static double p_gamma(double a, double x, double log_gamma_a)$/;"	f	file:
page	rtklib.h	/^    unsigned int page;  \/* RT17: Last page number *\/$/;"	m	struct:__anon62
parse_str	download.c	/^static char *parse_str(char *buff, char *str, int nmax)$/;"	f	file:
passwd	stream.c	/^    char passwd[256];       \/* password *\/$/;"	m	struct:__anon72	file:
passwd	stream.c	/^    char passwd[256];       \/* password for ftp *\/$/;"	m	struct:__anon73	file:
path	download.c	/^    path_t *path;                   \/* download paths *\/$/;"	m	struct:__anon4	file:
path	rtklib.h	/^    char path[1024];    \/* url path *\/$/;"	m	struct:__anon51
path	rtklib.h	/^    char path[MAXSTRPATH]; \/* stream path *\/$/;"	m	struct:__anon63
path	stream.c	/^    char path[MAXSTRPATH];  \/* file path *\/$/;"	m	struct:__anon68	file:
path_t	download.c	/^} path_t;$/;"	t	typeref:struct:__anon3	file:
paths_t	download.c	/^} paths_t;$/;"	t	typeref:struct:__anon4	file:
pbuf	rtklib.h	/^    unsigned char *pbuf; \/* peek buffer *\/$/;"	m	struct:__anon65
pbuf	rtklib.h	/^    unsigned char *pbuf[3]; \/* peek buffers {rov,base,corr} *\/$/;"	m	struct:__anon66
pbuff	rtklib.h	/^    unsigned char pbuff[255+4+2]; \/* RT17: Packet buffer *\/$/;"	m	struct:__anon62
pbyte	rtklib.h	/^    unsigned int pbyte; \/* RT17: How many packet bytes have been read so far *\/$/;"	m	struct:__anon62
pclk	rtklib.h	/^    pclk_t *pclk;       \/* precise clock *\/$/;"	m	struct:__anon43
pclk_t	rtklib.h	/^} pclk_t;$/;"	t	typeref:struct:__anon19
pcv	rtklib.h	/^    pcv_t *pcv;         \/* antenna parameters data *\/$/;"	m	struct:__anon14
pcv_t	rtklib.h	/^} pcv_t;$/;"	t	typeref:struct:__anon13
pcvr	rtklib.h	/^    pcv_t pcvr[2];      \/* receiver antenna parameters {rov,base} *\/$/;"	m	struct:__anon55
pcvs	rtklib.h	/^    pcv_t pcvs[MAXSAT]; \/* satellite antenna pcv *\/$/;"	m	struct:__anon43
pcvs_t	rtklib.h	/^} pcvs_t;$/;"	t	typeref:struct:__anon14
pcvsr	postpos.c	/^static pcvs_t pcvsr={0};        \/* satellite antenna parameters *\/$/;"	v	file:
pcvss	postpos.c	/^static pcvs_t pcvss={0};        \/* receiver antenna parameters *\/$/;"	v	file:
peph	rtklib.h	/^    peph_t *peph;       \/* precise ephemeris *\/$/;"	m	struct:__anon43
peph2pos	preceph.c	/^extern int peph2pos(gtime_t time, int sat, const nav_t *nav, int opt,$/;"	f
peph_t	rtklib.h	/^} peph_t;$/;"	t	typeref:struct:__anon18
pephclk	preceph.c	/^static int pephclk(gtime_t time, int sat, const nav_t *nav, double *dts,$/;"	f	file:
pephpos	preceph.c	/^static int pephpos(gtime_t time, int sat, const nav_t *nav, double *rs,$/;"	f	file:
perm	lambda.c	/^static void perm(int n, double *L, double *D, int j, double del, double *Z)$/;"	f	file:
perr	rtklib.h	/^    double perr[4][NFREQ*2]; \/* carrier-phase errors (m) *\/$/;"	m	struct:__anon53
ph	rtklib.h	/^    double  ph[2][NFREQ]; \/* previous carrier-phase observable (cycle) *\/$/;"	m	struct:__anon59
phw	rtklib.h	/^    double  phw;        \/* phase windup (cycle) *\/$/;"	m	struct:__anon59
plen	rtklib.h	/^    unsigned int plen;  \/* RT17: Total size of packet to be read *\/$/;"	m	struct:__anon62
pntpos	pntpos.c	/^extern int pntpos(const obsd_t *obs, int n, const nav_t *nav,$/;"	f
port	rtklib.h	/^    void *port;         \/* type dependent port control struct *\/$/;"	m	struct:__anon63
port	stream.c	/^    int port;               \/* port *\/$/;"	m	struct:__anon69	file:
pos	rinex.c	/^    int pos[MAXOBSTYPE];                \/* signal index in obs data (-1:no) *\/$/;"	m	struct:__anon6	file:
pos	rtklib.h	/^    double pos[2];      \/* latitude\/longitude (deg) *\/$/;"	m	struct:__anon25
pos	rtklib.h	/^    double pos[3];      \/* satellite position (ecef) (m) *\/$/;"	m	struct:__anon17
pos	rtklib.h	/^    double pos[3];      \/* satellite position (m) (ecef) *\/$/;"	m	struct:__anon20
pos	rtklib.h	/^    double pos[3];      \/* satellite position (m) *\/$/;"	m	struct:__anon41
pos	rtklib.h	/^    double pos[3];      \/* station position (ecef) (m) *\/$/;"	m	struct:__anon44
pos	rtklib.h	/^    double pos[MAXSAT][4]; \/* satellite position\/clock (ecef) (m|s) *\/$/;"	m	struct:__anon18
pos	rtklib.h	/^    float pos[2];       \/* latitude,longitude (rad) *\/$/;"	m	struct:__anon27
pos0	rtklib.h	/^    double pos0[2];     \/* reference position {lat,lon} (rad) *\/$/;"	m	struct:__anon42
pos2ecef	rtkcmn.c	/^extern void pos2ecef(const double *pos, double *r)$/;"	f
posf	rtklib.h	/^    int posf;           \/* solution format (SOLF_???) *\/$/;"	m	struct:__anon56
posopt	rtklib.h	/^    int  posopt[6];     \/* positioning options *\/$/;"	m	struct:__anon55
postpos	postpos.c	/^extern int postpos(gtime_t ts, gtime_t te, double ti, double tu,$/;"	f
pppamb	ppp_ar.c	/^extern int pppamb(rtk_t *rtk, const obsd_t *obs, int n, const nav_t *nav,$/;"	f
pppnx	ppp.c	/^extern int pppnx(const prcopt_t *opt)$/;"	f
pppos	ppp.c	/^extern void pppos(rtk_t *rtk, const obsd_t *obs, int n, const nav_t *nav)$/;"	f
pppoutsolstat	ppp.c	/^extern void pppoutsolstat(rtk_t *rtk, int level, FILE *fp)$/;"	f
prCA	rtklib.h	/^    double prCA[MAXSAT],dpCA[MAXSAT]; \/* L1\/CA pseudrange\/doppler for javad *\/$/;"	m	struct:__anon62
prange	pntpos.c	/^static double prange(const obsd_t *obs, const nav_t *nav, const double *azel,$/;"	f	file:
prc	rtklib.h	/^    double prc;         \/* pseudorange correction (PRC) (m) *\/$/;"	m	struct:__anon30
prc	rtklib.h	/^    double prc;         \/* pseudorange correction (PRC) (m) *\/$/;"	m	struct:__anon37
prcopt_	options.c	/^static prcopt_t prcopt_;$/;"	v	file:
prcopt_default	rtkcmn.c	/^const prcopt_t prcopt_default={ \/* defaults processing options *\/$/;"	v
prcopt_t	rtklib.h	/^} prcopt_t;$/;"	t	typeref:struct:__anon55
prcout	rtklib.h	/^    int prcout;         \/* missing observation data count *\/$/;"	m	struct:__anon66
prectrop	ppp.c	/^static double prectrop(gtime_t time, const double *pos, const double *azel,$/;"	f	file:
prectrop	rtkpos.c	/^static double prectrop(gtime_t time, const double *pos, int r,$/;"	f	file:
pri	rinex.c	/^    unsigned char pri [MAXOBSTYPE];     \/* signal priority (15-0) *\/$/;"	m	struct:__anon6	file:
print_total	download.c	/^static int print_total(const url_t *url, char **stas, int nsta, int *nc,$/;"	f	file:
prm	datum.c	/^static tprm_t *prm=NULL;            \/* datum trans parameter table *\/$/;"	v	file:
prn	rtklib.h	/^    double prn[5];      \/* process-noise std [0]bias,[1]iono [2]trop [3]acch [4]accv *\/$/;"	m	struct:__anon55
prn	rtklib.h	/^    int prn;            \/* SBAS satellite PRN number *\/$/;"	m	struct:__anon28
prn	rtklib.h	/^    int prn;            \/* satellite PRN number *\/$/;"	m	struct:__anon39
proc_base	postpos.c	/^static char proc_base[64]="";   \/* base station for current processing *\/$/;"	v	file:
proc_rov	postpos.c	/^static char proc_rov [64]="";   \/* rover for current processing *\/$/;"	v	file:
procpos	postpos.c	/^static void procpos(FILE *fp, const prcopt_t *popt, const solopt_t *sopt,$/;"	f	file:
prog	rtklib.h	/^    char prog  [32];    \/* program *\/$/;"	m	struct:__anon58
prog	rtklib.h	/^    char prog[64];      \/* program name *\/$/;"	m	struct:__anon56
proto	stream.c	/^    int proto;              \/* protocol (0:ftp,1:http) *\/$/;"	m	struct:__anon73	file:
proxyaddr	stream.c	/^static char proxyaddr[256]=""; \/* http\/ntrip\/ftp proxy address *\/$/;"	v	file:
pt	rtklib.h	/^    gtime_t pt[2][NFREQ]; \/* previous carrier-phase time *\/$/;"	m	struct:__anon59
q_gamma	ppp_ar.c	/^static double q_gamma(double a, double x, double log_gamma_a)$/;"	f	file:
qr	rtklib.h	/^    float  qr[6];       \/* position variance\/covariance (m^2) *\/$/;"	m	struct:__anon45
raim_fde	pntpos.c	/^static int raim_fde(const obsd_t *obs, int n, const double *rs,$/;"	f	file:
range	geoid.c	/^static const double range[4];       \/* embedded geoid area range {W,E,S,N} (deg) *\/$/;"	v	file:
range	geoid.c	/^static const double range[]={0.00,360.00,-90.00,90.00};$/;"	v	file:
rate	rtklib.h	/^    float rate;         \/* L1 ionosphere rate (m\/s) *\/$/;"	m	struct:__anon24
ratio	rtklib.h	/^    float ratio;        \/* AR ratio factor for valiation *\/$/;"	m	struct:__anon45
raw	convrnx.c	/^    raw_t  raw;                 \/* receiver raw data *\/$/;"	m	struct:__anon1	file:
raw	rtklib.h	/^    raw_t  raw [3];     \/* receiver raw control {rov,base,corr} *\/$/;"	m	struct:__anon66
raw	rtklib.h	/^    raw_t raw;          \/* raw  input data buffer *\/$/;"	m	struct:__anon64
raw2rtcm	streamsvr.c	/^static void raw2rtcm(rtcm_t *out, const raw_t *raw, int ret)$/;"	f	file:
raw_t	rtklib.h	/^} raw_t;$/;"	t	typeref:struct:__anon62
rb	rtklib.h	/^    double rb;          \/* earth radius (km) *\/$/;"	m	struct:__anon23
rb	rtklib.h	/^    double rb[3];       \/* base position for relative mode {x,y,z} (ecef) (m) *\/$/;"	m	struct:__anon55
rb	rtklib.h	/^    double rb[3];       \/* reference position {x,y,z} (ecef) (m) *\/$/;"	m	struct:__anon46
rb	rtklib.h	/^    double rb[6];       \/* base position\/velocity (ecef) (m|m\/s) *\/$/;"	m	struct:__anon61
rbb	postpos.c	/^static double *rbb;             \/* backward base positions *\/$/;"	v	file:
rbf	postpos.c	/^static double *rbf;             \/* forward base positions *\/$/;"	v	file:
rcsid	convkml.c	/^static const char rcsid[]="$Id: convkml.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	convrnx.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	datum.c	/^static const char rcsid[]="$Id: datum.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	download.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	ephemeris.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	geoid.c	/^static const char rcsid[]="$Id: geoid.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	ionex.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	lambda.c	/^static const char rcsid[]="$Id: lambda.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	options.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	pntpos.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	postpos.c	/^static const char rcsid[]="$Id: postpos.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	ppp.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	ppp_ar.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	preceph.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	qzslex.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rcv/rt17.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rcv/septentrio.c	/^static const char rcsid[]="$Id: Septentrio SBF,v 1.1 2013\/10\/23 FT $";$/;"	v	file:
rcsid	rcv/ss2.c	/^static const char rcsid[]="$Id: ss2.c,v 1.2 2008\/07\/14 00:05:05 TTAKA Exp $";$/;"	v	file:
rcsid	rinex.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtcm.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtcm2.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtcm3.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtcm3e.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtkcmn.c	/^static const char rcsid[]="$Id: rtkcmn.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp ttaka $";$/;"	v	file:
rcsid	rtkpos.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtksvr.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	sbas.c	/^static const char rcsid[]="$Id: sbas.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	solution.c	/^static const char rcsid[]="$Id: solution.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	stream.c	/^static const char rcsid[]="$Id$";$/;"	v	file:
rcsid	streamsvr.c	/^static const char rcsid[]="$Id$";$/;"	v	file:
rcv	rtklib.h	/^    unsigned char sat,rcv; \/* satellite\/receiver number *\/$/;"	m	struct:__anon9
rcvantp	rtklib.h	/^    char rcvantp[MAXSTRPATH]; \/* receiver antenna parameters file *\/$/;"	m	struct:__anon57
rcvopt	rtklib.h	/^    char rcvopt[256];   \/* receiver dependent options *\/$/;"	m	struct:__anon58
read_i2	rcv/rt17.c	/^static short read_i2(unsigned char *p, int endian) $/;"	f	file:
read_i4	rcv/rt17.c	/^static int read_i4(unsigned char *p, int endian)$/;"	f	file:
read_leaps	rtkcmn.c	/^extern int read_leaps(const char *file)$/;"	f
read_r4	rcv/rt17.c	/^static float read_r4(unsigned char *p, int endian)$/;"	f	file:
read_r8	rcv/rt17.c	/^static double read_r8(unsigned char *p, int endian)$/;"	f	file:
read_u2	rcv/rt17.c	/^static unsigned short read_u2(unsigned char *p, int endian)$/;"	f	file:
read_u4	rcv/rt17.c	/^static unsigned int read_u4(unsigned char *p, int endian)$/;"	f	file:
readantex	rtkcmn.c	/^static int readantex(const char *file, pcvs_t *pcvs)$/;"	f	file:
readblq	rtkcmn.c	/^extern int readblq(const char *file, const char *sta, double *odisp)$/;"	f
readblqrecord	rtkcmn.c	/^static int readblqrecord(FILE *fp, double *odisp)$/;"	f	file:
readdcb	preceph.c	/^extern int readdcb(const char *file, nav_t *nav)$/;"	f
readdcbf	preceph.c	/^static int readdcbf(const char *file, nav_t *nav)$/;"	f	file:
readerp	rtkcmn.c	/^extern int readerp(const char *file, erp_t *erp)$/;"	f
readfile	stream.c	/^static int readfile(file_t *file, unsigned char *buff, int nmax, char *msg)$/;"	f	file:
readftp	stream.c	/^static int readftp(ftp_t *ftp, unsigned char *buff, int n, char *msg)$/;"	f	file:
readionexb	ionex.c	/^static int readionexb(FILE *fp, const double *lats, const double *lons,$/;"	f	file:
readionexdcb	ionex.c	/^static void readionexdcb(FILE *fp, double *dcb, double *rms)$/;"	f	file:
readionexh	ionex.c	/^static double readionexh(FILE *fp, double *lats, double *lons, double *hgts,$/;"	f	file:
readmsgs	sbas.c	/^static void readmsgs(const char *file, int sel, gtime_t ts, gtime_t te,$/;"	f	file:
readnav	rtkcmn.c	/^extern int readnav(const char *file, nav_t *nav)$/;"	f
readngspcv	rtkcmn.c	/^static int readngspcv(const char *file, pcvs_t *pcvs)$/;"	f	file:
readntrip	stream.c	/^static int readntrip(ntrip_t *ntrip, unsigned char *buff, int n, char *msg)$/;"	f	file:
readobsnav	postpos.c	/^static int readobsnav(gtime_t ts, gtime_t te, double ti, char **infile,$/;"	f	file:
readotl	postpos.c	/^static void readotl(prcopt_t *popt, const char *file, const sta_t *sta)$/;"	f	file:
readpcv	rtkcmn.c	/^extern int readpcv(const char *file, pcvs_t *pcvs)$/;"	f
readpos	rtkcmn.c	/^extern void readpos(const char *file, const char *rcv, double *pos)$/;"	f
readpreceph	postpos.c	/^static void readpreceph(char **infile, int n, const prcopt_t *prcopt,$/;"	f	file:
readrnx	rinex.c	/^extern int readrnx(const char *file, int rcv, const char *opt, obs_t *obs,$/;"	f
readrnxc	rinex.c	/^extern int readrnxc(const char *file, nav_t *nav)$/;"	f
readrnxclk	rinex.c	/^static int readrnxclk(FILE *fp, const char *opt, int index, nav_t *nav)$/;"	f	file:
readrnxfile	rinex.c	/^static int readrnxfile(const char *file, gtime_t ts, gtime_t te, double tint,$/;"	f	file:
readrnxfp	rinex.c	/^static int readrnxfp(FILE *fp, gtime_t ts, gtime_t te, double tint,$/;"	f	file:
readrnxh	rinex.c	/^static int readrnxh(FILE *fp, double *ver, char *type, int *sys, int *tsys,$/;"	f	file:
readrnxnav	rinex.c	/^static int readrnxnav(FILE *fp, const char *opt, double ver, int sys,$/;"	f	file:
readrnxnavb	rinex.c	/^static int readrnxnavb(FILE *fp, const char *opt, double ver, int sys,$/;"	f	file:
readrnxobs	rinex.c	/^static int readrnxobs(FILE *fp, gtime_t ts, gtime_t te, double tint,$/;"	f	file:
readrnxobsb	rinex.c	/^static int readrnxobsb(FILE *fp, const char *opt, double ver,$/;"	f	file:
readrnxt	rinex.c	/^extern int readrnxt(const char *file, int rcv, gtime_t ts, gtime_t te,$/;"	f
readsap	preceph.c	/^extern int readsap(const char *file, gtime_t time, nav_t *nav)$/;"	f
readserial	stream.c	/^static int readserial(serial_t *serial, unsigned char *buff, int n, char *msg)$/;"	f	file:
readseribuff	stream.c	/^static int readseribuff(serial_t *serial, unsigned char *buff, int nmax)$/;"	f	file:
readsol	solution.c	/^extern int readsol(char *files[], int nfile, solbuf_t *sol)$/;"	f
readsoldata	solution.c	/^static int readsoldata(FILE *fp, gtime_t ts, gtime_t te, double tint, int qflag,$/;"	f	file:
readsolopt	solution.c	/^static void readsolopt(FILE *fp, solopt_t *opt)$/;"	f	file:
readsolstat	solution.c	/^extern int readsolstat(char *files[], int nfile, solstatbuf_t *statbuf)$/;"	f
readsolstatdata	solution.c	/^static int readsolstatdata(FILE *fp, gtime_t ts, gtime_t te, double tint,$/;"	f	file:
readsolstatt	solution.c	/^extern int readsolstatt(char *files[], int nfile, gtime_t ts, gtime_t te,$/;"	f
readsolt	solution.c	/^extern int readsolt(char *files[], int nfile, gtime_t ts, gtime_t te,$/;"	f
readsp3	preceph.c	/^extern void readsp3(const char *file, nav_t *nav, int opt)$/;"	f
readsp3b	preceph.c	/^static void readsp3b(FILE *fp, char type, int *sats, int ns, double *bfact,$/;"	f	file:
readsp3h	preceph.c	/^static int readsp3h(FILE *fp, gtime_t *time, char *type, int *sats,$/;"	f	file:
readtcpcli	stream.c	/^static int readtcpcli(tcpcli_t *tcpcli, unsigned char *buff, int n, char *msg)$/;"	f	file:
readtcpsvr	stream.c	/^static int readtcpsvr(tcpsvr_t *tcpsvr, unsigned char *buff, int n, char *msg)$/;"	f	file:
readtec	ionex.c	/^extern void readtec(const char *file, nav_t *nav, int opt)$/;"	f
rec	rtklib.h	/^    char rec [3][32];   \/* receiver #\/type\/vers *\/$/;"	m	struct:__anon58
receive_time	rtklib.h	/^    double receive_time;\/* RT17: Reiceve time of week for week rollover detection *\/$/;"	m	struct:__anon62
recsno	rtklib.h	/^    char recsno [MAXANT]; \/* receiver serial number *\/$/;"	m	struct:__anon44
rectype	rtklib.h	/^    char rectype[MAXANT]; \/* receiver type descriptor *\/$/;"	m	struct:__anon44
recv_nb	stream.c	/^static int recv_nb(socket_t sock, unsigned char *buff, int n)$/;"	f	file:
recver	rtklib.h	/^    char recver [MAXANT]; \/* receiver firmware version *\/$/;"	m	struct:__anon44
reduction	lambda.c	/^static void reduction(int n, double *L, double *D, double *Z)$/;"	f	file:
refd	rtklib.h	/^    int refd;           \/* sat ref datum (0:ITRF,1:regional) *\/$/;"	m	struct:__anon38
refpos	rtklib.h	/^    int refpos;         \/* base position for relative mode *\/$/;"	m	struct:__anon55
rejc	rtklib.h	/^    unsigned int rejc [NFREQ]; \/* reject counter *\/$/;"	m	struct:__anon59
rejc	rtklib.h	/^    unsigned short rejc;  \/* reject counter *\/$/;"	m	struct:__anon47
relpos	rtkpos.c	/^static int relpos(rtk_t *rtk, const obsd_t *obs, int nu, int nr,$/;"	f	file:
remot	download.c	/^    char *remot;                    \/* remote path *\/$/;"	m	struct:__anon3	file:
remot2local	download.c	/^static void remot2local(const char *remot, const char *dir, char *local)$/;"	f	file:
reply	rtklib.h	/^    unsigned int reply; \/* RT17: Current reply number *\/$/;"	m	struct:__anon62
repmode	stream.c	/^    int repmode;            \/* replay mode (0:master,1:slave) *\/$/;"	m	struct:__anon68	file:
reppath	rtkcmn.c	/^extern int reppath(const char *path, char *rpath, gtime_t time, const char *rov,$/;"	f
reppaths	rtkcmn.c	/^extern int reppaths(const char *path, char *rpath[], int nmax, gtime_t ts,$/;"	f
repstr	rtkcmn.c	/^static int repstr(char *str, const char *pat, const char *rep)$/;"	f	file:
reqntrip_c	stream.c	/^static int reqntrip_c(ntrip_t *ntrip, char *msg)$/;"	f	file:
reqntrip_s	stream.c	/^static int reqntrip_s(ntrip_t *ntrip, char *msg)$/;"	f	file:
res_ppp	ppp.c	/^static int res_ppp(int iter, const obsd_t *obs, int n, const double *rs,$/;"	f	file:
resamb_LAMBDA	rtkpos.c	/^static int resamb_LAMBDA(rtk_t *rtk, double *bias, double *xa)$/;"	f	file:
resamb_TCAR	rtkpos.c	/^extern int resamb_TCAR(rtk_t *rtk, const obsd_t *obs, const int *sat,$/;"	f
resamb_WLNL	rtkpos.c	/^extern int resamb_WLNL(rtk_t *rtk, const obsd_t *obs, const int *sat,$/;"	f
resc	rtklib.h	/^    double resc[NFREQ]; \/* residuals of carrier-phase (m) *\/$/;"	m	struct:__anon59
resc	rtklib.h	/^    float resc;         \/* carrier-phase residual (m) *\/$/;"	m	struct:__anon47
rescode	pntpos.c	/^static int rescode(int iter, const obsd_t *obs, int n, const double *rs,$/;"	f	file:
resdop	pntpos.c	/^static int resdop(const obsd_t *obs, int n, const double *rs, const double *dts,$/;"	f	file:
resetsysopts	options.c	/^extern void resetsysopts(void)$/;"	f
resp	rtklib.h	/^    double resp[NFREQ]; \/* residuals of pseudorange (m) *\/$/;"	m	struct:__anon59
resp	rtklib.h	/^    float resp;         \/* pseudorange residual (m) *\/$/;"	m	struct:__anon47
restamb	rtkpos.c	/^static void restamb(rtk_t *rtk, const double *bias, int nb, double *xa)$/;"	f	file:
restslips	convrnx.c	/^static void restslips(unsigned char slips[][NFREQ+NEXOBS], obsd_t *data, int n)$/;"	f	file:
restslips	rinex.c	/^static void restslips(unsigned char slips[][NFREQ], obsd_t *data)$/;"	f	file:
rev	rtklib.h	/^    int rev;            \/* revolution number at epoch *\/$/;"	m	struct:__anon21
revs	postpos.c	/^static int revs  =0;            \/* analysis direction (0:forward,1:backward) *\/$/;"	v	file:
rms	rtklib.h	/^    float *rms;         \/* RMS values (tecu) *\/$/;"	m	struct:__anon23
rms	rtklib.h	/^    float rms;          \/* rms value (m) *\/$/;"	m	struct:__anon24
rms	rtklib.h	/^    float rms;          \/* rms value (m) *\/$/;"	m	struct:__anon26
rnx	convrnx.c	/^    rnxctr_t rnx;               \/* rinex data *\/$/;"	m	struct:__anon1	file:
rnx2opt	convrnx.c	/^static void rnx2opt(const rnxctr_t *rnx, rnxopt_t *opt)$/;"	f	file:
rnxctr_t	rtklib.h	/^} rnxctr_t;$/;"	t	typeref:struct:__anon50
rnxopt	rtklib.h	/^    char rnxopt[2][256]; \/* rinex options {rover,base} *\/$/;"	m	struct:__anon55
rnxopt_t	rtklib.h	/^} rnxopt_t;$/;"	t	typeref:struct:__anon58
rnxver	rtklib.h	/^    double rnxver;      \/* RINEX version *\/$/;"	m	struct:__anon58
rovpos	rtklib.h	/^    int rovpos;         \/* rover position for fixed mode *\/$/;"	m	struct:__anon55
rp	stream.c	/^    int state,wp,rp;        \/* state,write\/read pointer *\/$/;"	m	struct:__anon67	file:
rr	rtklib.h	/^    double rr[6];       \/* position\/velocity (m|m\/s) *\/$/;"	m	struct:__anon45
rrc	rtklib.h	/^    double rrc;         \/* range rate correction (RRC) (m\/s) *\/$/;"	m	struct:__anon37
rrc	rtklib.h	/^    double rrc;         \/* range-rate correction (RRC) (m\/s) *\/$/;"	m	struct:__anon30
rspntrip_c	stream.c	/^static int rspntrip_c(ntrip_t *ntrip, char *msg)$/;"	f	file:
rspntrip_s	stream.c	/^static int rspntrip_s(ntrip_t *ntrip, char *msg)$/;"	f	file:
rtcm	convrnx.c	/^    rtcm_t rtcm;                \/* rtcm data *\/$/;"	m	struct:__anon1	file:
rtcm	postpos.c	/^static rtcm_t rtcm;             \/* rtcm control struct *\/$/;"	v	file:
rtcm	rtklib.h	/^    rtcm_t rtcm;        \/* rtcm input data buffer *\/$/;"	m	struct:__anon64
rtcm	rtklib.h	/^    rtcm_t rtcm[3];     \/* RTCM control {rov,base,corr} *\/$/;"	m	struct:__anon66
rtcm2opt	convrnx.c	/^static void rtcm2opt(const rtcm_t *rtcm, rnxopt_t *opt)$/;"	f	file:
rtcm2rtcm	streamsvr.c	/^static void rtcm2rtcm(rtcm_t *out, const rtcm_t *rtcm, int ret, int stasel)$/;"	f	file:
rtcm_file	postpos.c	/^static char rtcm_file[1024]=""; \/* rtcm data file *\/$/;"	v	file:
rtcm_path	postpos.c	/^static char rtcm_path[1024]=""; \/* rtcm data path *\/$/;"	v	file:
rtcm_t	rtklib.h	/^} rtcm_t;$/;"	t	typeref:struct:__anon49
rtk	rtklib.h	/^    rtk_t rtk;          \/* RTK control\/result struct *\/$/;"	m	struct:__anon66
rtk_crc16	rtkcmn.c	/^extern unsigned short rtk_crc16(const unsigned char *buff, int len)$/;"	f
rtk_crc24q	rtkcmn.c	/^extern unsigned int rtk_crc24q(const unsigned char *buff, int len)$/;"	f
rtk_crc32	rtkcmn.c	/^extern unsigned int rtk_crc32(const unsigned char *buff, int len)$/;"	f
rtk_t	rtklib.h	/^} rtk_t;$/;"	t	typeref:struct:__anon61
rtkclosestat	rtkpos.c	/^extern void rtkclosestat(void)$/;"	f
rtkfree	rtkpos.c	/^extern void rtkfree(rtk_t *rtk)$/;"	f
rtkinit	rtkpos.c	/^extern void rtkinit(rtk_t *rtk, const prcopt_t *opt)$/;"	f
rtkopenstat	rtkpos.c	/^extern int rtkopenstat(const char *file, int level)$/;"	f
rtkpos	rtkpos.c	/^extern int rtkpos(rtk_t *rtk, const obsd_t *obs, int n, const nav_t *nav)$/;"	f
rtksvr_t	rtklib.h	/^} rtksvr_t;$/;"	t	typeref:struct:__anon66
rtksvrclosestr	rtksvr.c	/^extern void rtksvrclosestr(rtksvr_t *svr, int index)$/;"	f
rtksvrfree	rtksvr.c	/^extern void rtksvrfree(rtksvr_t *svr)$/;"	f
rtksvrinit	rtksvr.c	/^extern int rtksvrinit(rtksvr_t *svr)$/;"	f
rtksvrlock	rtksvr.c	/^extern void rtksvrlock  (rtksvr_t *svr) {lock  (&svr->lock);}$/;"	f
rtksvropenstr	rtksvr.c	/^extern int rtksvropenstr(rtksvr_t *svr, int index, int str, const char *path,$/;"	f
rtksvrostat	rtksvr.c	/^extern int rtksvrostat(rtksvr_t *svr, int rcv, gtime_t *time, int *sat,$/;"	f
rtksvrsstat	rtksvr.c	/^extern void rtksvrsstat(rtksvr_t *svr, int *sstat, char *msg)$/;"	f
rtksvrstart	rtksvr.c	/^extern int rtksvrstart(rtksvr_t *svr, int cycle, int buffsize, int *strs,$/;"	f
rtksvrstop	rtksvr.c	/^extern void rtksvrstop(rtksvr_t *svr, char **cmds)$/;"	f
rtksvrthread	rtksvr.c	/^static DWORD WINAPI rtksvrthread(void *arg)$/;"	f	file:
rtksvrunlock	rtksvr.c	/^extern void rtksvrunlock(rtksvr_t *svr) {unlock(&svr->lock);}$/;"	f
ru	rtklib.h	/^    double ru[3];       \/* rover position for fixed mode {x,y,z} (ecef) (m) *\/$/;"	m	struct:__anon55
runby	rtklib.h	/^    char runby [32];    \/* run-by *\/$/;"	m	struct:__anon58
saddr	stream.c	/^    char saddr[256];        \/* address string *\/$/;"	m	struct:__anon69	file:
sat	convrnx.c	/^    int    sat;                 \/* input satellite *\/$/;"	m	struct:__anon1	file:
sat	rtklib.h	/^    int sat;            \/* satellite number (0:receiver) *\/$/;"	m	struct:__anon13
sat	rtklib.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon15
sat	rtklib.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon16
sat	rtklib.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon17
sat	rtklib.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon20
sat	rtklib.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon32
sat	rtklib.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon41
sat	rtklib.h	/^    sbssatp_t sat[MAXSAT]; \/* satellite correction *\/$/;"	m	struct:__anon33
sat	rtklib.h	/^    unsigned char sat,rcv; \/* satellite\/receiver number *\/$/;"	m	struct:__anon9
sat	rtklib.h	/^    unsigned char sat;  \/* satellite number *\/$/;"	m	struct:__anon24
sat	rtklib.h	/^    unsigned char sat;  \/* satellite number *\/$/;"	m	struct:__anon47
sat2code	rinex.c	/^static int sat2code(int sat, char *code)$/;"	f	file:
satantoff	preceph.c	/^extern void satantoff(gtime_t time, const double *rs, int sat, const nav_t *nav,$/;"	f
satantp	rtklib.h	/^    char satantp[MAXSTRPATH]; \/* satellite antenna parameters file *\/$/;"	m	struct:__anon57
satantpcv	ppp.c	/^static void satantpcv(const double *rs, const double *rr, const pcv_t *pcv,$/;"	f	file:
satazel	rtkcmn.c	/^extern double satazel(const double *pos, const double *e, double *azel)$/;"	f
satclass	rtklib.h	/^    char satclass;      \/* classification *\/$/;"	m	struct:__anon21
sateph	rtklib.h	/^    int sateph;         \/* satellite ephemeris\/clock (EPHOPT_???) *\/$/;"	m	struct:__anon55
satexclude	rtkcmn.c	/^extern int satexclude(int sat, int svh, const prcopt_t *opt)$/;"	f
satid2no	rtkcmn.c	/^extern int satid2no(const char *id)$/;"	f
satno	rtkcmn.c	/^extern int satno(int sys, int prn)$/;"	f
satno	rtklib.h	/^    char satno[16];     \/* satellilte catalog number *\/$/;"	m	struct:__anon21
satno2id	rtkcmn.c	/^extern void satno2id(int sat, char *id)$/;"	f
satpos	ephemeris.c	/^extern int satpos(gtime_t time, gtime_t teph, int sat, int ephopt,$/;"	f
satpos_sbas	ephemeris.c	/^static int satpos_sbas(gtime_t time, gtime_t teph, int sat, const nav_t *nav,$/;"	f	file:
satpos_ssr	ephemeris.c	/^static int satpos_ssr(gtime_t time, gtime_t teph, int sat, const nav_t *nav,$/;"	f	file:
satposs	ephemeris.c	/^extern void satposs(gtime_t teph, const obsd_t *obs, int n, const nav_t *nav,$/;"	f
sats	rtcm3.c	/^    unsigned char sats[64];         \/* satellites *\/$/;"	m	struct:__anon7	file:
satsys	rtkcmn.c	/^extern int satsys(int sat, int *prn)$/;"	f
satwavelen	rtkcmn.c	/^extern double satwavelen(int sat, int frq, const nav_t *nav)$/;"	f
save_msm_obs	rtcm3.c	/^static void save_msm_obs(rtcm_t *rtcm, int sys, msm_h_t *h, const double *r,$/;"	f	file:
save_subfrm	rcv/skytraq.c	/^static int save_subfrm(int sat, raw_t *raw)$/;"	f	file:
save_subfrm	rcv/ublox.c	/^static int save_subfrm(int sat, raw_t *raw)$/;"	f	file:
savekml	convkml.c	/^static int savekml(const char *file, const solbuf_t *solbuf, int tcolor,$/;"	f	file:
savenav	rtkcmn.c	/^extern int savenav(const char *file, const nav_t *nav)$/;"	f
saveopts	options.c	/^extern int saveopts(const char *file, const char *mode, const char *comment,$/;"	f
saveoutbuf	rtksvr.c	/^static void saveoutbuf(rtksvr_t *svr, unsigned char *buff, int n, int index)$/;"	f	file:
saveslips	convrnx.c	/^static void saveslips(unsigned char slips[][NFREQ+NEXOBS], obsd_t *data, int n)$/;"	f	file:
saveslips	rinex.c	/^static void saveslips(unsigned char slips[][NFREQ], obsd_t *data)$/;"	f	file:
sbascorr	rtklib.h	/^    int sbascorr;       \/* SBAS correction options *\/$/;"	m	struct:__anon55
sbassatsel	rtklib.h	/^    int sbassatsel;     \/* SBAS satellite selection (0:all) *\/$/;"	m	struct:__anon55
sbs_t	rtklib.h	/^} sbs_t;$/;"	t	typeref:struct:__anon29
sbsdecodemsg	sbas.c	/^extern int sbsdecodemsg(gtime_t time, int prn, const unsigned int *words,$/;"	f
sbsfastcorr	sbas.c	/^static int sbsfastcorr(gtime_t time, int sat, const sbssat_t *sbssat,$/;"	f	file:
sbsfcorr_t	rtklib.h	/^} sbsfcorr_t;$/;"	t	typeref:struct:__anon30
sbsigp_t	rtklib.h	/^} sbsigp_t;$/;"	t	typeref:struct:__anon34
sbsigpband_t	rtklib.h	/^} sbsigpband_t;$/;"	t	typeref:struct:__anon35
sbsion	rtklib.h	/^    sbsion_t sbsion[MAXBAND+1]; \/* SBAS ionosphere corrections *\/$/;"	m	struct:__anon43
sbsion_t	rtklib.h	/^} sbsion_t;$/;"	t	typeref:struct:__anon36
sbsioncorr	sbas.c	/^extern int sbsioncorr(gtime_t time, const nav_t *nav, const double *pos,$/;"	f
sbslcorr_t	rtklib.h	/^} sbslcorr_t;$/;"	t	typeref:struct:__anon31
sbslongcorr	sbas.c	/^static int sbslongcorr(gtime_t time, int sat, const sbssat_t *sbssat,$/;"	f	file:
sbsmsg	rtklib.h	/^    sbsmsg_t sbsmsg;    \/* SBAS message *\/$/;"	m	struct:__anon62
sbsmsg	rtklib.h	/^    sbsmsg_t sbsmsg[MAXSBSMSG]; \/* SBAS message buffer *\/$/;"	m	struct:__anon66
sbsmsg_t	rtklib.h	/^} sbsmsg_t;$/;"	t	typeref:struct:__anon28
sbsoutmsg	sbas.c	/^extern void sbsoutmsg(FILE *fp, sbsmsg_t *sbsmsg)$/;"	f
sbsreadmsg	sbas.c	/^extern int sbsreadmsg(const char *file, int sel, sbs_t *sbs)$/;"	f
sbsreadmsgt	sbas.c	/^extern int sbsreadmsgt(const char *file, int sel, gtime_t ts, gtime_t te,$/;"	f
sbss	postpos.c	/^static sbs_t sbss={0};          \/* sbas messages *\/$/;"	v	file:
sbssat	rtklib.h	/^    sbssat_t sbssat;    \/* SBAS satellite corrections *\/$/;"	m	struct:__anon43
sbssat_t	rtklib.h	/^} sbssat_t;$/;"	t	typeref:struct:__anon33
sbssatcorr	sbas.c	/^extern int sbssatcorr(gtime_t time, int sat, const nav_t *nav, double *rs,$/;"	f
sbssatp_t	rtklib.h	/^} sbssatp_t;$/;"	t	typeref:struct:__anon32
sbstropcorr	sbas.c	/^extern double sbstropcorr(gtime_t time, const double *pos, const double *azel,$/;"	f
sbsupdatecorr	sbas.c	/^extern int sbsupdatecorr(const sbsmsg_t *msg, nav_t *nav)$/;"	f
sbuf	rtklib.h	/^    unsigned char *sbuf[2]; \/* output buffers {sol1,sol2} *\/$/;"	m	struct:__anon66
scan_obstype	convrnx.c	/^static int scan_obstype(int format, const char *file, rnxopt_t *opt,$/;"	f	file:
scanobs	rtklib.h	/^    int scanobs;        \/* scan obs types *\/$/;"	m	struct:__anon58
sclkstab	rtklib.h	/^    double sclkstab;    \/* satellite clock stability (sec\/sec) *\/$/;"	m	struct:__anon55
screent	rtkcmn.c	/^extern int screent(gtime_t time, gtime_t ts, gtime_t te, double tint)$/;"	f
sdobs	rtkpos.c	/^static double sdobs(const obsd_t *obs, int i, int j, int f)$/;"	f	file:
search	lambda.c	/^static int search(int n, int m, const double *L, const double *D,$/;"	f	file:
searchigp	sbas.c	/^static void searchigp(gtime_t time, const double *pos, const sbsion_t *ion,$/;"	f	file:
searchopt	options.c	/^extern opt_t *searchopt(const char *name, const opt_t *opts)$/;"	f
searchpcv	rtkcmn.c	/^extern pcv_t *searchpcv(int sat, const char *type, gtime_t time,$/;"	f
searchprm	datum.c	/^static int searchprm(double lat, double lon)$/;"	f	file:
sec	rtklib.h	/^    double sec;         \/* fraction of second under 1 s *\/$/;"	m	struct:__anon8
sel_amb	ppp_ar.c	/^static int sel_amb(int *sat1, int *sat2, double *N, double *var, int n)$/;"	f	file:
seleph	ephemeris.c	/^static eph_t *seleph(gtime_t time, int sat, int iode, const nav_t *nav)$/;"	f	file:
selgeph	ephemeris.c	/^static geph_t *selgeph(gtime_t time, int sat, int iode, const nav_t *nav)$/;"	f	file:
selsat	rtkpos.c	/^static int selsat(const obsd_t *obs, double *azel, int nu, int nr,$/;"	f	file:
selseph	ephemeris.c	/^static seph_t *selseph(gtime_t time, int sat, const nav_t *nav)$/;"	f	file:
send_nb	stream.c	/^static int send_nb(socket_t sock, unsigned char *buff, int n)$/;"	f	file:
sep	rtklib.h	/^    char sep[64];       \/* field separator *\/$/;"	m	struct:__anon56
seph	rtklib.h	/^    seph_t *seph;       \/* SBAS ephemeris *\/$/;"	m	struct:__anon43
seph2clk	ephemeris.c	/^extern double seph2clk(gtime_t time, const seph_t *seph)$/;"	f
seph2pos	ephemeris.c	/^extern void seph2pos(gtime_t time, const seph_t *seph, double *rs, double *dts,$/;"	f
seph_t	rtklib.h	/^} seph_t;$/;"	t	typeref:struct:__anon20
septime	solution.c	/^static void septime(double t, double *t1, double *t2, double *t3)$/;"	f	file:
seqno	rtklib.h	/^    int seqno;          \/* sequence number for rtcm 2 or iods msm *\/$/;"	m	struct:__anon49
serial_t	stream.c	/^} serial_t;$/;"	t	typeref:struct:__anon67	file:
serialthread	stream.c	/^static DWORD WINAPI serialthread(void *arg)$/;"	f	file:
set38bits	rtcm3e.c	/^static void set38bits(unsigned char *buff, int pos, double value)$/;"	f	file:
setI1	rcv/septentrio.c	/^static void setI1(unsigned char *p, char           i) {*p=(unsigned char)i;}$/;"	f	file:
setI1	rcv/ublox.c	/^static void setI1(unsigned char *p, signed char    i) {*p=(unsigned char)i;}$/;"	f	file:
setI2	rcv/septentrio.c	/^static void setI2(unsigned char *p, short          i) {memcpy(p,&i,2);}$/;"	f	file:
setI2	rcv/ublox.c	/^static void setI2(unsigned char *p, short          i) {memcpy(p,&i,2);}$/;"	f	file:
setI4	rcv/septentrio.c	/^static void setI4(unsigned char *p, int            i) {memcpy(p,&i,4);}$/;"	f	file:
setI4	rcv/ublox.c	/^static void setI4(unsigned char *p, int            i) {memcpy(p,&i,4);}$/;"	f	file:
setR4	rcv/septentrio.c	/^static void setR4(unsigned char *p, float          r) {memcpy(p,&r,4);}$/;"	f	file:
setR4	rcv/ublox.c	/^static void setR4(unsigned char *p, float          r) {memcpy(p,&r,4);}$/;"	f	file:
setR8	rcv/septentrio.c	/^static void setR8(unsigned char *p, double         r) {memcpy(p,&r,8);}$/;"	f	file:
setR8	rcv/ublox.c	/^static void setR8(unsigned char *p, double         r) {memcpy(p,&r,8);}$/;"	f	file:
setU1	rcv/septentrio.c	/^static void setU1(unsigned char *p, unsigned char  u) {*p=u;}$/;"	f	file:
setU1	rcv/ublox.c	/^static void setU1(unsigned char *p, unsigned char  u) {*p=u;}$/;"	f	file:
setU2	rcv/septentrio.c	/^static void setU2(unsigned char *p, unsigned short u) {memcpy(p,&u,2);}$/;"	f	file:
setU2	rcv/ublox.c	/^static void setU2(unsigned char *p, unsigned short u) {memcpy(p,&u,2);}$/;"	f	file:
setU4	rcv/septentrio.c	/^static void setU4(unsigned char *p, unsigned int   u) {memcpy(p,&u,4);}$/;"	f	file:
setU4	rcv/ublox.c	/^static void setU4(unsigned char *p, unsigned int   u) {memcpy(p,&u,4);}$/;"	f	file:
set_index	rinex.c	/^static void set_index(double ver, int sys, const char *opt,$/;"	f	file:
set_obstype	convrnx.c	/^static void set_obstype(int format, rnxopt_t *opt)$/;"	f	file:
set_sysmask	rinex.c	/^static int set_sysmask(const char *opt)$/;"	f	file:
set_week	rcv/rt17.c	/^*\/static void set_week(raw_t *raw, int week, double receive_time)$/;"	f	file:
setapppos	convrnx.c	/^static void setapppos(strfile_t *str, rnxopt_t *opt)$/;"	f	file:
setbitg	rtcm3e.c	/^static void setbitg(unsigned char *buff, int pos, int len, int value)$/;"	f	file:
setbits	rtkcmn.c	/^extern void setbits(unsigned char *buff, int pos, int len, int data)$/;"	f
setbitu	rtkcmn.c	/^extern void setbitu(unsigned char *buff, int pos, int len, unsigned int data)$/;"	f
setcodepri	rtkcmn.c	/^extern void setcodepri(int sys, int freq, const char *pri)$/;"	f
setcs	rcv/septentrio.c	/^static void setcs(unsigned char *buff, int len)$/;"	f	file:
setcs	rcv/ublox.c	/^static void setcs(unsigned char *buff, int len)$/;"	f	file:
setopt_obstype	convrnx.c	/^static void setopt_obstype(const unsigned char *codes,$/;"	f	file:
setpcv	postpos.c	/^static void setpcv(gtime_t time, prcopt_t *popt, nav_t *nav, const pcvs_t *pcvs,$/;"	f	file:
setsock	stream.c	/^static int setsock(socket_t sock, char *msg)$/;"	f	file:
setstr	rinex.c	/^static void setstr(char *dst, const char *src, int n)$/;"	f	file:
setsysopts	options.c	/^extern void setsysopts(const prcopt_t *prcopt, const solopt_t *solopt,$/;"	f
settag	rcv/javad.c	/^static int settag(obsd_t *data, gtime_t time)$/;"	f	file:
settime	rtkcmn.c	/^extern void settime(gtime_t time) {}$/;"	f
settspan	rtkcmn.c	/^extern void settspan(gtime_t ts, gtime_t te) {}$/;"	f
shift	rinex.c	/^    double shift[MAXOBSTYPE];           \/* phase shift (cycle) *\/$/;"	m	struct:__anon6	file:
showmsg	rtkcmn.c	/^extern int showmsg(char *format,...) {return 0;}$/;"	f
showstat	convrnx.c	/^static int showstat(int sess, gtime_t ts, gtime_t te, int *n)$/;"	f	file:
sigind_t	rinex.c	/^} sigind_t;$/;"	t	typeref:struct:__anon6	file:
sigindex	rtcm3.c	/^static void sigindex(int sys, const unsigned char *code, const int *freq, int n,$/;"	f	file:
sigs	rtcm3.c	/^    unsigned char sigs[32];         \/* signals *\/$/;"	m	struct:__anon7	file:
sleepms	rtkcmn.c	/^extern void sleepms(int ms)$/;"	f
slip	rtklib.h	/^    unsigned char slip; \/* slip flag *\/$/;"	m	struct:__anon24
slip	rtklib.h	/^    unsigned char slip[NFREQ]; \/* cycle-slip flag *\/$/;"	m	struct:__anon59
slipc	rtklib.h	/^    unsigned int slipc[NFREQ]; \/* cycle-slip counter *\/$/;"	m	struct:__anon59
slipc	rtklib.h	/^    unsigned short slipc; \/* slip counter *\/$/;"	m	struct:__anon47
smooth	rtcm3.c	/^    unsigned char smooth;           \/* divergence free smoothing indicator *\/$/;"	m	struct:__anon7	file:
smoother	rtkcmn.c	/^extern int smoother(const double *xf, const double *Qf, const double *xb,$/;"	f
snr	rtklib.h	/^    unsigned char snr [NFREQ]; \/* signal strength (0.25 dBHz) *\/$/;"	m	struct:__anon59
snr	rtklib.h	/^    unsigned char snr;  \/* signal C\/N0 (0.25 dBHz) *\/$/;"	m	struct:__anon39
snr	rtklib.h	/^    unsigned char snr;  \/* signal strength (0.25 dBHz) *\/$/;"	m	struct:__anon47
snratio	rtcm3.c	/^static unsigned char snratio(double snr)$/;"	f	file:
snrmask	rtklib.h	/^    snrmask_t snrmask;  \/* SNR mask *\/$/;"	m	struct:__anon55
snrmask_	options.c	/^static char snrmask_[NFREQ][1024];$/;"	v	file:
snrmask_t	rtklib.h	/^} snrmask_t;$/;"	t	typeref:struct:__anon54
sock	stream.c	/^    socket_t sock;          \/* socket descriptor *\/$/;"	m	struct:__anon69	file:
socket_t	stream.c	93;"	d	file:
socket_t	stream.c	97;"	d	file:
socklen_t	stream.c	/^typedef int socklen_t;$/;"	t	file:
sol	rtklib.h	/^    sol_t  sol;         \/* RTK solution *\/$/;"	m	struct:__anon61
sol_t	rtklib.h	/^} sol_t;$/;"	t	typeref:struct:__anon45
solb	postpos.c	/^static sol_t *solb;             \/* backward solutions *\/$/;"	v	file:
solbuf	rtklib.h	/^    sol_t solbuf[MAXSOLBUF]; \/* solution buffer *\/$/;"	m	struct:__anon66
solbuf_t	rtklib.h	/^} solbuf_t;$/;"	t	typeref:struct:__anon46
solf	postpos.c	/^static sol_t *solf;             \/* forward solutions *\/$/;"	v	file:
solopt	rtklib.h	/^    solopt_t solopt[2]; \/* output solution options {sol1,sol2} *\/$/;"	m	struct:__anon66
solopt_	options.c	/^static solopt_t solopt_;$/;"	v	file:
solopt_default	rtkcmn.c	/^const solopt_t solopt_default={ \/* defaults solution output options *\/$/;"	v
solopt_t	rtklib.h	/^} solopt_t;$/;"	t	typeref:struct:__anon56
solq_nmea	solution.c	/^static const int solq_nmea[]={  \/* nmea quality flags to rtklib sol quality *\/$/;"	v	file:
solstat	rtklib.h	/^    char solstat[MAXSTRPATH]; \/* solution statistics file *\/$/;"	m	struct:__anon57
solstat_t	rtklib.h	/^} solstat_t;$/;"	t	typeref:struct:__anon47
solstatbuf_t	rtklib.h	/^} solstatbuf_t;$/;"	t	typeref:struct:__anon48
solstatic	rtklib.h	/^    int solstatic;      \/* solution of static mode (0:all,1:single) *\/$/;"	m	struct:__anon56
soltocov	solution.c	/^static void soltocov(const sol_t *sol, double *P)$/;"	f	file:
soltype	rtklib.h	/^    int soltype;        \/* solution type (0:forward,1:backward,2:combined) *\/$/;"	m	struct:__anon55
solve	rtkcmn.c	/^extern int solve(const char *tr, const double *A, const double *Y, int n,$/;"	f
sort_codes	convrnx.c	/^static void sort_codes(unsigned char *codes, unsigned char *types, int n)$/;"	f	file:
sort_solbuf	solution.c	/^static int sort_solbuf(solbuf_t *solbuf)$/;"	f	file:
sort_solstat	solution.c	/^static int sort_solstat(solstatbuf_t *statbuf)$/;"	f	file:
sortobs	rtkcmn.c	/^extern int sortobs(obs_t *obs)$/;"	f
speed	stream.c	/^    double speed;           \/* replay speed (time factor) *\/$/;"	m	struct:__anon68	file:
sqvar	solution.c	/^static double sqvar(double covar)$/;"	f	file:
ssat	rtklib.h	/^    ssat_t ssat[MAXSAT]; \/* satellite status *\/$/;"	m	struct:__anon61
ssat_t	rtklib.h	/^} ssat_t;$/;"	t	typeref:struct:__anon59
ssr	rtklib.h	/^    ssr_t ssr[MAXSAT];  \/* SSR corrections *\/$/;"	m	struct:__anon43
ssr	rtklib.h	/^    ssr_t ssr[MAXSAT];  \/* output of ssr corrections *\/$/;"	m	struct:__anon49
ssr_t	rtklib.h	/^} ssr_t;$/;"	t	typeref:struct:__anon38
ssrudint	rtcm3.c	/^static const double ssrudint[16]={$/;"	v	file:
ssrudint	rtcm3e.c	/^static const double ssrudint[16]={$/;"	v	file:
sstat	rtklib.h	/^    int sstat;          \/* solution statistics level (0:off,1:states,2:residuals) *\/$/;"	m	struct:__anon56
sta	rtklib.h	/^    sta_t  sta;         \/* station info *\/$/;"	m	struct:__anon50
sta	rtklib.h	/^    sta_t sta;          \/* station parameters *\/$/;"	m	struct:__anon49
sta	rtklib.h	/^    sta_t sta;          \/* station parameters *\/$/;"	m	struct:__anon62
sta_t	rtklib.h	/^} sta_t;$/;"	t	typeref:struct:__anon44
stah	rtklib.h	/^    int stah;           \/* station health *\/$/;"	m	struct:__anon49
staid	rtklib.h	/^    char staid [32];    \/* station id for rinex file name *\/$/;"	m	struct:__anon58
staid	rtklib.h	/^    int staid;          \/* station id *\/$/;"	m	struct:__anon49
stapos	rtklib.h	/^    char stapos [MAXSTRPATH]; \/* station positions file *\/$/;"	m	struct:__anon57
start	rtklib.h	/^    int start,end;      \/* start\/end index *\/$/;"	m	struct:__anon46
start	stream.c	/^    double start;           \/* start offset (s) *\/$/;"	m	struct:__anon68	file:
startfile	rcv/javad.c	/^static void startfile(raw_t *raw)$/;"	f	file:
stas	postpos.c	/^static sta_t stas[MAXRCV];      \/* station infomation *\/$/;"	v	file:
stasel	rtklib.h	/^    int stasel;         \/* station info selection (0:remote,1:local) *\/$/;"	m	struct:__anon64
stat	rtklib.h	/^    unsigned char stat; \/* signal tracking status *\/$/;"	m	struct:__anon39
stat	rtklib.h	/^    unsigned char stat; \/* solution status (SOLQ_???) *\/$/;"	m	struct:__anon45
state	rtklib.h	/^    int state;          \/* server state (0:stop,1:running) *\/$/;"	m	struct:__anon65
state	rtklib.h	/^    int state;          \/* server state (0:stop,1:running) *\/$/;"	m	struct:__anon66
state	rtklib.h	/^    int state;          \/* state (-1:error,0:close,1:open) *\/$/;"	m	struct:__anon63
state	stream.c	/^    int state,wp,rp;        \/* state,write\/read pointer *\/$/;"	m	struct:__anon67	file:
state	stream.c	/^    int state;              \/* state (0:close,1:download,2:complete,3:error) *\/$/;"	m	struct:__anon73	file:
state	stream.c	/^    int state;              \/* state (0:close,1:wait,2:connect) *\/$/;"	m	struct:__anon69	file:
state	stream.c	/^    int state;              \/* state (0:close,1:wait,2:connect) *\/$/;"	m	struct:__anon72	file:
statefile	stream.c	/^static int statefile(file_t *file)$/;"	f	file:
stateftp	stream.c	/^static int stateftp(ftp_t *ftp)$/;"	f	file:
statentrip	stream.c	/^static int statentrip(ntrip_t *ntrip)$/;"	f	file:
stateserial	stream.c	/^static int stateserial(serial_t *serial)$/;"	f	file:
statetcpcli	stream.c	/^static int statetcpcli(tcpcli_t *tcpcli)$/;"	f	file:
statetcpsvr	stream.c	/^static int statetcpsvr(tcpsvr_t *tcpsvr)$/;"	f	file:
statlevel	rtkpos.c	/^static int statlevel=0;          \/* rtk status output level (0:off) *\/$/;"	v	file:
std	rtklib.h	/^    double std[3];      \/* initial-state std [0]bias,[1]iono [2]trop *\/$/;"	m	struct:__anon55
std	rtklib.h	/^    float  std[MAXSAT][1]; \/* satellite clock std (s) *\/$/;"	m	struct:__anon19
std	rtklib.h	/^    float  std[MAXSAT][4]; \/* satellite position\/clock std (m|s) *\/$/;"	m	struct:__anon18
stec	rtklib.h	/^    stec_t *stec;       \/* stec grid data *\/$/;"	m	struct:__anon43
stec_t	rtklib.h	/^} stec_t;$/;"	t	typeref:struct:__anon25
stecd_t	rtklib.h	/^} stecd_t;$/;"	t	typeref:struct:__anon24
str	stream.c	/^    char str[NTRIP_MAXSTR]; \/* mountpoint string for server *\/$/;"	m	struct:__anon72	file:
str2enum	options.c	/^static int str2enum(const char *str, const char *comment, int *val)$/;"	f	file:
str2num	rtkcmn.c	/^extern double str2num(const char *s, int i, int n)$/;"	f
str2opt	options.c	/^extern int str2opt(opt_t *opt, const char *str)$/;"	f
str2time	rtkcmn.c	/^extern int str2time(const char *s, int i, int n, gtime_t *t)$/;"	f
strclose	stream.c	/^extern void strclose(stream_t *stream)$/;"	f
strconv	streamsvr.c	/^static void strconv(stream_t *str, strconv_t *conv, unsigned char *buff, int n)$/;"	f	file:
strconv_t	rtklib.h	/^} strconv_t;$/;"	t	typeref:struct:__anon64
strconvfree	streamsvr.c	/^extern void strconvfree(strconv_t *conv)$/;"	f
strconvnew	streamsvr.c	/^extern strconv_t *strconvnew(int itype, int otype, const char *msgs, int staid,$/;"	f
stream	rtklib.h	/^    stream_t stream[16]; \/* input\/output streams *\/$/;"	m	struct:__anon65
stream	rtklib.h	/^    stream_t stream[8]; \/* streams {rov,base,corr,sol1,sol2,logr,logb,logc} *\/$/;"	m	struct:__anon66
stream_t	rtklib.h	/^} stream_t;$/;"	t	typeref:struct:__anon63
strfile_t	convrnx.c	/^} strfile_t;$/;"	t	typeref:struct:__anon1	file:
strgettime	stream.c	/^extern gtime_t strgettime(stream_t *stream)$/;"	f
strinit	stream.c	/^extern void strinit(stream_t *stream)$/;"	f
strinitcom	stream.c	/^extern void strinitcom(void)$/;"	f
strlock	stream.c	/^extern void strlock  (stream_t *stream) {lock  (&stream->lock);}$/;"	f
stropen	stream.c	/^extern int stropen(stream_t *stream, int type, int mode, const char *path)$/;"	f
strread	stream.c	/^extern int strread(stream_t *stream, unsigned char *buff, int n)$/;"	f
strsendcmd	stream.c	/^extern void strsendcmd(stream_t *str, const char *cmd)$/;"	f
strsendnmea	stream.c	/^extern void strsendnmea(stream_t *stream, const double *pos)$/;"	f
strsetdir	stream.c	/^extern void strsetdir(const char *dir)$/;"	f
strsetopt	stream.c	/^extern void strsetopt(const int *opt)$/;"	f
strsetproxy	stream.c	/^extern void strsetproxy(const char *addr)$/;"	f
strsettimeout	stream.c	/^extern void strsettimeout(stream_t *stream, int toinact, int tirecon)$/;"	f
strstat	stream.c	/^extern int strstat(stream_t *stream, char *msg)$/;"	f
strsum	stream.c	/^extern void strsum(stream_t *stream, int *inb, int *inr, int *outb, int *outr)$/;"	f
strsvr_t	rtklib.h	/^} strsvr_t;$/;"	t	typeref:struct:__anon65
strsvrinit	streamsvr.c	/^extern void strsvrinit(strsvr_t *svr, int nout)$/;"	f
strsvrpeek	streamsvr.c	/^extern int strsvrpeek(strsvr_t *svr, unsigned char *buff, int nmax)$/;"	f
strsvrstart	streamsvr.c	/^extern int strsvrstart(strsvr_t *svr, int *opts, int *strs, char **paths,$/;"	f
strsvrstat	streamsvr.c	/^extern void strsvrstat(strsvr_t *svr, int *stat, int *byte, int *bps, char *msg)$/;"	f
strsvrstop	streamsvr.c	/^extern void strsvrstop(strsvr_t *svr, const char *cmd)$/;"	f
strsvrthread	streamsvr.c	/^static DWORD WINAPI strsvrthread(void *arg)$/;"	f	file:
strsync	stream.c	/^extern void strsync(stream_t *stream1, stream_t *stream2)$/;"	f
strunlock	stream.c	/^extern void strunlock(stream_t *stream) {unlock(&stream->lock);}$/;"	f
strwrite	stream.c	/^extern int strwrite(stream_t *stream, unsigned char *buff, int n)$/;"	f
subfrm	rtklib.h	/^    unsigned char subfrm[MAXSAT][380];  \/* subframe buffer *\/$/;"	m	struct:__anon62
sunmoonpos	rtkcmn.c	/^extern void sunmoonpos(gtime_t tutc, const double *erpv, double *rsun,$/;"	f
sunmoonpos_eci	rtkcmn.c	/^static void sunmoonpos_eci(gtime_t tut, double *rsun, double *rmoon)$/;"	f	file:
sva	rtklib.h	/^    int sva;            \/* SV accuracy (URA index) *\/$/;"	m	struct:__anon16
sva	rtklib.h	/^    int sva;            \/* SV accuracy (URA index) *\/$/;"	m	struct:__anon20
sva	rtklib.h	/^    int svh,sva,age;    \/* satellite health, accuracy, age of operation *\/$/;"	m	struct:__anon17
svconf	rtklib.h	/^    int svconf;         \/* as and sv config *\/$/;"	m	struct:__anon15
svh	rtklib.h	/^    int svh,sva,age;    \/* satellite health, accuracy, age of operation *\/$/;"	m	struct:__anon17
svh	rtklib.h	/^    int svh;            \/* SV health (0:ok) *\/$/;"	m	struct:__anon16
svh	rtklib.h	/^    int svh;            \/* SV health (0:ok) *\/$/;"	m	struct:__anon20
svh	rtklib.h	/^    int svh;            \/* sv health (0:ok) *\/$/;"	m	struct:__anon15
svr	stream.c	/^    tcp_t svr;              \/* tcp server control *\/$/;"	m	struct:__anon70	file:
svr	stream.c	/^    tcp_t svr;              \/* tcp server control *\/$/;"	m	struct:__anon71	file:
swapclose	stream.c	/^static void swapclose(file_t *file)$/;"	f	file:
swapfile	stream.c	/^static void swapfile(file_t *file, gtime_t time, char *msg)$/;"	f	file:
swapintv	stream.c	/^    double swapintv;        \/* swap interval (hr) (0: no swap) *\/$/;"	m	struct:__anon68	file:
swapsolstat	rtkpos.c	/^static void swapsolstat(void)$/;"	f	file:
sync_bnx	rcv/binex.c	/^static int sync_bnx(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_cres	rcv/crescent.c	/^static int sync_cres(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_javad	rcv/javad.c	/^static int sync_javad(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_lexr	rcv/rcvlex.c	/^static int sync_lexr(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_oem3	rcv/novatel.c	/^static int sync_oem3(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_oem4	rcv/novatel.c	/^static int sync_oem4(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_packet	rcv/rt17.c	/^static int sync_packet(raw_t *raw, unsigned char data)$/;"	f	file:
sync_sbf	rcv/septentrio.c	/^static int sync_sbf(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_ss2	rcv/ss2.c	/^static int sync_ss2(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_stq	rcv/skytraq.c	/^static int sync_stq(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_ubx	rcv/ublox.c	/^static int sync_ubx(unsigned char *buff, unsigned char data)$/;"	f	file:
syncfile	stream.c	/^static void syncfile(file_t *file1, file_t *file2)$/;"	f	file:
syncsol	rtklib.h	/^    int  syncsol;       \/* solution sync mode (0:off,1:on) *\/$/;"	m	struct:__anon55
sys	rtklib.h	/^    int    sys;         \/* navigation system *\/$/;"	m	struct:__anon50
sys	rtklib.h	/^    unsigned char sys;  \/* navigation system *\/$/;"	m	struct:__anon59
syscodes	rinex.c	/^static const char syscodes[]="GREJSC";  \/* satellite system codes *\/$/;"	v	file:
sysopts	options.c	/^opt_t sysopts[]={$/;"	v
sysopts2buff	options.c	/^static void sysopts2buff(void)$/;"	f	file:
t0	rtklib.h	/^    gtime_t t0;         \/* correction time *\/$/;"	m	struct:__anon31
t0	rtklib.h	/^    gtime_t t0;         \/* correction time *\/$/;"	m	struct:__anon34
t0	rtklib.h	/^    gtime_t t0;         \/* correction time *\/$/;"	m	struct:__anon37
t0	rtklib.h	/^    gtime_t t0;         \/* epoch time (GPST) *\/$/;"	m	struct:__anon42
t0	rtklib.h	/^    gtime_t t0;         \/* reference epoch time (GPST) *\/$/;"	m	struct:__anon20
t0	rtklib.h	/^    gtime_t t0;         \/* time of applicability (TOF) *\/$/;"	m	struct:__anon30
t0	rtklib.h	/^    gtime_t t0[5];      \/* epoch time (GPST) {eph,clk,hrclk,ura,bias} *\/$/;"	m	struct:__anon38
tact	rtklib.h	/^    unsigned int tick,tact; \/* tick\/active tick *\/$/;"	m	struct:__anon63
tact	stream.c	/^    unsigned int tact;      \/* data active tick *\/$/;"	m	struct:__anon69	file:
taun	rtklib.h	/^    double taun,gamn;   \/* SV clock bias (s)\/relative freq bias *\/$/;"	m	struct:__anon17
tbase	rtklib.h	/^    int tbase;          \/* time base (0:gpst,1:utc(usno),2:glonass,3:utc(su) *\/$/;"	m	struct:__anon62
tbl_CRC16	rtkcmn.c	/^static const unsigned short tbl_CRC16[]={$/;"	v	file:
tbl_CRC24Q	rtkcmn.c	/^static const unsigned int tbl_CRC24Q[]={$/;"	v	file:
tcon	stream.c	/^    int tcon;               \/* reconnect time (ms) (-1:never,0:now) *\/$/;"	m	struct:__anon69	file:
tcp	stream.c	/^    tcpcli_t *tcp;          \/* tcp client *\/$/;"	m	struct:__anon72	file:
tcp_t	stream.c	/^} tcp_t;$/;"	t	typeref:struct:__anon69	file:
tcpcli_t	stream.c	/^} tcpcli_t;$/;"	t	typeref:struct:__anon71	file:
tcpsvr_t	stream.c	/^} tcpsvr_t;$/;"	t	typeref:struct:__anon70	file:
tdis	stream.c	/^    unsigned int tdis;      \/* disconnect tick *\/$/;"	m	struct:__anon69	file:
te	rtklib.h	/^    gtime_t ts,te;      \/* time start\/end *\/$/;"	m	struct:__anon58
te	rtklib.h	/^    gtime_t ts,te;      \/* valid time start and end *\/$/;"	m	struct:__anon13
tec	rtklib.h	/^    tec_t *tec;         \/* tec grid data *\/$/;"	m	struct:__anon43
tec_t	rtklib.h	/^} tec_t;$/;"	t	typeref:struct:__anon23
tempdir	rtklib.h	/^    char tempdir[MAXSTRPATH]; \/* ftp\/http temporaly directory *\/$/;"	m	struct:__anon57
tend	rtklib.h	/^    gtime_t tend;       \/* last obs time *\/$/;"	m	struct:__anon58
test_file	download.c	/^static int test_file(const char *local)$/;"	f	file:
test_glostr	rcvraw.c	/^extern int test_glostr(const unsigned char *buff)$/;"	f
test_list	download.c	/^static int test_list(const path_t *path)$/;"	f	file:
test_local	download.c	/^static int test_local(gtime_t ts, gtime_t te, double ti, const char *path,$/;"	f	file:
test_locals	download.c	/^static int test_locals(gtime_t ts, gtime_t te, double ti, const url_t *url,$/;"	f	file:
test_staid	rtcm3.c	/^static int test_staid(rtcm_t *rtcm, int staid)$/;"	f	file:
test_sys	rtkpos.c	/^static int test_sys(int sys, int m)$/;"	f	file:
testeclipse	ppp.c	/^static void testeclipse(const obsd_t *obs, int n, const nav_t *nav, double *rs)$/;"	f	file:
testsnr	rtkcmn.c	/^extern int testsnr(int base, int freq, double el, double snr,$/;"	f
tgd	rtklib.h	/^    double tgd;         \/* TGD *\/$/;"	m	struct:__anon41
tgd	rtklib.h	/^    double tgd[4];      \/* group delay parameters *\/$/;"	m	struct:__anon16
thread	rtklib.h	/^    thread_t thread;    \/* server thread *\/$/;"	m	struct:__anon65
thread	rtklib.h	/^    thread_t thread;    \/* server thread *\/$/;"	m	struct:__anon66
thread	stream.c	/^    HANDLE thread;          \/* write thread *\/$/;"	m	struct:__anon67	file:
thread	stream.c	/^    thread_t thread;        \/* download thread *\/$/;"	m	struct:__anon73	file:
thread_t	rtklib.h	458;"	d
thread_t	rtklib.h	465;"	d
thresar	rtklib.h	/^    double thresar[4];  \/* AR validation threshold *\/$/;"	m	struct:__anon55
thresslip	rtklib.h	/^    double thresslip;   \/* slip threshold of geometry-free phase (m) *\/$/;"	m	struct:__anon55
tick	rtklib.h	/^    unsigned int tick,tact; \/* tick\/active tick *\/$/;"	m	struct:__anon63
tick	rtklib.h	/^    unsigned int tick;  \/* start tick *\/$/;"	m	struct:__anon65
tick	rtklib.h	/^    unsigned int tick;  \/* start tick *\/$/;"	m	struct:__anon66
tick	rtklib.h	/^    unsigned int tick[32]; \/* cycle tick of output message *\/$/;"	m	struct:__anon64
tick	stream.c	/^    unsigned int tick;      \/* start tick *\/$/;"	m	struct:__anon68	file:
tick_f	stream.c	/^    unsigned int tick_f;    \/* start tick in file *\/$/;"	m	struct:__anon68	file:
tick_master	stream.c	/^static unsigned int tick_master=0; \/* time tick master for replay *\/$/;"	v	file:
tick_trace	rtkcmn.c	/^static unsigned int tick_trace=0; \/* tick time at traceopen (ms) *\/$/;"	v	file:
tickget	rtkcmn.c	/^extern unsigned int tickget(void)$/;"	f
ticonnect	stream.c	/^static int ticonnect=10000; \/* interval to re-connect (ms) *\/$/;"	v	file:
tide_oload	ppp.c	/^static void tide_oload(gtime_t tut, const double *odisp, double *denu)$/;"	f	file:
tide_pl	ppp.c	/^static void tide_pl(const double *eu, const double *rp, double GMp,$/;"	f	file:
tide_pole	ppp.c	/^static void tide_pole(gtime_t tut, const double *pos, const double *erpv,$/;"	f	file:
tide_solid	ppp.c	/^static void tide_solid(const double *rsun, const double *rmoon,$/;"	f	file:
tidecorr	rtklib.h	/^    int tidecorr;       \/* earth tide correction (0:off,1:solid,2:solid+otl+pole) *\/$/;"	m	struct:__anon55
tidedisp	ppp.c	/^extern void tidedisp(gtime_t tutc, const double *rr, int opt, const erp_t *erp,$/;"	f
time	convrnx.c	/^    gtime_t time;               \/* current time *\/$/;"	m	struct:__anon1	file:
time	rtklib.h	/^    gtime_t time;       \/* current solution time *\/$/;"	m	struct:__anon46
time	rtklib.h	/^    gtime_t time;       \/* epoch time (GPST) *\/$/;"	m	struct:__anon23
time	rtklib.h	/^    gtime_t time;       \/* message time *\/$/;"	m	struct:__anon49
time	rtklib.h	/^    gtime_t time;       \/* message time *\/$/;"	m	struct:__anon50
time	rtklib.h	/^    gtime_t time;       \/* message time *\/$/;"	m	struct:__anon62
time	rtklib.h	/^    gtime_t time;       \/* receiver sampling time (GPST) *\/$/;"	m	struct:__anon9
time	rtklib.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon18
time	rtklib.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon19
time	rtklib.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon24
time	rtklib.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon26
time	rtklib.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon45
time	rtklib.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon47
time	rtklib.h	/^    time_t time;        \/* time (s) expressed by standard time_t *\/$/;"	m	struct:__anon8
time	stream.c	/^    gtime_t time;           \/* start time *\/$/;"	m	struct:__anon68	file:
time2bdt	rtkcmn.c	/^extern double time2bdt(gtime_t t, int *week)$/;"	f
time2doy	rtkcmn.c	/^extern double time2doy(gtime_t t)$/;"	f
time2epoch	rtkcmn.c	/^extern void time2epoch(gtime_t t, double *ep)$/;"	f
time2gpst	rtkcmn.c	/^extern double time2gpst(gtime_t t, int *week)$/;"	f
time2gst	rtkcmn.c	/^extern double time2gst(gtime_t t, int *week)$/;"	f
time2sec	rtkcmn.c	/^static double time2sec(gtime_t time, gtime_t *day)$/;"	f	file:
time2str	rtkcmn.c	/^extern void time2str(gtime_t t, char *s, int n)$/;"	f
time_s	rtcm3.c	/^    unsigned char time_s;           \/* cumulative session transmitting time *\/$/;"	m	struct:__anon7	file:
time_s	rtklib.h	/^    gtime_t time_s;     \/* message start time *\/$/;"	m	struct:__anon49
time_stat	rtkpos.c	/^static gtime_t time_stat={0};    \/* rtk status file time *\/$/;"	v	file:
time_str	rtkcmn.c	/^extern char *time_str(gtime_t t, int n)$/;"	f
time_trace	rtkcmn.c	/^static gtime_t time_trace={0};  \/* time at traceopen *\/$/;"	v	file:
timeadd	rtkcmn.c	/^extern gtime_t timeadd(gtime_t t, double sec)$/;"	f
timediff	rtkcmn.c	/^extern double timediff(gtime_t t1, gtime_t t2)$/;"	f
timef	rtklib.h	/^    int timef;          \/* time format (0:sssss.s,1:yyyy\/mm\/dd hh:mm:ss.s) *\/$/;"	m	struct:__anon56
timeget	rtkcmn.c	/^extern gtime_t timeget(void)$/;"	f
timeoffset_	rtkcmn.c	/^static double timeoffset_=0.0;        \/* time offset (s) *\/$/;"	v	file:
times	rtklib.h	/^    int times;          \/* time system (TIMES_???) *\/$/;"	m	struct:__anon56
timeset	rtkcmn.c	/^extern void timeset(gtime_t t)$/;"	f
timestr_rnx	rinex.c	/^static void timestr_rnx(char *str)$/;"	f	file:
timetag	stream.c	/^    int timetag;            \/* time tag flag (0:off,1:on) *\/$/;"	m	struct:__anon68	file:
timeu	rtklib.h	/^    int timeu;          \/* time digits under decimal point *\/$/;"	m	struct:__anon56
tint	rtklib.h	/^    double tint;        \/* time interval (s) *\/$/;"	m	struct:__anon51
tint	rtklib.h	/^    double tint;        \/* time interval (s) *\/$/;"	m	struct:__anon58
tint	rtklib.h	/^    double tint[32];    \/* output message intervals (s) *\/$/;"	m	struct:__anon64
tint_s	rtcm3.c	/^    unsigned char tint_s;           \/* soothing interval *\/$/;"	m	struct:__anon7	file:
tirate	stream.c	/^static int tirate   =1000;  \/* avraging time for data rate (ms) *\/$/;"	v	file:
tirecon	stream.c	/^    int tirecon;            \/* reconnect interval (ms) (0:no reconnect) *\/$/;"	m	struct:__anon71	file:
tlat	rtklib.h	/^    int tlat;           \/* system latency (s) *\/$/;"	m	struct:__anon33
tle_name_read	tle.c	/^extern int tle_name_read(const char *file, tle_t *tle)$/;"	f
tle_pos	tle.c	/^extern int tle_pos(gtime_t time, const char *name, const char *satno,$/;"	f
tle_read	tle.c	/^extern int tle_read(const char *file, tle_t *tle)$/;"	f
tle_t	rtklib.h	/^} tle_t;$/;"	t	typeref:struct:__anon22
tled_t	rtklib.h	/^} tled_t;$/;"	t	typeref:struct:__anon21
tnext	stream.c	/^    gtime_t tnext;          \/* next retry time (gpst) *\/$/;"	m	struct:__anon73	file:
to_code1_glo	rtcm3e.c	/^static int to_code1_glo(unsigned char code)$/;"	f	file:
to_code1_gps	rtcm3e.c	/^static int to_code1_gps(unsigned char code)$/;"	f	file:
to_code2_glo	rtcm3e.c	/^static int to_code2_glo(unsigned char code)$/;"	f	file:
to_code2_gps	rtcm3e.c	/^static int to_code2_gps(unsigned char code)$/;"	f	file:
to_lock	rtcm3e.c	/^static int to_lock(int lock)$/;"	f	file:
to_msm_lock	rtcm3e.c	/^static int to_msm_lock(double lock)$/;"	f	file:
to_msm_lock_ex	rtcm3e.c	/^static int to_msm_lock_ex(double lock)$/;"	f	file:
to_satid	rtcm3e.c	/^static int to_satid(int sys, int sat)$/;"	f	file:
to_sigid	rtcm3e.c	/^static int to_sigid(int sys, unsigned char code, int *freq)$/;"	f	file:
toa	rtklib.h	/^    gtime_t toa;        \/* Toa *\/$/;"	m	struct:__anon15
toas	rtklib.h	/^    double toas;        \/* Toa (s) in week *\/$/;"	m	struct:__anon15
tobs	rtklib.h	/^    char   tobs[6][MAXOBSTYPE][4]; \/* rinex obs types *\/$/;"	m	struct:__anon50
tobs	rtklib.h	/^    char tobs[6][MAXOBSTYPE][4]; \/* obs types {GPS,GLO,GAL,QZS,SBS,CMP} *\/$/;"	m	struct:__anon58
tobs	rtklib.h	/^    gtime_t tobs[MAXSAT][NFREQ+NEXOBS]; \/* observation data time *\/$/;"	m	struct:__anon62
toc	rtklib.h	/^    gtime_t toe,toc,ttr; \/* Toe,Toc,T_trans *\/$/;"	m	struct:__anon16
tod	rtklib.h	/^    int tod;            \/* time of day (ms) *\/$/;"	m	struct:__anon62
toe	rtklib.h	/^    gtime_t toe,toc,ttr; \/* Toe,Toc,T_trans *\/$/;"	m	struct:__anon16
toe	rtklib.h	/^    gtime_t toe;        \/* epoch of epherides (gpst) *\/$/;"	m	struct:__anon17
toe	rtklib.h	/^    gtime_t toe;        \/* epoch time (GPST) *\/$/;"	m	struct:__anon41
toes	rtklib.h	/^    double toes;        \/* Toe (s) in week *\/$/;"	m	struct:__anon16
tof	rtklib.h	/^    gtime_t tof;        \/* message frame time (GPST) *\/$/;"	m	struct:__anon41
tof	rtklib.h	/^    gtime_t tof;        \/* message frame time (gpst) *\/$/;"	m	struct:__anon17
tof	rtklib.h	/^    gtime_t tof;        \/* time of message frame (GPST) *\/$/;"	m	struct:__anon20
tofreq	rcv/javad.c	/^static int tofreq(char sig, int sys, int *type)$/;"	f	file:
toinact	stream.c	/^    int toinact;            \/* inactive timeout (ms) (0:no timeout) *\/$/;"	m	struct:__anon71	file:
toinact	stream.c	/^static int toinact  =10000; \/* inactive timeout (ms) *\/$/;"	v	file:
tokyo2jgd	datum.c	/^extern int tokyo2jgd(double *pos)$/;"	f
tonum	solution.c	/^static int tonum(char *buff, const char *sep, double *v)$/;"	f	file:
topts	stream.c	/^    int topts[4];           \/* time options {poff,tint,toff,tretry} (s) *\/$/;"	m	struct:__anon73	file:
tow	rtklib.h	/^    int week,tow;       \/* receiption time *\/$/;"	m	struct:__anon28
tprm_t	datum.c	/^} tprm_t;$/;"	t	typeref:struct:__anon2	file:
trace	rtkcmn.c	/^extern void trace   (int level, const char *format, ...) {}$/;"	f
trace	rtkcmn.c	/^extern void trace(int level, const char *format, ...)$/;"	f
trace	rtklib.h	/^    char trace  [MAXSTRPATH]; \/* debug trace file *\/$/;"	m	struct:__anon57
trace	rtklib.h	/^    int trace;          \/* debug trace level (0:off,1-5:debug) *\/$/;"	m	struct:__anon56
traceb	rtkcmn.c	/^extern void traceb  (int level, const unsigned char *p, int n) {}$/;"	f
traceb	rtkcmn.c	/^extern void traceb(int level, const unsigned char *p, int n)$/;"	f
traceclose	rtkcmn.c	/^extern void traceclose(void) {}$/;"	f
traceclose	rtkcmn.c	/^extern void traceclose(void)$/;"	f
tracegnav	rtkcmn.c	/^extern void tracegnav(int level, const nav_t *nav) {}$/;"	f
tracegnav	rtkcmn.c	/^extern void tracegnav(int level, const nav_t *nav)$/;"	f
tracehnav	rtkcmn.c	/^extern void tracehnav(int level, const nav_t *nav) {}$/;"	f
tracehnav	rtkcmn.c	/^extern void tracehnav(int level, const nav_t *nav)$/;"	f
tracelevel	rtkcmn.c	/^extern void tracelevel(int level) {}$/;"	f
tracelevel	rtkcmn.c	/^extern void tracelevel(int level)$/;"	f
tracemat	rtkcmn.c	/^extern void tracemat(int level, const double *A, int n, int m, int p, int q) {}$/;"	f
tracemat	rtkcmn.c	/^extern void tracemat(int level, const double *A, int n, int m, int p, int q)$/;"	f
tracenav	rtkcmn.c	/^extern void tracenav(int level, const nav_t *nav) {}$/;"	f
tracenav	rtkcmn.c	/^extern void tracenav(int level, const nav_t *nav)$/;"	f
traceobs	rtkcmn.c	/^extern void traceobs(int level, const obsd_t *obs, int n) {}$/;"	f
traceobs	rtkcmn.c	/^extern void traceobs(int level, const obsd_t *obs, int n)$/;"	f
traceopen	rtkcmn.c	/^extern void traceopen(const char *file) {}$/;"	f
traceopen	rtkcmn.c	/^extern void traceopen(const char *file)$/;"	f
tracepclk	rtkcmn.c	/^extern void tracepclk(int level, const nav_t *nav) {}$/;"	f
tracepclk	rtkcmn.c	/^extern void tracepclk(int level, const nav_t *nav)$/;"	f
tracepeph	rtkcmn.c	/^extern void tracepeph(int level, const nav_t *nav) {}$/;"	f
tracepeph	rtkcmn.c	/^extern void tracepeph(int level, const nav_t *nav)$/;"	f
traceswap	rtkcmn.c	/^static void traceswap(void)$/;"	f	file:
tracet	rtkcmn.c	/^extern void tracet  (int level, const char *format, ...) {}$/;"	f
tracet	rtkcmn.c	/^extern void tracet(int level, const char *format, ...)$/;"	f
tropcorr	pntpos.c	/^extern int tropcorr(gtime_t time, const nav_t *nav, const double *pos,$/;"	f
tropmapf	rtkcmn.c	/^extern double tropmapf(gtime_t time, const double pos[], const double azel[],$/;"	f
tropmodel	rtkcmn.c	/^extern double tropmodel(gtime_t time, const double *pos, const double *azel,$/;"	f
tropopt	rtklib.h	/^    int tropopt;        \/* troposphere option (TROPOPT_???) *\/$/;"	m	struct:__anon55
trtcm	rtklib.h	/^    gtime_t trtcm;      \/* approx log start time for rtcm *\/$/;"	m	struct:__anon58
ts	rtklib.h	/^    gtime_t ts,te;      \/* time start\/end *\/$/;"	m	struct:__anon58
ts	rtklib.h	/^    gtime_t ts,te;      \/* valid time start and end *\/$/;"	m	struct:__anon13
tspan	rtklib.h	/^    double tspan;       \/* valid time span (s) *\/$/;"	m	struct:__anon42
tstart	rtklib.h	/^    gtime_t tstart;     \/* first obs time *\/$/;"	m	struct:__anon58
tsys	rtklib.h	/^    int    tsys;        \/* time system *\/$/;"	m	struct:__anon50
tt	rtklib.h	/^    double tt;          \/* time difference between current and previous (s) *\/$/;"	m	struct:__anon61
ttr	rtklib.h	/^    gtime_t toe,toc,ttr; \/* Toe,Toc,T_trans *\/$/;"	m	struct:__anon16
ttt	rtklib.h	/^    unsigned int ttt;   \/* tracking time (ms) *\/$/;"	m	struct:__anon39
tunit	rtklib.h	/^    double tunit;       \/* time unit for multiple-session (s) *\/$/;"	m	struct:__anon58
type	rinex.c	/^    unsigned char type[MAXOBSTYPE];     \/* type (0:C,1:L,2:D,3:S) *\/$/;"	m	struct:__anon6	file:
type	rtklib.h	/^    char   type;        \/* rinex file type ('O','N',...) *\/$/;"	m	struct:__anon50
type	rtklib.h	/^    char type[32];      \/* data type *\/$/;"	m	struct:__anon51
type	rtklib.h	/^    char type[MAXANT];  \/* antenna type *\/$/;"	m	struct:__anon13
type	rtklib.h	/^    int type;           \/* message type *\/$/;"	m	struct:__anon39
type	rtklib.h	/^    int type;           \/* type (STR_???) *\/$/;"	m	struct:__anon63
type	rtklib.h	/^    unsigned char type; \/* type (0:xyz-ecef,1:enu-baseline) *\/$/;"	m	struct:__anon45
type	stream.c	/^    int type;               \/* type (0:server,1:client) *\/$/;"	m	struct:__anon72	file:
u2	rcv/rt17.c	/^typedef union {unsigned short u2; unsigned char c[2];} ENDIAN_TEST; $/;"	m	union:__anon5	file:
ubx_sys	rcv/ublox.c	/^static int ubx_sys(int ind)$/;"	f	file:
udbias	rtkpos.c	/^static void udbias(rtk_t *rtk, double tt, const obsd_t *obs, const int *sat,$/;"	f	file:
udbias_ppp	ppp.c	/^static void udbias_ppp(rtk_t *rtk, const obsd_t *obs, int n, const nav_t *nav)$/;"	f	file:
udclk_ppp	ppp.c	/^static void udclk_ppp(rtk_t *rtk)$/;"	f	file:
udi	rtklib.h	/^    double udi[5];      \/* SSR update interval (s) *\/$/;"	m	struct:__anon38
udion	rtkpos.c	/^static void udion(rtk_t *rtk, double tt, double bl, const int *sat, int ns)$/;"	f	file:
udpos	rtkpos.c	/^static void udpos(rtk_t *rtk, double tt)$/;"	f	file:
udpos_ppp	ppp.c	/^static void udpos_ppp(rtk_t *rtk)$/;"	f	file:
udrcvbias	rtkpos.c	/^static void udrcvbias(rtk_t *rtk, double tt)$/;"	f	file:
udre	rtklib.h	/^    double udre;        \/* UDRE *\/$/;"	m	struct:__anon37
udre	rtklib.h	/^    short udre;         \/* UDRE+1 *\/$/;"	m	struct:__anon30
udstate	rtkpos.c	/^static void udstate(rtk_t *rtk, const obsd_t *obs, const int *sat,$/;"	f	file:
udstate_ppp	ppp.c	/^static void udstate_ppp(rtk_t *rtk, const obsd_t *obs, int n, const nav_t *nav)$/;"	f	file:
udtrop	rtkpos.c	/^static void udtrop(rtk_t *rtk, double tt, double bl)$/;"	f	file:
udtrop_ppp	ppp.c	/^static void udtrop_ppp(rtk_t *rtk)$/;"	f	file:
uncompress	rtkcmn.c	/^extern int uncompress(const char *file, char *uncfile)$/;"	f
uniqeph	rtkcmn.c	/^static void uniqeph(nav_t *nav)$/;"	f	file:
uniqgeph	rtkcmn.c	/^static void uniqgeph(nav_t *nav)$/;"	f	file:
uniqnav	rtkcmn.c	/^extern void uniqnav(nav_t *nav)$/;"	f
uniqseph	rtkcmn.c	/^static void uniqseph(nav_t *nav)$/;"	f	file:
unlock	rtklib.h	462;"	d
unlock	rtklib.h	469;"	d
unwrap_genout	rcv/rt17.c	/^static void unwrap_genout(raw_t *raw)$/;"	f	file:
unwrap_rawdata	rcv/rt17.c	/^static void unwrap_rawdata(raw_t *raw, unsigned int *rif)$/;"	f	file:
update	rtklib.h	/^    unsigned char update; \/* update flag (0:no update,1:update) *\/$/;"	m	struct:__anon38
updatefcn	rtksvr.c	/^static void updatefcn(rtksvr_t *svr)$/;"	f	file:
updatenav	rtksvr.c	/^static void updatenav(nav_t *nav)$/;"	f	file:
updatesvr	rtksvr.c	/^static void updatesvr(rtksvr_t *svr, int ret, obs_t *obs, nav_t *nav, int sat,$/;"	f	file:
updatetcpsvr	stream.c	/^static void updatetcpsvr(tcpsvr_t *tcpsvr, char *msg)$/;"	f	file:
ura	rtklib.h	/^    int ura;            \/* URA indicator *\/$/;"	m	struct:__anon38
ura	rtklib.h	/^    unsigned char ura;  \/* URA index *\/$/;"	m	struct:__anon41
ura_eph	rcv/binex.c	/^static const double ura_eph[]={$/;"	v	file:
ura_eph	rcv/nvs.c	/^static const double ura_eph[]={$/;"	v	file:
ura_eph	rinex.c	/^static const double ura_eph[]={         \/* ura values (ref [3] 20.3.3.3.1.1) *\/$/;"	v	file:
uraindex	rcv/binex.c	/^static int uraindex(double value)$/;"	f	file:
uraindex	rcv/novatel.c	/^static int uraindex(double value)$/;"	f	file:
uraindex	rcv/nvs.c	/^static int uraindex(double value)$/;"	f	file:
uraindex	rinex.c	/^static int uraindex(double value)$/;"	f	file:
uravalue	rinex.c	/^static double uravalue(int sva)$/;"	f	file:
url	stream.c	/^    char url[256];          \/* url for proxy *\/$/;"	m	struct:__anon72	file:
url_t	rtklib.h	/^} url_t;$/;"	t	typeref:struct:__anon51
user	stream.c	/^    char user[256];         \/* user *\/$/;"	m	struct:__anon72	file:
user	stream.c	/^    char user[256];         \/* user for ftp *\/$/;"	m	struct:__anon73	file:
ut1_utc	rtklib.h	/^    double ut1_utc;     \/* ut1-utc (s) *\/$/;"	m	struct:__anon11
utc2gmst	rtkcmn.c	/^extern double utc2gmst(gtime_t t, double ut1_utc)$/;"	f
utc2gpst	rtkcmn.c	/^extern gtime_t utc2gpst(gtime_t t)$/;"	f
utc_cmp	rtklib.h	/^    double utc_cmp[4];  \/* BeiDou UTC parameters *\/$/;"	m	struct:__anon43
utc_gal	rtklib.h	/^    double utc_gal[4];  \/* Galileo UTC GPS time parameters *\/$/;"	m	struct:__anon43
utc_glo	rtklib.h	/^    double utc_glo[4];  \/* GLONASS UTC GPS time parameters *\/$/;"	m	struct:__anon43
utc_gps	rtklib.h	/^    double utc_gps[4];  \/* GPS delta-UTC parameters {A0,A1,T,W} *\/$/;"	m	struct:__anon43
utc_qzs	rtklib.h	/^    double utc_qzs[4];  \/* QZS UTC GPS time parameters *\/$/;"	m	struct:__anon43
utc_sbs	rtklib.h	/^    double utc_sbs[4];  \/* SBAS UTC parameters *\/$/;"	m	struct:__anon43
valcomb	postpos.c	/^static int valcomb(const sol_t *solf, const sol_t *solb)$/;"	f	file:
validobs	rtkpos.c	/^static int validobs(int i, int j, int f, int nf, double *y)$/;"	f	file:
valpos	rtkpos.c	/^static int valpos(rtk_t *rtk, const double *v, const double *R, const int *vflg,$/;"	f	file:
valsol	pntpos.c	/^static int valsol(const double *azel, const int *vsat, int n,$/;"	f	file:
var	rtklib.h	/^    double var[NFREQ][19]; \/* phase center variation (m) *\/$/;"	m	struct:__anon13
var	rtklib.h	/^    void *var;          \/* pointer to option variable *\/$/;"	m	struct:__anon52
var_LC	ppp_ar.c	/^static double var_LC(int i, int j, int k, double sig)$/;"	f	file:
var_uraeph	ephemeris.c	/^static double var_uraeph(int ura)$/;"	f	file:
var_urassr	ephemeris.c	/^static double var_urassr(int ura)$/;"	f	file:
vareph	qzslex.c	/^static double vareph(int ura)$/;"	f	file:
varerr	pntpos.c	/^static double varerr(const prcopt_t *opt, double el, int sys)$/;"	f	file:
varerr	ppp.c	/^static double varerr(int sat, int sys, double el, int type, const prcopt_t *opt)$/;"	f	file:
varerr	rtkpos.c	/^static double varerr(int sat, int sys, double el, double bl, double dt, int f,$/;"	f	file:
varfcorr	sbas.c	/^static double varfcorr(int udre)$/;"	f	file:
varicorr	sbas.c	/^static double varicorr(int give)$/;"	f	file:
vco	rtklib.h	/^    float  vco[MAXSAT][3]; \/* satellite velocity covariance (m^2) *\/$/;"	m	struct:__anon18
vel	rtklib.h	/^    double vel[3];      \/* satellite velocity (ecef) (m\/s) *\/$/;"	m	struct:__anon17
vel	rtklib.h	/^    double vel[3];      \/* satellite velocity (m\/s) (ecef) *\/$/;"	m	struct:__anon20
vel	rtklib.h	/^    double vel[3];      \/* satellite velocity (m\/s) *\/$/;"	m	struct:__anon41
vel	rtklib.h	/^    double vel[MAXSAT][4]; \/* satellite velocity\/clk-rate (m\/s|s\/s) *\/$/;"	m	struct:__anon18
ver	rtklib.h	/^    double ver;         \/* rinex version *\/$/;"	m	struct:__anon50
vs	rtklib.h	/^    unsigned char vs;   \/* valid satellite flag single *\/$/;"	m	struct:__anon59
vsat	rtklib.h	/^    unsigned char vsat[NFREQ]; \/* valid satellite flag *\/$/;"	m	struct:__anon59
vst	rtklib.h	/^    float  vst[MAXSAT][4]; \/* satellite velocity\/clk-rate std (m\/s|s\/s) *\/$/;"	m	struct:__anon18
waitntrip	stream.c	/^static int waitntrip(ntrip_t *ntrip, char *msg)$/;"	f	file:
waittcpcli	stream.c	/^static int waittcpcli(tcpcli_t *tcpcli, char *msg)$/;"	f	file:
waittcpsvr	stream.c	/^static int waittcpsvr(tcpsvr_t *tcpsvr, char *msg)$/;"	f	file:
week	rtklib.h	/^    int week,tow;       \/* receiption time *\/$/;"	m	struct:__anon28
week	rtklib.h	/^    int week;           \/* GPS\/QZS: gps week, GAL: galileo week *\/$/;"	m	struct:__anon15
week	rtklib.h	/^    int week;           \/* GPS\/QZS: gps week, GAL: galileo week *\/$/;"	m	struct:__anon16
week	rtklib.h	/^    int week;           \/* RT17: week number *\/$/;"	m	struct:__anon62
windupcorr	rtkcmn.c	/^extern void windupcorr(gtime_t time, const double *rs, const double *rr,$/;"	f
wlbias	rtklib.h	/^    double wlbias[MAXSAT];     \/* wide-lane bias (cycle) *\/$/;"	m	struct:__anon43
word	rtklib.h	/^    unsigned int word;  \/* word buffer for rtcm 2 *\/$/;"	m	struct:__anon49
wp	stream.c	/^    int state,wp,rp;        \/* state,write\/read pointer *\/$/;"	m	struct:__anon67	file:
write_nav	streamsvr.c	/^static void write_nav(gtime_t time, stream_t *str, strconv_t *conv)$/;"	f	file:
write_nav_cycle	streamsvr.c	/^static void write_nav_cycle(stream_t *str, strconv_t *conv)$/;"	f	file:
write_obs	streamsvr.c	/^static void write_obs(gtime_t time, stream_t *str, strconv_t *conv)$/;"	f	file:
write_sta_cycle	streamsvr.c	/^static void write_sta_cycle(stream_t *str, strconv_t *conv)$/;"	f	file:
writefile	stream.c	/^static int writefile(file_t *file, unsigned char *buff, int n, char *msg)$/;"	f	file:
writentrip	stream.c	/^static int writentrip(ntrip_t *ntrip, unsigned char *buff, int n, char *msg)$/;"	f	file:
writeserial	stream.c	/^static int writeserial(serial_t *serial, unsigned char *buff, int n, char *msg)$/;"	f	file:
writeseribuff	stream.c	/^static int writeseribuff(serial_t *serial, unsigned char *buff, int n)$/;"	f	file:
writesol	rtksvr.c	/^static void writesol(rtksvr_t *svr, int index)$/;"	f	file:
writesolhead	rtksvr.c	/^static void writesolhead(stream_t *stream, const solopt_t *solopt)$/;"	f	file:
writetcpcli	stream.c	/^static int writetcpcli(tcpcli_t *tcpcli, unsigned char *buff, int n, char *msg)$/;"	f	file:
writetcpsvr	stream.c	/^static int writetcpsvr(tcpsvr_t *tcpsvr, unsigned char *buff, int n, char *msg)$/;"	f	file:
wtime	stream.c	/^    gtime_t wtime;          \/* write time *\/$/;"	m	struct:__anon68	file:
x	rtklib.h	/^    double *x, *P;      \/* float states and their covariance *\/$/;"	m	struct:__anon61
x	rtklib.h	/^    short x;            \/* longitude\/latitude (deg) *\/$/;"	m	struct:__anon35
x1	sbas.c	/^x1[]={-75,-65,-55,-50,-45,-40,-35,-30,-25,-20,-15,-10,- 5,  0,  5, 10, 15, 20,$/;"	v	file:
x2	sbas.c	/^x2[]={-55,-50,-45,-40,-35,-30,-25,-20,-15,-10, -5,  0,  5, 10, 15, 20, 25, 30,$/;"	v	file:
x3	sbas.c	/^x3[]={-75,-65,-55,-50,-45,-40,-35,-30,-25,-20,-15,-10,- 5,  0,  5, 10, 15, 20,$/;"	v	file:
x4	sbas.c	/^x4[]={-85,-75,-65,-55,-50,-45,-40,-35,-30,-25,-20,-15,-10,- 5,  0,  5, 10, 15,$/;"	v	file:
x5	sbas.c	/^x5[]={-180,-175,-170,-165,-160,-155,-150,-145,-140,-135,-130,-125,-120,-115,$/;"	v	file:
x6	sbas.c	/^x6[]={-180,-170,-160,-150,-140,-130,-120,-110,-100,- 90,- 80,- 70,- 60,- 50,$/;"	v	file:
x7	sbas.c	/^x7[]={-180,-150,-120,- 90,- 60,- 30,   0,  30,  60,  90, 120, 150},$/;"	v	file:
x8	sbas.c	/^x8[]={-170,-140,-110,- 80,- 50,- 20,  10,  40,  70, 100, 130, 160};$/;"	v	file:
xa	rtklib.h	/^    double *xa,*Pa;     \/* fixed states and their covariance *\/$/;"	m	struct:__anon61
xp	rtklib.h	/^    double xp,yp;       \/* pole offset (rad) *\/$/;"	m	struct:__anon11
xpr	rtklib.h	/^    double xpr,ypr;     \/* pole offset rate (rad\/day) *\/$/;"	m	struct:__anon11
xyz2enu	rtkcmn.c	/^extern void xyz2enu(const double *pos, double *E)$/;"	f
y	rtklib.h	/^    const short *y;     \/* latitudes\/longitudes (deg) *\/$/;"	m	struct:__anon35
yp	rtklib.h	/^    double xp,yp;       \/* pole offset (rad) *\/$/;"	m	struct:__anon11
ypr	rtklib.h	/^    double xpr,ypr;     \/* pole offset rate (rad\/day) *\/$/;"	m	struct:__anon11
zdres	rtkpos.c	/^static int zdres(int base, const obsd_t *obs, int n, const double *rs,$/;"	f	file:
zdres_sat	rtkpos.c	/^static void zdres_sat(int base, double r, const obsd_t *obs, const nav_t *nav,$/;"	f	file:
zeros	rtkcmn.c	/^extern double *zeros(int n, int m)$/;"	f
zwd	rtklib.h	/^    float zwd;          \/* zenith wet delay (m) *\/$/;"	m	struct:__anon26
zwd_t	rtklib.h	/^} zwd_t;$/;"	t	typeref:struct:__anon27
zwdd_t	rtklib.h	/^} zwdd_t;$/;"	t	typeref:struct:__anon26
